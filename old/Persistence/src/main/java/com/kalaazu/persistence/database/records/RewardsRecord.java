/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.records;


import com.kalaazu.persistence.database.tables.Rewards;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;


/**
 * All rewards available so there's no need of JSON.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RewardsRecord extends UpdatableRecordImpl<RewardsRecord> implements Record5<Short, Short, Integer, Double, String> {

    private static final long serialVersionUID = 119817952;

    /**
     * Create a detached RewardsRecord
     */
    public RewardsRecord() {
        super(Rewards.REWARDS);
    }

    /**
     * Create a detached, initialised RewardsRecord
     */
    public RewardsRecord(Short id, Short itemsId, Integer amount, Double probability, String comment) {
        super(Rewards.REWARDS);

        set(0, id);
        set(1, itemsId);
        set(2, amount);
        set(3, probability);
        set(4, comment);
    }

    /**
     * Getter for <code>kalaazu.rewards.id</code>. Primary Key.
     */
    public Short getId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>kalaazu.rewards.id</code>. Primary Key.
     */
    public void setId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>kalaazu.rewards.items_id</code>. Item to award.
     */
    public Short getItemsId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>kalaazu.rewards.items_id</code>. Item to award.
     */
    public void setItemsId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>kalaazu.rewards.amount</code>. Amount of items to award.
     */
    public Integer getAmount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>kalaazu.rewards.amount</code>. Amount of items to award.
     */
    public void setAmount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>kalaazu.rewards.probability</code>. Probability of awarding this item
     */
    public Double getProbability() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>kalaazu.rewards.probability</code>. Probability of awarding this item
     */
    public void setProbability(Double value) {
        set(3, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>kalaazu.rewards.comment</code>. Comment of the reward.
     */
    public String getComment() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>kalaazu.rewards.comment</code>. Comment of the reward.
     */
    public void setComment(String value) {
        set(4, value);
    }

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    @Override
    public Row5<Short, Short, Integer, Double, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Short, Short, Integer, Double, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return Rewards.REWARDS.ID;
    }

    @Override
    public Field<Short> field2() {
        return Rewards.REWARDS.ITEMS_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Rewards.REWARDS.AMOUNT;
    }

    @Override
    public Field<Double> field4() {
        return Rewards.REWARDS.PROBABILITY;
    }

    @Override
    public Field<String> field5() {
        return Rewards.REWARDS.COMMENT;
    }

    @Override
    public Short component1() {
        return getId();
    }

    @Override
    public Short component2() {
        return getItemsId();
    }

    @Override
    public Integer component3() {
        return getAmount();
    }

    @Override
    public Double component4() {
        return getProbability();
    }

    @Override
    public String component5() {
        return getComment();
    }

    @Override
    public Short value1() {
        return getId();
    }

    @Override
    public Short value2() {
        return getItemsId();
    }

    @Override
    public Integer value3() {
        return getAmount();
    }

    @Override
    public Double value4() {
        return getProbability();
    }

    @Override
    public String value5() {
        return getComment();
    }

    @Override
    public RewardsRecord value1(Short value) {
        setId(value);
        return this;
    }

    @Override
    public RewardsRecord value2(Short value) {
        setItemsId(value);
        return this;
    }

    @Override
    public RewardsRecord value3(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public RewardsRecord value4(Double value) {
        setProbability(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public RewardsRecord value5(String value) {
        setComment(value);
        return this;
    }

    @Override
    public RewardsRecord values(Short value1, Short value2, Integer value3, Double value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }
}
