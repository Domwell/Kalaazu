/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.tables;


import com.kalaazu.persistence.database.Indexes;
import com.kalaazu.persistence.database.Kalaazu;
import com.kalaazu.persistence.database.Keys;
import com.kalaazu.persistence.database.records.ClansNewsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * News of the clan.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ClansNews extends TableImpl<ClansNewsRecord> {

    /**
     * The reference instance of <code>kalaazu.clans_news</code>
     */
    public static final ClansNews CLANS_NEWS = new ClansNews();
    private static final long serialVersionUID = 1755356640;
    /**
     * The column <code>kalaazu.clans_news.id</code>. Primary Key.
     */
    public final TableField<ClansNewsRecord, Integer> ID = createField(
            DSL.name("id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false)
                                             .identity(true),
            this,
            "Primary Key."
    );
    /**
     * The column <code>kalaazu.clans_news.accounts_id</code>. Author.
     */
    public final TableField<ClansNewsRecord, Integer> ACCOUNTS_ID = createField(
            DSL.name("accounts_id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false),
            this,
            "Author."
    );
    /**
     * The column <code>kalaazu.clans_news.clans_id</code>.
     */
    public final TableField<ClansNewsRecord, Integer> CLANS_ID = createField(
            DSL.name("clans_id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false),
            this,
            ""
    );
    /**
     * The column <code>kalaazu.clans_news.date</code>. Creation date.
     */
    public final TableField<ClansNewsRecord, Timestamp> DATE = createField(
            DSL.name("date"),
            org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false)
                                               .defaultValue(org.jooq.impl.DSL.field(
                                                       "CURRENT_TIMESTAMP",
                                                       org.jooq.impl.SQLDataType.TIMESTAMP
                                               )),
            this,
            "Creation date."
    );
    /**
     * The column <code>kalaazu.clans_news.text</code>. News content.
     */
    public final TableField<ClansNewsRecord, String> TEXT = createField(
            DSL.name("text"),
            org.jooq.impl.SQLDataType.CLOB.nullable(false),
            this,
            "News content."
    );

    /**
     * Create a <code>kalaazu.clans_news</code> table reference
     */
    public ClansNews() {
        this(DSL.name("clans_news"), null);
    }

    /**
     * Create an aliased <code>kalaazu.clans_news</code> table reference
     */
    public ClansNews(String alias) {
        this(DSL.name(alias), CLANS_NEWS);
    }

    /**
     * Create an aliased <code>kalaazu.clans_news</code> table reference
     */
    public ClansNews(Name alias) {
        this(alias, CLANS_NEWS);
    }

    private ClansNews(Name alias, Table<ClansNewsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClansNews(Name alias, Table<ClansNewsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("News of the clan."));
    }

    public <O extends Record> ClansNews(Table<O> child, ForeignKey<O, ClansNewsRecord> key) {
        super(child, key, CLANS_NEWS);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClansNewsRecord> getRecordType() {
        return ClansNewsRecord.class;
    }

    @Override
    public Schema getSchema() {
        return Kalaazu.KALAAZU;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(
                Indexes.CLANS_NEWS_CLANS_NEWS_ACCOUNTS_ID_IDX,
                Indexes.CLANS_NEWS_CLANS_NEWS_CLANS_ID_IDX,
                Indexes.CLANS_NEWS_PRIMARY
        );
    }

    @Override
    public Identity<ClansNewsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLANS_NEWS;
    }

    @Override
    public UniqueKey<ClansNewsRecord> getPrimaryKey() {
        return Keys.KEY_CLANS_NEWS_PRIMARY;
    }

    @Override
    public List<UniqueKey<ClansNewsRecord>> getKeys() {
        return Arrays.<UniqueKey<ClansNewsRecord>>asList(Keys.KEY_CLANS_NEWS_PRIMARY);
    }

    @Override
    public List<ForeignKey<ClansNewsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClansNewsRecord, ?>>asList(Keys.CLANS_NEWS_ACCOUNTS, Keys.CLANS_NEWS_CLANS);
    }

    public Accounts accounts() {
        return new Accounts(this, Keys.CLANS_NEWS_ACCOUNTS);
    }

    public Clans clans() {
        return new Clans(this, Keys.CLANS_NEWS_CLANS);
    }

    @Override
    public ClansNews as(String alias) {
        return new ClansNews(DSL.name(alias), this);
    }

    @Override
    public ClansNews as(Name alias) {
        return new ClansNews(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClansNews rename(String name) {
        return new ClansNews(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClansNews rename(Name name) {
        return new ClansNews(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Timestamp, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
