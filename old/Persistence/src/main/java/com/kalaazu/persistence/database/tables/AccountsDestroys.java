/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.tables;


import com.kalaazu.persistence.database.Indexes;
import com.kalaazu.persistence.database.Kalaazu;
import com.kalaazu.persistence.database.Keys;
import com.kalaazu.persistence.database.records.AccountsDestroysRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * Account's destroy history.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AccountsDestroys extends TableImpl<AccountsDestroysRecord> {

    /**
     * The reference instance of <code>kalaazu.accounts_destroys</code>
     */
    public static final AccountsDestroys ACCOUNTS_DESTROYS = new AccountsDestroys();
    private static final long serialVersionUID = -290083941;
    /**
     * The column <code>kalaazu.accounts_destroys.id</code>. Primary Key.
     */
    public final TableField<AccountsDestroysRecord, Integer> ID = createField(
            DSL.name("id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true),
            this,
            "Primary Key."
    );
    /**
     * The column <code>kalaazu.accounts_destroys.accounts_id</code>.
     */
    public final TableField<AccountsDestroysRecord, Integer> ACCOUNTS_ID = createField(
            DSL.name("accounts_id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false),
            this,
            ""
    );
    /**
     * The column <code>kalaazu.accounts_destroys.ships_id</code>.
     */
    public final TableField<AccountsDestroysRecord, Byte> SHIPS_ID = createField(
            DSL.name("ships_id"),
            org.jooq.impl.SQLDataType.TINYINT.nullable(false),
            this,
            ""
    );
    /**
     * The column <code>kalaazu.accounts_destroys.points</code>. Rank points received for destroying this ship.
     */
    public final TableField<AccountsDestroysRecord, Short> POINTS = createField(
            DSL.name("points"),
            org.jooq.impl.SQLDataType.SMALLINT.nullable(false)
                                              .defaultValue(org.jooq.impl.DSL.field(
                                                      "0",
                                                      org.jooq.impl.SQLDataType.SMALLINT
                                              )),
            this,
            "Rank points received for destroying this ship."
    );
    /**
     * The column <code>kalaazu.accounts_destroys.amount</code>. Times this ship has been destroyed
     */
    public final TableField<AccountsDestroysRecord, Short> AMOUNT = createField(
            DSL.name("amount"),
            org.jooq.impl.SQLDataType.SMALLINT.nullable(false)
                                              .defaultValue(org.jooq.impl.DSL.field(
                                                      "0",
                                                      org.jooq.impl.SQLDataType.SMALLINT
                                              )),
            this,
            "Times this ship has been destroyed"
    );

    /**
     * Create a <code>kalaazu.accounts_destroys</code> table reference
     */
    public AccountsDestroys() {
        this(DSL.name("accounts_destroys"), null);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_destroys</code> table reference
     */
    public AccountsDestroys(String alias) {
        this(DSL.name(alias), ACCOUNTS_DESTROYS);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_destroys</code> table reference
     */
    public AccountsDestroys(Name alias) {
        this(alias, ACCOUNTS_DESTROYS);
    }

    private AccountsDestroys(Name alias, Table<AccountsDestroysRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountsDestroys(Name alias, Table<AccountsDestroysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Account's destroy history."));
    }

    public <O extends Record> AccountsDestroys(Table<O> child, ForeignKey<O, AccountsDestroysRecord> key) {
        super(child, key, ACCOUNTS_DESTROYS);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsDestroysRecord> getRecordType() {
        return AccountsDestroysRecord.class;
    }

    @Override
    public Schema getSchema() {
        return Kalaazu.KALAAZU;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(
                Indexes.ACCOUNTS_DESTROYS_ACCOUNTS_DESTROYS_ACCOUNTS_ID_IDX,
                Indexes.ACCOUNTS_DESTROYS_PRIMARY
        );
    }

    @Override
    public Identity<AccountsDestroysRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACCOUNTS_DESTROYS;
    }

    @Override
    public UniqueKey<AccountsDestroysRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNTS_DESTROYS_PRIMARY;
    }

    @Override
    public List<UniqueKey<AccountsDestroysRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsDestroysRecord>>asList(
                Keys.KEY_ACCOUNTS_DESTROYS_PRIMARY,
                Keys.KEY_ACCOUNTS_DESTROYS_ACCOUNTS_DESTROYS_ACCOUNTS_ID_IDX
        );
    }

    @Override
    public List<ForeignKey<AccountsDestroysRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AccountsDestroysRecord, ?>>asList(Keys.ACCOUNTS_DESTROYS_ACCOUNTS);
    }

    public Accounts accounts() {
        return new Accounts(this, Keys.ACCOUNTS_DESTROYS_ACCOUNTS);
    }

    @Override
    public AccountsDestroys as(String alias) {
        return new AccountsDestroys(DSL.name(alias), this);
    }

    @Override
    public AccountsDestroys as(Name alias) {
        return new AccountsDestroys(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsDestroys rename(String name) {
        return new AccountsDestroys(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsDestroys rename(Name name) {
        return new AccountsDestroys(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Byte, Short, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
