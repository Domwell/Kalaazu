/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.records;


import com.kalaazu.persistence.database.tables.TradeItems;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;


/**
 * Trade items.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TradeItemsRecord extends UpdatableRecordImpl<TradeItemsRecord> implements Record5<Short, Short, Integer, Integer, Byte> {

    private static final long serialVersionUID = -1836753764;

    /**
     * Create a detached TradeItemsRecord
     */
    public TradeItemsRecord() {
        super(TradeItems.TRADE_ITEMS);
    }

    /**
     * Create a detached, initialised TradeItemsRecord
     */
    public TradeItemsRecord(Short id, Short itemsId, Integer accountsId, Integer price, Byte type) {
        super(TradeItems.TRADE_ITEMS);

        set(0, id);
        set(1, itemsId);
        set(2, accountsId);
        set(3, price);
        set(4, type);
    }

    /**
     * Getter for <code>kalaazu.trade_items.id</code>. Primary Key.
     */
    public Short getId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>kalaazu.trade_items.id</code>. Primary Key.
     */
    public void setId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>kalaazu.trade_items.items_id</code>.
     */
    public Short getItemsId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>kalaazu.trade_items.items_id</code>.
     */
    public void setItemsId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>kalaazu.trade_items.accounts_id</code>.
     */
    public Integer getAccountsId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>kalaazu.trade_items.accounts_id</code>.
     */
    public void setAccountsId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>kalaazu.trade_items.price</code>.
     */
    public Integer getPrice() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>kalaazu.trade_items.price</code>.
     */
    public void setPrice(Integer value) {
        set(3, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>kalaazu.trade_items.type</code>. 0 = hourly, 1 = daily, 3 = weekly
     */
    public Byte getType() {
        return (Byte) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>kalaazu.trade_items.type</code>. 0 = hourly, 1 = daily, 3 = weekly
     */
    public void setType(Byte value) {
        set(4, value);
    }

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    @Override
    public Row5<Short, Short, Integer, Integer, Byte> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Short, Short, Integer, Integer, Byte> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return TradeItems.TRADE_ITEMS.ID;
    }

    @Override
    public Field<Short> field2() {
        return TradeItems.TRADE_ITEMS.ITEMS_ID;
    }

    @Override
    public Field<Integer> field3() {
        return TradeItems.TRADE_ITEMS.ACCOUNTS_ID;
    }

    @Override
    public Field<Integer> field4() {
        return TradeItems.TRADE_ITEMS.PRICE;
    }

    @Override
    public Field<Byte> field5() {
        return TradeItems.TRADE_ITEMS.TYPE;
    }

    @Override
    public Short component1() {
        return getId();
    }

    @Override
    public Short component2() {
        return getItemsId();
    }

    @Override
    public Integer component3() {
        return getAccountsId();
    }

    @Override
    public Integer component4() {
        return getPrice();
    }

    @Override
    public Byte component5() {
        return getType();
    }

    @Override
    public Short value1() {
        return getId();
    }

    @Override
    public Short value2() {
        return getItemsId();
    }

    @Override
    public Integer value3() {
        return getAccountsId();
    }

    @Override
    public Integer value4() {
        return getPrice();
    }

    @Override
    public Byte value5() {
        return getType();
    }

    @Override
    public TradeItemsRecord value1(Short value) {
        setId(value);
        return this;
    }

    @Override
    public TradeItemsRecord value2(Short value) {
        setItemsId(value);
        return this;
    }

    @Override
    public TradeItemsRecord value3(Integer value) {
        setAccountsId(value);
        return this;
    }

    @Override
    public TradeItemsRecord value4(Integer value) {
        setPrice(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public TradeItemsRecord value5(Byte value) {
        setType(value);
        return this;
    }

    @Override
    public TradeItemsRecord values(Short value1, Short value2, Integer value3, Integer value4, Byte value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }
}
