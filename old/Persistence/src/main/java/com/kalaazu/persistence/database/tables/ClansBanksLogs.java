/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.tables;


import com.kalaazu.persistence.database.Indexes;
import com.kalaazu.persistence.database.Kalaazu;
import com.kalaazu.persistence.database.Keys;
import com.kalaazu.persistence.database.records.ClansBanksLogsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * Logs from clan's bank.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ClansBanksLogs extends TableImpl<ClansBanksLogsRecord> {

    /**
     * The reference instance of <code>kalaazu.clans_banks_logs</code>
     */
    public static final ClansBanksLogs CLANS_BANKS_LOGS = new ClansBanksLogs();
    private static final long serialVersionUID = -490507511;
    /**
     * The column <code>kalaazu.clans_banks_logs.id</code>. Primary Key.
     */
    public final TableField<ClansBanksLogsRecord, Integer> ID = createField(
            DSL.name("id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true),
            this,
            "Primary Key."
    );
    /**
     * The column <code>kalaazu.clans_banks_logs.clans_banks_id</code>.
     */
    public final TableField<ClansBanksLogsRecord, Integer> CLANS_BANKS_ID = createField(
            DSL.name("clans_banks_id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false),
            this,
            ""
    );
    /**
     * The column <code>kalaazu.clans_banks_logs.from_accounts_id</code>. Account that made the log.
     */
    public final TableField<ClansBanksLogsRecord, Integer> FROM_ACCOUNTS_ID = createField(
            DSL.name("from_accounts_id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false),
            this,
            "Account that made the log."
    );
    /**
     * The column <code>kalaazu.clans_banks_logs.to_accounts_id</code>.
     */
    public final TableField<ClansBanksLogsRecord, Integer> TO_ACCOUNTS_ID = createField(
            DSL.name("to_accounts_id"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false),
            this,
            ""
    );
    /**
     * The column <code>kalaazu.clans_banks_logs.date</code>.
     */
    public final TableField<ClansBanksLogsRecord, Timestamp> DATE = createField(
            DSL.name("date"),
            org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false)
                                               .defaultValue(org.jooq.impl.DSL.field(
                                                       "CURRENT_TIMESTAMP",
                                                       org.jooq.impl.SQLDataType.TIMESTAMP
                                               )),
            this,
            ""
    );
    /**
     * The column <code>kalaazu.clans_banks_logs.type</code>. Log type. 0 = withdraw, 1 = deposit, 2 = donation.
     */
    public final TableField<ClansBanksLogsRecord, Byte> TYPE = createField(
            DSL.name("type"),
            org.jooq.impl.SQLDataType.TINYINT.nullable(false)
                                             .defaultValue(org.jooq.impl.DSL.field(
                                                     "0",
                                                     org.jooq.impl.SQLDataType.TINYINT
                                             )),
            this,
            "Log type. 0 = withdraw, 1 = deposit, 2 = donation."
    );
    /**
     * The column <code>kalaazu.clans_banks_logs.amount</code>. Amount of currency logged.
     */
    public final TableField<ClansBanksLogsRecord, Integer> AMOUNT = createField(
            DSL.name("amount"),
            org.jooq.impl.SQLDataType.INTEGER.nullable(false)
                                             .defaultValue(org.jooq.impl.DSL.field(
                                                     "0",
                                                     org.jooq.impl.SQLDataType.INTEGER
                                             )),
            this,
            "Amount of currency logged."
    );
    /**
     * The column <code>kalaazu.clans_banks_logs.currency</code>. Currency of the amount. 0 = credits, 1 = uridium.
     */
    public final TableField<ClansBanksLogsRecord, Byte> CURRENCY = createField(
            DSL.name("currency"),
            org.jooq.impl.SQLDataType.TINYINT.nullable(false)
                                             .defaultValue(org.jooq.impl.DSL.field(
                                                     "0",
                                                     org.jooq.impl.SQLDataType.TINYINT
                                             )),
            this,
            "Currency of the amount. 0 = credits, 1 = uridium."
    );

    /**
     * Create a <code>kalaazu.clans_banks_logs</code> table reference
     */
    public ClansBanksLogs() {
        this(DSL.name("clans_banks_logs"), null);
    }

    /**
     * Create an aliased <code>kalaazu.clans_banks_logs</code> table reference
     */
    public ClansBanksLogs(String alias) {
        this(DSL.name(alias), CLANS_BANKS_LOGS);
    }

    /**
     * Create an aliased <code>kalaazu.clans_banks_logs</code> table reference
     */
    public ClansBanksLogs(Name alias) {
        this(alias, CLANS_BANKS_LOGS);
    }

    private ClansBanksLogs(Name alias, Table<ClansBanksLogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClansBanksLogs(Name alias, Table<ClansBanksLogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Logs from clan's bank."));
    }

    public <O extends Record> ClansBanksLogs(Table<O> child, ForeignKey<O, ClansBanksLogsRecord> key) {
        super(child, key, CLANS_BANKS_LOGS);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClansBanksLogsRecord> getRecordType() {
        return ClansBanksLogsRecord.class;
    }

    @Override
    public Schema getSchema() {
        return Kalaazu.KALAAZU;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(
                Indexes.CLANS_BANKS_LOGS_CLANS_BANKS_LOGS_CLANS_BANKS_ID_IDX,
                Indexes.CLANS_BANKS_LOGS_CLANS_BANKS_LOGS_FROM_ACCOUNTS_ID_IDX,
                Indexes.CLANS_BANKS_LOGS_CLANS_BANKS_LOGS_TO_ACCOUNTS_ID_IDX,
                Indexes.CLANS_BANKS_LOGS_PRIMARY
        );
    }

    @Override
    public Identity<ClansBanksLogsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLANS_BANKS_LOGS;
    }

    @Override
    public UniqueKey<ClansBanksLogsRecord> getPrimaryKey() {
        return Keys.KEY_CLANS_BANKS_LOGS_PRIMARY;
    }

    @Override
    public List<UniqueKey<ClansBanksLogsRecord>> getKeys() {
        return Arrays.<UniqueKey<ClansBanksLogsRecord>>asList(Keys.KEY_CLANS_BANKS_LOGS_PRIMARY);
    }

    @Override
    public List<ForeignKey<ClansBanksLogsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClansBanksLogsRecord, ?>>asList(
                Keys.CLANS_BANKS_LOGS_CLANS_BANKS,
                Keys.CLANS_BANKS_LOGS_FROM_ACCOUNTS,
                Keys.CLANS_BANKS_LOGS_TO_ACCOUNTS
        );
    }

    public ClansBanks clansBanks() {
        return new ClansBanks(this, Keys.CLANS_BANKS_LOGS_CLANS_BANKS);
    }

    public Accounts clansBanksLogsFromAccounts() {
        return new Accounts(this, Keys.CLANS_BANKS_LOGS_FROM_ACCOUNTS);
    }

    public Accounts clansBanksLogsToAccounts() {
        return new Accounts(this, Keys.CLANS_BANKS_LOGS_TO_ACCOUNTS);
    }

    @Override
    public ClansBanksLogs as(String alias) {
        return new ClansBanksLogs(DSL.name(alias), this);
    }

    @Override
    public ClansBanksLogs as(Name alias) {
        return new ClansBanksLogs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClansBanksLogs rename(String name) {
        return new ClansBanksLogs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClansBanksLogs rename(Name name) {
        return new ClansBanksLogs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, Integer, Timestamp, Byte, Integer, Byte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
