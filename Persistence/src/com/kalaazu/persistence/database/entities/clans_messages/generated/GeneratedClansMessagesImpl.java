package com.kalaazu.persistence.database.entities.clans_messages.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.Clans;
import com.kalaazu.persistence.database.entities.ClansMessages;
import com.kalaazu.persistence.database.mappers.MessageStatus;
import com.speedment.common.annotation.GeneratedCode;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.runtime.core.util.OptionalUtil;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * ClansMessages}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedClansMessagesImpl implements ClansMessages {

    private int           id;

    private int           clansId;

    private int           fromAccountsId;

    private MessageStatus fromStatus;

    private Integer       toAccountsId;

    private MessageStatus toStatus;

    private String        title;

    private String        text;

    private Timestamp     date;

    protected GeneratedClansMessagesImpl() {

    }

    @Override
    public Integer getId() {
        return id;
    }

    @Override
    public int getClansId() {
        return clansId;
    }

    @Override
    public int getFromAccountsId() {
        return fromAccountsId;
    }

    @Override
    public MessageStatus getFromStatus() {
        return fromStatus;
    }

    @Override
    public OptionalInt getToAccountsId() {
        return OptionalUtil.ofNullable(toAccountsId);
    }

    @Override
    public MessageStatus getToStatus() {
        return toStatus;
    }

    @Override
    public String getTitle() {
        return title;
    }

    @Override
    public String getText() {
        return text;
    }

    @Override
    public Timestamp getDate() {
        return date;
    }

    @Override
    public ClansMessages setId(int id) {
        this.id = id;
        return this;
    }

    @Override
    public ClansMessages setClansId(int clansId) {
        this.clansId = clansId;
        return this;
    }

    @Override
    public ClansMessages setFromAccountsId(int fromAccountsId) {
        this.fromAccountsId = fromAccountsId;
        return this;
    }

    @Override
    public ClansMessages setFromStatus(MessageStatus fromStatus) {
        this.fromStatus = fromStatus;
        return this;
    }

    @Override
    public ClansMessages setToAccountsId(Integer toAccountsId) {
        this.toAccountsId = toAccountsId;
        return this;
    }

    @Override
    public ClansMessages setToStatus(MessageStatus toStatus) {
        this.toStatus = toStatus;
        return this;
    }

    @Override
    public ClansMessages setTitle(String title) {
        this.title = title;
        return this;
    }

    @Override
    public ClansMessages setText(String text) {
        this.text = text;
        return this;
    }

    @Override
    public ClansMessages setDate(Timestamp date) {
        this.date = date;
        return this;
    }

    @Override
    public Clans findClansId(Manager<Clans> foreignManager) {
        return foreignManager.stream()
                             .filter(Clans.ID.equal(getClansId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Accounts findFromAccountsId(Manager<Accounts> foreignManager) {
        return foreignManager.stream()
                             .filter(Accounts.ID.equal(getFromAccountsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Optional<Accounts> findToAccountsId(Manager<Accounts> foreignManager) {
        if (getToAccountsId().isPresent()) {
            return foreignManager.stream()
                                 .filter(Accounts.ID.equal(getToAccountsId().getAsInt()))
                                 .findAny();
        } else {
            return Optional.empty();
        }
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("clansId = " + Objects.toString(getClansId()));
        sj.add("fromAccountsId = " + Objects.toString(getFromAccountsId()));
        sj.add("fromStatus = " + Objects.toString(getFromStatus()));
        sj.add("toAccountsId = " + Objects.toString(OptionalUtil.unwrap(getToAccountsId())));
        sj.add("toStatus = " + Objects.toString(getToStatus()));
        sj.add("title = " + Objects.toString(getTitle()));
        sj.add("text = " + Objects.toString(getText()));
        sj.add("date = " + Objects.toString(getDate()));
        return "ClansMessagesImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof ClansMessages)) {
            return false;
        }
        final ClansMessages thatClansMessages = (ClansMessages) that;
        if (this.getId() != thatClansMessages.getId()) {
            return false;
        }
        if (this.getClansId() != thatClansMessages.getClansId()) {
            return false;
        }
        if (this.getFromAccountsId() != thatClansMessages.getFromAccountsId()) {
            return false;
        }
        if (!Objects.equals(this.getFromStatus(), thatClansMessages.getFromStatus())) {
            return false;
        }
        if (!Objects.equals(this.getToAccountsId(), thatClansMessages.getToAccountsId())) {
            return false;
        }
        if (!Objects.equals(this.getToStatus(), thatClansMessages.getToStatus())) {
            return false;
        }
        if (!Objects.equals(this.getTitle(), thatClansMessages.getTitle())) {
            return false;
        }
        if (!Objects.equals(this.getText(), thatClansMessages.getText())) {
            return false;
        }
        if (!Objects.equals(this.getDate(), thatClansMessages.getDate())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getClansId());
        hash = 31 * hash + Integer.hashCode(getFromAccountsId());
        hash = 31 * hash + Objects.hashCode(getFromStatus());
        hash = 31 * hash + Objects.hashCode(getToAccountsId());
        hash = 31 * hash + Objects.hashCode(getToStatus());
        hash = 31 * hash + Objects.hashCode(getTitle());
        hash = 31 * hash + Objects.hashCode(getText());
        hash = 31 * hash + Objects.hashCode(getDate());
        return hash;
    }
}