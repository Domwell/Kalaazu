package com.manulaiko.kalaazu.persistence.database.entities.rewards_quests.generated;

import com.manulaiko.kalaazu.persistence.database.entities.quests.Quests;
import com.manulaiko.kalaazu.persistence.database.entities.rewards.Rewards;
import com.manulaiko.kalaazu.persistence.database.entities.rewards_quests.RewardsQuests;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.rewards_quests.RewardsQuests}-interface
 * representing entities of the {@code rewards_quests}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedRewardsQuests {
    
    /**
     * This Field corresponds to the {@link RewardsQuests} field that can be
     * obtained using the {@link RewardsQuests#getId()} method.
     */
    IntField<RewardsQuests, Integer> ID = IntField.create(
        Identifier.ID,
        RewardsQuests::getId,
        RewardsQuests::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link RewardsQuests} field that can be
     * obtained using the {@link RewardsQuests#getQuestsId()} method.
     */
    IntForeignKeyField<RewardsQuests, Integer, Quests> QUESTS_ID = IntForeignKeyField.create(
        Identifier.QUESTS_ID,
        RewardsQuests::getQuestsId,
        RewardsQuests::setQuestsId,
        Quests.ID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link RewardsQuests} field that can be
     * obtained using the {@link RewardsQuests#getRewardsId()} method.
     */
    IntForeignKeyField<RewardsQuests, Integer, Rewards> REWARDS_ID = IntForeignKeyField.create(
        Identifier.REWARDS_ID,
        RewardsQuests::getRewardsId,
        RewardsQuests::setRewardsId,
        Rewards.ID,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the id of this RewardsQuests. The id field corresponds to the
     * database column kalaazu.kalaazu.rewards_quests.id.
     * 
     * @return the id of this RewardsQuests
     */
    int getId();
    
    /**
     * Returns the questsId of this RewardsQuests. The questsId field
     * corresponds to the database column
     * kalaazu.kalaazu.rewards_quests.quests_id.
     * 
     * @return the questsId of this RewardsQuests
     */
    int getQuestsId();
    
    /**
     * Returns the rewardsId of this RewardsQuests. The rewardsId field
     * corresponds to the database column
     * kalaazu.kalaazu.rewards_quests.rewards_id.
     * 
     * @return the rewardsId of this RewardsQuests
     */
    int getRewardsId();
    
    /**
     * Sets the id of this RewardsQuests. The id field corresponds to the
     * database column kalaazu.kalaazu.rewards_quests.id.
     * 
     * @param id to set of this RewardsQuests
     * @return   this RewardsQuests instance
     */
    RewardsQuests setId(int id);
    
    /**
     * Sets the questsId of this RewardsQuests. The questsId field corresponds
     * to the database column kalaazu.kalaazu.rewards_quests.quests_id.
     * 
     * @param questsId to set of this RewardsQuests
     * @return         this RewardsQuests instance
     */
    RewardsQuests setQuestsId(int questsId);
    
    /**
     * Sets the rewardsId of this RewardsQuests. The rewardsId field corresponds
     * to the database column kalaazu.kalaazu.rewards_quests.rewards_id.
     * 
     * @param rewardsId to set of this RewardsQuests
     * @return          this RewardsQuests instance
     */
    RewardsQuests setRewardsId(int rewardsId);
    
    /**
     * Queries the specified manager for the referenced Quests. If no such
     * Quests exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Quests findQuestsId(Manager<Quests> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Rewards. If no such
     * Rewards exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Rewards findRewardsId(Manager<Rewards> foreignManager);
    
    enum Identifier implements ColumnIdentifier<RewardsQuests> {
        
        ID         ("id"),
        QUESTS_ID  ("quests_id"),
        REWARDS_ID ("rewards_id");
        
        private final String columnName;
        private final TableIdentifier<RewardsQuests> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "kalaazu";
        }
        
        @Override
        public String getSchemaName() {
            return "kalaazu";
        }
        
        @Override
        public String getTableName() {
            return "rewards_quests";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<RewardsQuests> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}