package com.manulaiko.kalaazu.persistence.database.entities.rewards_ships.generated;

import com.manulaiko.kalaazu.persistence.database.entities.rewards.Rewards;
import com.manulaiko.kalaazu.persistence.database.entities.rewards_ships.RewardsShips;
import com.manulaiko.kalaazu.persistence.database.entities.ships.Ships;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.rewards_ships.RewardsShips}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRewardsShipsImpl implements RewardsShips {
    
    private int id;
    private int shipsId;
    private int rewardsId;
    
    protected GeneratedRewardsShipsImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public int getShipsId() {
        return shipsId;
    }
    
    @Override
    public int getRewardsId() {
        return rewardsId;
    }
    
    @Override
    public RewardsShips setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public RewardsShips setShipsId(int shipsId) {
        this.shipsId = shipsId;
        return this;
    }
    
    @Override
    public RewardsShips setRewardsId(int rewardsId) {
        this.rewardsId = rewardsId;
        return this;
    }
    
    @Override
    public Ships findShipsId(Manager<Ships> foreignManager) {
        return foreignManager.stream().filter(Ships.ID.equal(getShipsId())).findAny().orElse(null);
    }
    
    @Override
    public Rewards findRewardsId(Manager<Rewards> foreignManager) {
        return foreignManager.stream().filter(Rewards.ID.equal(getRewardsId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "        + Objects.toString(getId()));
        sj.add("shipsId = "   + Objects.toString(getShipsId()));
        sj.add("rewardsId = " + Objects.toString(getRewardsId()));
        return "RewardsShipsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof RewardsShips)) { return false; }
        final RewardsShips thatRewardsShips = (RewardsShips)that;
        if (this.getId() != thatRewardsShips.getId()) {return false; }
        if (this.getShipsId() != thatRewardsShips.getShipsId()) {return false; }
        if (this.getRewardsId() != thatRewardsShips.getRewardsId()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getShipsId());
        hash = 31 * hash + Integer.hashCode(getRewardsId());
        return hash;
    }
}