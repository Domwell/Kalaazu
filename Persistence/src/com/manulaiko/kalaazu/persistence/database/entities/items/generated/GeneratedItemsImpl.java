package com.manulaiko.kalaazu.persistence.database.entities.items.generated;

import com.manulaiko.kalaazu.persistence.database.entities.items.Items;
import com.speedment.common.annotation.GeneratedCode;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.items.Items}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedItemsImpl implements Items {
    
    private int id;
    private String name;
    private String category;
    private String description;
    private int price;
    private String type;
    private boolean isElite;
    private boolean isEvent;
    private boolean isBuyable;
    
    protected GeneratedItemsImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public String getCategory() {
        return category;
    }
    
    @Override
    public String getDescription() {
        return description;
    }
    
    @Override
    public int getPrice() {
        return price;
    }
    
    @Override
    public String getType() {
        return type;
    }
    
    @Override
    public boolean getIsElite() {
        return isElite;
    }
    
    @Override
    public boolean getIsEvent() {
        return isEvent;
    }
    
    @Override
    public boolean getIsBuyable() {
        return isBuyable;
    }
    
    @Override
    public Items setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Items setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public Items setCategory(String category) {
        this.category = category;
        return this;
    }
    
    @Override
    public Items setDescription(String description) {
        this.description = description;
        return this;
    }
    
    @Override
    public Items setPrice(int price) {
        this.price = price;
        return this;
    }
    
    @Override
    public Items setType(String type) {
        this.type = type;
        return this;
    }
    
    @Override
    public Items setIsElite(boolean isElite) {
        this.isElite = isElite;
        return this;
    }
    
    @Override
    public Items setIsEvent(boolean isEvent) {
        this.isEvent = isEvent;
        return this;
    }
    
    @Override
    public Items setIsBuyable(boolean isBuyable) {
        this.isBuyable = isBuyable;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "          + Objects.toString(getId()));
        sj.add("name = "        + Objects.toString(getName()));
        sj.add("category = "    + Objects.toString(getCategory()));
        sj.add("description = " + Objects.toString(getDescription()));
        sj.add("price = "       + Objects.toString(getPrice()));
        sj.add("type = "        + Objects.toString(getType()));
        sj.add("isElite = "     + Objects.toString(getIsElite()));
        sj.add("isEvent = "     + Objects.toString(getIsEvent()));
        sj.add("isBuyable = "   + Objects.toString(getIsBuyable()));
        return "ItemsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Items)) { return false; }
        final Items thatItems = (Items)that;
        if (this.getId() != thatItems.getId()) {return false; }
        if (!Objects.equals(this.getName(), thatItems.getName())) {return false; }
        if (!Objects.equals(this.getCategory(), thatItems.getCategory())) {return false; }
        if (!Objects.equals(this.getDescription(), thatItems.getDescription())) {return false; }
        if (this.getPrice() != thatItems.getPrice()) {return false; }
        if (!Objects.equals(this.getType(), thatItems.getType())) {return false; }
        if (this.getIsElite() != thatItems.getIsElite()) {return false; }
        if (this.getIsEvent() != thatItems.getIsEvent()) {return false; }
        if (this.getIsBuyable() != thatItems.getIsBuyable()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getCategory());
        hash = 31 * hash + Objects.hashCode(getDescription());
        hash = 31 * hash + Integer.hashCode(getPrice());
        hash = 31 * hash + Objects.hashCode(getType());
        hash = 31 * hash + Boolean.hashCode(getIsElite());
        hash = 31 * hash + Boolean.hashCode(getIsEvent());
        hash = 31 * hash + Boolean.hashCode(getIsBuyable());
        return hash;
    }
}