package com.manulaiko.kalaazu.persistence.database.entities.invitation_codes.generated;

import com.manulaiko.kalaazu.persistence.database.entities.invitation_codes.InvitationCodes;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.invitation_codes.InvitationCodes}-interface
 * representing entities of the {@code invitation_codes}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedInvitationCodes {
    
    /**
     * This Field corresponds to the {@link InvitationCodes} field that can be
     * obtained using the {@link InvitationCodes#getId()} method.
     */
    IntField<InvitationCodes, Integer> ID = IntField.create(
        Identifier.ID,
        InvitationCodes::getId,
        InvitationCodes::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link InvitationCodes} field that can be
     * obtained using the {@link InvitationCodes#getCode()} method.
     */
    StringField<InvitationCodes, String> CODE = StringField.create(
        Identifier.CODE,
        InvitationCodes::getCode,
        InvitationCodes::setCode,
        TypeMapper.identity(),
        true
    );
    /**
     * This Field corresponds to the {@link InvitationCodes} field that can be
     * obtained using the {@link InvitationCodes#getLimit()} method.
     */
    IntField<InvitationCodes, Integer> LIMIT = IntField.create(
        Identifier.LIMIT,
        InvitationCodes::getLimit,
        InvitationCodes::setLimit,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the id of this InvitationCodes. The id field corresponds to the
     * database column kalaazu.kalaazu.invitation_codes.id.
     * 
     * @return the id of this InvitationCodes
     */
    int getId();
    
    /**
     * Returns the code of this InvitationCodes. The code field corresponds to
     * the database column kalaazu.kalaazu.invitation_codes.code.
     * 
     * @return the code of this InvitationCodes
     */
    String getCode();
    
    /**
     * Returns the limit of this InvitationCodes. The limit field corresponds to
     * the database column kalaazu.kalaazu.invitation_codes.limit.
     * 
     * @return the limit of this InvitationCodes
     */
    int getLimit();
    
    /**
     * Sets the id of this InvitationCodes. The id field corresponds to the
     * database column kalaazu.kalaazu.invitation_codes.id.
     * 
     * @param id to set of this InvitationCodes
     * @return   this InvitationCodes instance
     */
    InvitationCodes setId(int id);
    
    /**
     * Sets the code of this InvitationCodes. The code field corresponds to the
     * database column kalaazu.kalaazu.invitation_codes.code.
     * 
     * @param code to set of this InvitationCodes
     * @return     this InvitationCodes instance
     */
    InvitationCodes setCode(String code);
    
    /**
     * Sets the limit of this InvitationCodes. The limit field corresponds to
     * the database column kalaazu.kalaazu.invitation_codes.limit.
     * 
     * @param limit to set of this InvitationCodes
     * @return      this InvitationCodes instance
     */
    InvitationCodes setLimit(int limit);
    
    enum Identifier implements ColumnIdentifier<InvitationCodes> {
        
        ID    ("id"),
        CODE  ("code"),
        LIMIT ("limit");
        
        private final String columnName;
        private final TableIdentifier<InvitationCodes> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "kalaazu";
        }
        
        @Override
        public String getSchemaName() {
            return "kalaazu";
        }
        
        @Override
        public String getTableName() {
            return "invitation_codes";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<InvitationCodes> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}