package com.manulaiko.kalaazu.persistence.database.entities.skylab_modules.generated;

import com.manulaiko.kalaazu.persistence.database.entities.skylab_modules.SkylabModules;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import java.math.BigDecimal;

/**
 * The generated base for the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.skylab_modules.SkylabModules}-interface
 * representing entities of the {@code skylab_modules}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedSkylabModules {
    
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getId()} method.
     */
    IntField<SkylabModules, Integer> ID = IntField.create(
        Identifier.ID,
        SkylabModules::getId,
        SkylabModules::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getName()} method.
     */
    StringField<SkylabModules, String> NAME = StringField.create(
        Identifier.NAME,
        SkylabModules::getName,
        SkylabModules::setName,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getProductionFactor()} method.
     */
    ComparableField<SkylabModules, BigDecimal, BigDecimal> PRODUCTION_FACTOR = ComparableField.create(
        Identifier.PRODUCTION_FACTOR,
        SkylabModules::getProductionFactor,
        SkylabModules::setProductionFactor,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getProductionBase()} method.
     */
    IntField<SkylabModules, Integer> PRODUCTION_BASE = IntField.create(
        Identifier.PRODUCTION_BASE,
        SkylabModules::getProductionBase,
        SkylabModules::setProductionBase,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getStorageFactor()} method.
     */
    ComparableField<SkylabModules, BigDecimal, BigDecimal> STORAGE_FACTOR = ComparableField.create(
        Identifier.STORAGE_FACTOR,
        SkylabModules::getStorageFactor,
        SkylabModules::setStorageFactor,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getStorageBase()} method.
     */
    IntField<SkylabModules, Integer> STORAGE_BASE = IntField.create(
        Identifier.STORAGE_BASE,
        SkylabModules::getStorageBase,
        SkylabModules::setStorageBase,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getUpgradeFactor()} method.
     */
    ComparableField<SkylabModules, BigDecimal, BigDecimal> UPGRADE_FACTOR = ComparableField.create(
        Identifier.UPGRADE_FACTOR,
        SkylabModules::getUpgradeFactor,
        SkylabModules::setUpgradeFactor,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getUpgradeBase()} method.
     */
    IntField<SkylabModules, Integer> UPGRADE_BASE = IntField.create(
        Identifier.UPGRADE_BASE,
        SkylabModules::getUpgradeBase,
        SkylabModules::setUpgradeBase,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getEnergyFactor()} method.
     */
    ComparableField<SkylabModules, BigDecimal, BigDecimal> ENERGY_FACTOR = ComparableField.create(
        Identifier.ENERGY_FACTOR,
        SkylabModules::getEnergyFactor,
        SkylabModules::setEnergyFactor,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getEnergyBase()} method.
     */
    IntField<SkylabModules, Integer> ENERGY_BASE = IntField.create(
        Identifier.ENERGY_BASE,
        SkylabModules::getEnergyBase,
        SkylabModules::setEnergyBase,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the id of this SkylabModules. The id field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.id.
     * 
     * @return the id of this SkylabModules
     */
    int getId();
    
    /**
     * Returns the name of this SkylabModules. The name field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.name.
     * 
     * @return the name of this SkylabModules
     */
    String getName();
    
    /**
     * Returns the productionFactor of this SkylabModules. The productionFactor
     * field corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_factor.
     * 
     * @return the productionFactor of this SkylabModules
     */
    BigDecimal getProductionFactor();
    
    /**
     * Returns the productionBase of this SkylabModules. The productionBase
     * field corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_base.
     * 
     * @return the productionBase of this SkylabModules
     */
    int getProductionBase();
    
    /**
     * Returns the storageFactor of this SkylabModules. The storageFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_factor.
     * 
     * @return the storageFactor of this SkylabModules
     */
    BigDecimal getStorageFactor();
    
    /**
     * Returns the storageBase of this SkylabModules. The storageBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_base.
     * 
     * @return the storageBase of this SkylabModules
     */
    int getStorageBase();
    
    /**
     * Returns the upgradeFactor of this SkylabModules. The upgradeFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_factor.
     * 
     * @return the upgradeFactor of this SkylabModules
     */
    BigDecimal getUpgradeFactor();
    
    /**
     * Returns the upgradeBase of this SkylabModules. The upgradeBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_base.
     * 
     * @return the upgradeBase of this SkylabModules
     */
    int getUpgradeBase();
    
    /**
     * Returns the energyFactor of this SkylabModules. The energyFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_factor.
     * 
     * @return the energyFactor of this SkylabModules
     */
    BigDecimal getEnergyFactor();
    
    /**
     * Returns the energyBase of this SkylabModules. The energyBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_base.
     * 
     * @return the energyBase of this SkylabModules
     */
    int getEnergyBase();
    
    /**
     * Sets the id of this SkylabModules. The id field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.id.
     * 
     * @param id to set of this SkylabModules
     * @return   this SkylabModules instance
     */
    SkylabModules setId(int id);
    
    /**
     * Sets the name of this SkylabModules. The name field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.name.
     * 
     * @param name to set of this SkylabModules
     * @return     this SkylabModules instance
     */
    SkylabModules setName(String name);
    
    /**
     * Sets the productionFactor of this SkylabModules. The productionFactor
     * field corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_factor.
     * 
     * @param productionFactor to set of this SkylabModules
     * @return                 this SkylabModules instance
     */
    SkylabModules setProductionFactor(BigDecimal productionFactor);
    
    /**
     * Sets the productionBase of this SkylabModules. The productionBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_base.
     * 
     * @param productionBase to set of this SkylabModules
     * @return               this SkylabModules instance
     */
    SkylabModules setProductionBase(int productionBase);
    
    /**
     * Sets the storageFactor of this SkylabModules. The storageFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_factor.
     * 
     * @param storageFactor to set of this SkylabModules
     * @return              this SkylabModules instance
     */
    SkylabModules setStorageFactor(BigDecimal storageFactor);
    
    /**
     * Sets the storageBase of this SkylabModules. The storageBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_base.
     * 
     * @param storageBase to set of this SkylabModules
     * @return            this SkylabModules instance
     */
    SkylabModules setStorageBase(int storageBase);
    
    /**
     * Sets the upgradeFactor of this SkylabModules. The upgradeFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_factor.
     * 
     * @param upgradeFactor to set of this SkylabModules
     * @return              this SkylabModules instance
     */
    SkylabModules setUpgradeFactor(BigDecimal upgradeFactor);
    
    /**
     * Sets the upgradeBase of this SkylabModules. The upgradeBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_base.
     * 
     * @param upgradeBase to set of this SkylabModules
     * @return            this SkylabModules instance
     */
    SkylabModules setUpgradeBase(int upgradeBase);
    
    /**
     * Sets the energyFactor of this SkylabModules. The energyFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_factor.
     * 
     * @param energyFactor to set of this SkylabModules
     * @return             this SkylabModules instance
     */
    SkylabModules setEnergyFactor(BigDecimal energyFactor);
    
    /**
     * Sets the energyBase of this SkylabModules. The energyBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_base.
     * 
     * @param energyBase to set of this SkylabModules
     * @return           this SkylabModules instance
     */
    SkylabModules setEnergyBase(int energyBase);
    
    enum Identifier implements ColumnIdentifier<SkylabModules> {
        
        ID                ("id"),
        NAME              ("name"),
        PRODUCTION_FACTOR ("production_factor"),
        PRODUCTION_BASE   ("production_base"),
        STORAGE_FACTOR    ("storage_factor"),
        STORAGE_BASE      ("storage_base"),
        UPGRADE_FACTOR    ("upgrade_factor"),
        UPGRADE_BASE      ("upgrade_base"),
        ENERGY_FACTOR     ("energy_factor"),
        ENERGY_BASE       ("energy_base");
        
        private final String columnName;
        private final TableIdentifier<SkylabModules> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "kalaazu";
        }
        
        @Override
        public String getSchemaName() {
            return "kalaazu";
        }
        
        @Override
        public String getTableName() {
            return "skylab_modules";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<SkylabModules> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}