package com.manulaiko.kalaazu.persistence.database.entities.galaxygates_gg_waves.generated;

import com.manulaiko.kalaazu.persistence.database.entities.galaxygates.Galaxygates;
import com.manulaiko.kalaazu.persistence.database.entities.galaxygates_gg_waves.GalaxygatesGgWaves;
import com.manulaiko.kalaazu.persistence.database.entities.galaxygates_waves.GalaxygatesWaves;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.galaxygates_gg_waves.GalaxygatesGgWaves}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedGalaxygatesGgWavesImpl implements GalaxygatesGgWaves {
    
    private int id;
    private int galaxygatesId;
    private int galaxygatesWavesId;
    
    protected GeneratedGalaxygatesGgWavesImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public int getGalaxygatesId() {
        return galaxygatesId;
    }
    
    @Override
    public int getGalaxygatesWavesId() {
        return galaxygatesWavesId;
    }
    
    @Override
    public GalaxygatesGgWaves setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public GalaxygatesGgWaves setGalaxygatesId(int galaxygatesId) {
        this.galaxygatesId = galaxygatesId;
        return this;
    }
    
    @Override
    public GalaxygatesGgWaves setGalaxygatesWavesId(int galaxygatesWavesId) {
        this.galaxygatesWavesId = galaxygatesWavesId;
        return this;
    }
    
    @Override
    public Galaxygates findGalaxygatesId(Manager<Galaxygates> foreignManager) {
        return foreignManager.stream().filter(Galaxygates.ID.equal(getGalaxygatesId())).findAny().orElse(null);
    }
    
    @Override
    public GalaxygatesWaves findGalaxygatesWavesId(Manager<GalaxygatesWaves> foreignManager) {
        return foreignManager.stream().filter(GalaxygatesWaves.ID.equal(getGalaxygatesWavesId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "                 + Objects.toString(getId()));
        sj.add("galaxygatesId = "      + Objects.toString(getGalaxygatesId()));
        sj.add("galaxygatesWavesId = " + Objects.toString(getGalaxygatesWavesId()));
        return "GalaxygatesGgWavesImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof GalaxygatesGgWaves)) { return false; }
        final GalaxygatesGgWaves thatGalaxygatesGgWaves = (GalaxygatesGgWaves)that;
        if (this.getId() != thatGalaxygatesGgWaves.getId()) {return false; }
        if (this.getGalaxygatesId() != thatGalaxygatesGgWaves.getGalaxygatesId()) {return false; }
        if (this.getGalaxygatesWavesId() != thatGalaxygatesGgWaves.getGalaxygatesWavesId()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getGalaxygatesId());
        hash = 31 * hash + Integer.hashCode(getGalaxygatesWavesId());
        return hash;
    }
}