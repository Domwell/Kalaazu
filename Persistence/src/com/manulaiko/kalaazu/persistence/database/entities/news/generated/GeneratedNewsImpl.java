package com.manulaiko.kalaazu.persistence.database.entities.news.generated;

import com.manulaiko.kalaazu.persistence.database.entities.News;
import com.speedment.common.annotation.GeneratedCode;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * News}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedNewsImpl implements News {

    private short     id;

    private Timestamp date;

    private String    image;

    private String    title;

    private String    teaser;

    private String    text;

    protected GeneratedNewsImpl() {

    }

    @Override
    public Short getId() {
        return id;
    }

    @Override
    public Timestamp getDate() {
        return date;
    }

    @Override
    public String getImage() {
        return image;
    }

    @Override
    public String getTitle() {
        return title;
    }

    @Override
    public String getTeaser() {
        return teaser;
    }

    @Override
    public String getText() {
        return text;
    }

    @Override
    public News setId(short id) {
        this.id = id;
        return this;
    }

    @Override
    public News setDate(Timestamp date) {
        this.date = date;
        return this;
    }

    @Override
    public News setImage(String image) {
        this.image = image;
        return this;
    }

    @Override
    public News setTitle(String title) {
        this.title = title;
        return this;
    }

    @Override
    public News setTeaser(String teaser) {
        this.teaser = teaser;
        return this;
    }

    @Override
    public News setText(String text) {
        this.text = text;
        return this;
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("date = " + Objects.toString(getDate()));
        sj.add("image = " + Objects.toString(getImage()));
        sj.add("title = " + Objects.toString(getTitle()));
        sj.add("teaser = " + Objects.toString(getTeaser()));
        sj.add("text = " + Objects.toString(getText()));
        return "NewsImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof News)) {
            return false;
        }
        final News thatNews = (News) that;
        if (this.getId() != thatNews.getId()) {
            return false;
        }
        if (!Objects.equals(this.getDate(), thatNews.getDate())) {
            return false;
        }
        if (!Objects.equals(this.getImage(), thatNews.getImage())) {
            return false;
        }
        if (!Objects.equals(this.getTitle(), thatNews.getTitle())) {
            return false;
        }
        if (!Objects.equals(this.getTeaser(), thatNews.getTeaser())) {
            return false;
        }
        if (!Objects.equals(this.getText(), thatNews.getText())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Short.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getDate());
        hash = 31 * hash + Objects.hashCode(getImage());
        hash = 31 * hash + Objects.hashCode(getTitle());
        hash = 31 * hash + Objects.hashCode(getTeaser());
        hash = 31 * hash + Objects.hashCode(getText());
        return hash;
    }
}