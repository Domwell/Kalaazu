package com.manulaiko.kalaazu.persistence.database.entities.clans_battlestations.generated;

import com.manulaiko.kalaazu.math.Vector2;
import com.manulaiko.kalaazu.persistence.database.entities.clans.Clans;
import com.manulaiko.kalaazu.persistence.database.entities.clans_battlestations.ClansBattlestations;
import com.manulaiko.kalaazu.persistence.database.entities.maps.Maps;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.clans_battlestations.ClansBattlestations}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedClansBattlestationsImpl implements ClansBattlestations {

    private byte      id;

    private Integer   clansId;

    private byte      mapsId;

    private String    name;

    private Vector2   position;

    private Timestamp date;

    protected GeneratedClansBattlestationsImpl() {

    }

    @Override
    public byte getId() {
        return id;
    }

    @Override
    public OptionalInt getClansId() {
        return OptionalUtil.ofNullable(clansId);
    }

    @Override
    public byte getMapsId() {
        return mapsId;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public Vector2 getPosition() {
        return position;
    }

    @Override
    public Optional<Timestamp> getDate() {
        return Optional.ofNullable(date);
    }

    @Override
    public ClansBattlestations setId(byte id) {
        this.id = id;
        return this;
    }

    @Override
    public ClansBattlestations setClansId(Integer clansId) {
        this.clansId = clansId;
        return this;
    }

    @Override
    public ClansBattlestations setMapsId(byte mapsId) {
        this.mapsId = mapsId;
        return this;
    }

    @Override
    public ClansBattlestations setName(String name) {
        this.name = name;
        return this;
    }

    @Override
    public ClansBattlestations setPosition(Vector2 position) {
        this.position = position;
        return this;
    }

    @Override
    public ClansBattlestations setDate(Timestamp date) {
        this.date = date;
        return this;
    }

    @Override
    public Optional<Clans> findClansId(Manager<Clans> foreignManager) {
        if (getClansId().isPresent()) {
            return foreignManager.stream()
                                 .filter(Clans.ID.equal(getClansId().getAsInt()))
                                 .findAny();
        } else {
            return Optional.empty();
        }
    }

    @Override
    public Maps findMapsId(Manager<Maps> foreignManager) {
        return foreignManager.stream()
                             .filter(Maps.ID.equal(getMapsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("clansId = " + Objects.toString(OptionalUtil.unwrap(getClansId())));
        sj.add("mapsId = " + Objects.toString(getMapsId()));
        sj.add("name = " + Objects.toString(getName()));
        sj.add("position = " + Objects.toString(getPosition()));
        sj.add("date = " + Objects.toString(OptionalUtil.unwrap(getDate())));
        return "ClansBattlestationsImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof ClansBattlestations)) {
            return false;
        }
        final ClansBattlestations thatClansBattlestations = (ClansBattlestations) that;
        if (this.getId() != thatClansBattlestations.getId()) {
            return false;
        }
        if (!Objects.equals(this.getClansId(), thatClansBattlestations.getClansId())) {
            return false;
        }
        if (this.getMapsId() != thatClansBattlestations.getMapsId()) {
            return false;
        }
        if (!Objects.equals(this.getName(), thatClansBattlestations.getName())) {
            return false;
        }
        if (!Objects.equals(this.getPosition(), thatClansBattlestations.getPosition())) {
            return false;
        }
        if (!Objects.equals(this.getDate(), thatClansBattlestations.getDate())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Byte.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getClansId());
        hash = 31 * hash + Byte.hashCode(getMapsId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getPosition());
        hash = 31 * hash + Objects.hashCode(getDate());
        return hash;
    }
}