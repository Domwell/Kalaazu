package com.manulaiko.kalaazu.persistence.database.entities.galaxygates.generated;

import com.manulaiko.kalaazu.persistence.database.entities.galaxygates.Galaxygates;
import com.manulaiko.kalaazu.persistence.database.entities.galaxygates_waves.GalaxygatesWaves;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.galaxygates.Galaxygates}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedGalaxygatesImpl implements Galaxygates {
    
    private int id;
    private String name;
    private Integer galaxygatesWavesId;
    private int parts;
    
    protected GeneratedGalaxygatesImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public OptionalInt getGalaxygatesWavesId() {
        return OptionalUtil.ofNullable(galaxygatesWavesId);
    }
    
    @Override
    public int getParts() {
        return parts;
    }
    
    @Override
    public Galaxygates setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Galaxygates setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public Galaxygates setGalaxygatesWavesId(Integer galaxygatesWavesId) {
        this.galaxygatesWavesId = galaxygatesWavesId;
        return this;
    }
    
    @Override
    public Galaxygates setParts(int parts) {
        this.parts = parts;
        return this;
    }
    
    @Override
    public Optional<GalaxygatesWaves> findGalaxygatesWavesId(Manager<GalaxygatesWaves> foreignManager) {
        if (getGalaxygatesWavesId().isPresent()) {
            return foreignManager.stream().filter(GalaxygatesWaves.ID.equal(getGalaxygatesWavesId().getAsInt())).findAny();
        } else {
            return Optional.empty();
        }
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "                 + Objects.toString(getId()));
        sj.add("name = "               + Objects.toString(getName()));
        sj.add("galaxygatesWavesId = " + Objects.toString(OptionalUtil.unwrap(getGalaxygatesWavesId())));
        sj.add("parts = "              + Objects.toString(getParts()));
        return "GalaxygatesImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Galaxygates)) { return false; }
        final Galaxygates thatGalaxygates = (Galaxygates)that;
        if (this.getId() != thatGalaxygates.getId()) {return false; }
        if (!Objects.equals(this.getName(), thatGalaxygates.getName())) {return false; }
        if (!Objects.equals(this.getGalaxygatesWavesId(), thatGalaxygates.getGalaxygatesWavesId())) {return false; }
        if (this.getParts() != thatGalaxygates.getParts()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getGalaxygatesWavesId());
        hash = 31 * hash + Integer.hashCode(getParts());
        return hash;
    }
}