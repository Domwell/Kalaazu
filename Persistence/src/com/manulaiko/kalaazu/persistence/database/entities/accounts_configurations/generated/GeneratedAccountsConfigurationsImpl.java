package com.manulaiko.kalaazu.persistence.database.entities.accounts_configurations.generated;

import com.manulaiko.kalaazu.persistence.database.entities.accounts_configurations.AccountsConfigurations;
import com.manulaiko.kalaazu.persistence.database.entities.accounts_hangars.AccountsHangars;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.accounts_configurations.AccountsConfigurations}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsConfigurationsImpl implements AccountsConfigurations {
    
    private int id;
    private int accountsHangarsId;
    private int configurationId;
    private String name;
    
    protected GeneratedAccountsConfigurationsImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public int getAccountsHangarsId() {
        return accountsHangarsId;
    }
    
    @Override
    public int getConfigurationId() {
        return configurationId;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public AccountsConfigurations setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public AccountsConfigurations setAccountsHangarsId(int accountsHangarsId) {
        this.accountsHangarsId = accountsHangarsId;
        return this;
    }
    
    @Override
    public AccountsConfigurations setConfigurationId(int configurationId) {
        this.configurationId = configurationId;
        return this;
    }
    
    @Override
    public AccountsConfigurations setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public AccountsHangars findAccountsHangarsId(Manager<AccountsHangars> foreignManager) {
        return foreignManager.stream().filter(AccountsHangars.ID.equal(getAccountsHangarsId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "                + Objects.toString(getId()));
        sj.add("accountsHangarsId = " + Objects.toString(getAccountsHangarsId()));
        sj.add("configurationId = "   + Objects.toString(getConfigurationId()));
        sj.add("name = "              + Objects.toString(getName()));
        return "AccountsConfigurationsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof AccountsConfigurations)) { return false; }
        final AccountsConfigurations thatAccountsConfigurations = (AccountsConfigurations)that;
        if (this.getId() != thatAccountsConfigurations.getId()) {return false; }
        if (this.getAccountsHangarsId() != thatAccountsConfigurations.getAccountsHangarsId()) {return false; }
        if (this.getConfigurationId() != thatAccountsConfigurations.getConfigurationId()) {return false; }
        if (!Objects.equals(this.getName(), thatAccountsConfigurations.getName())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getAccountsHangarsId());
        hash = 31 * hash + Integer.hashCode(getConfigurationId());
        hash = 31 * hash + Objects.hashCode(getName());
        return hash;
    }
}