package com.manulaiko.kalaazu.persistence.database.entities.items.generated;

import com.manulaiko.kalaazu.persistence.database.entities.items.Items;
import com.manulaiko.kalaazu.persistence.database.mappers.ItemCategory;
import com.manulaiko.kalaazu.persistence.database.mappers.ItemCategoryMapper;
import com.manulaiko.kalaazu.persistence.database.mappers.ItemType;
import com.manulaiko.kalaazu.persistence.database.mappers.ItemTypeMapper;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.*;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.integer.PrimitiveIntegerZeroOneToBooleanMapper;

/**
 * The generated base for the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.items.Items}-interface
 * representing entities of the {@code items}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedItems {

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getId()} method.
     */
    ShortField<Items, Short>             ID          = ShortField.create(
            Identifier.ID,
            Items::getId,
            Items::setId,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getName()} method.
     */
    StringField<Items, String>           NAME        = StringField.create(
            Identifier.NAME,
            Items::getName,
            Items::setName,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getCategory()} method.
     */
    EnumField<Items, Byte, ItemCategory> CATEGORY    = EnumField.create(
            Identifier.CATEGORY,
            Items::getCategory,
            Items::setCategory,
            new ItemCategoryMapper(),
            ItemCategory::name,
            ItemCategory::valueOf,
            ItemCategory.class
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getDescription()} method.
     */
    StringField<Items, String>           DESCRIPTION = StringField.create(
            Identifier.DESCRIPTION,
            Items::getDescription,
            Items::setDescription,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getPrice()} method.
     */
    IntField<Items, Integer>             PRICE       = IntField.create(
            Identifier.PRICE,
            Items::getPrice,
            Items::setPrice,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getType()} method.
     */
    EnumField<Items, Byte, ItemType>     TYPE        = EnumField.create(
            Identifier.TYPE,
            Items::getType,
            Items::setType,
            new ItemTypeMapper(),
            ItemType::name,
            ItemType::valueOf,
            ItemType.class
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getIsElite()} method.
     */
    BooleanField<Items, Integer>         IS_ELITE    = BooleanField.create(
            Identifier.IS_ELITE,
            Items::getIsElite,
            Items::setIsElite,
            new PrimitiveIntegerZeroOneToBooleanMapper(),
            false
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getIsEvent()} method.
     */
    BooleanField<Items, Integer>         IS_EVENT    = BooleanField.create(
            Identifier.IS_EVENT,
            Items::getIsEvent,
            Items::setIsEvent,
            new PrimitiveIntegerZeroOneToBooleanMapper(),
            false
    );

    /**
     * This Field corresponds to the {@link Items} field that can be obtained
     * using the {@link Items#getIsBuyable()} method.
     */
    BooleanField<Items, Integer>         IS_BUYABLE  = BooleanField.create(
            Identifier.IS_BUYABLE,
            Items::getIsBuyable,
            Items::setIsBuyable,
            new PrimitiveIntegerZeroOneToBooleanMapper(),
            false
    );

    /**
     * Returns the id of this Items. The id field corresponds to the database
     * column kalaazu.kalaazu.items.id.
     *
     * @return the id of this Items
     */
    short getId();

    /**
     * Returns the name of this Items. The name field corresponds to the
     * database column kalaazu.kalaazu.items.name.
     *
     * @return the name of this Items
     */
    String getName();

    /**
     * Returns the category of this Items. The category field corresponds to the
     * database column kalaazu.kalaazu.items.category.
     *
     * @return the category of this Items
     */
    ItemCategory getCategory();

    /**
     * Returns the description of this Items. The description field corresponds
     * to the database column kalaazu.kalaazu.items.description.
     *
     * @return the description of this Items
     */
    String getDescription();

    /**
     * Returns the price of this Items. The price field corresponds to the
     * database column kalaazu.kalaazu.items.price.
     *
     * @return the price of this Items
     */
    int getPrice();

    /**
     * Returns the type of this Items. The type field corresponds to the
     * database column kalaazu.kalaazu.items.type.
     *
     * @return the type of this Items
     */
    ItemType getType();

    /**
     * Returns the isElite of this Items. The isElite field corresponds to the
     * database column kalaazu.kalaazu.items.is_elite.
     *
     * @return the isElite of this Items
     */
    boolean getIsElite();

    /**
     * Returns the isEvent of this Items. The isEvent field corresponds to the
     * database column kalaazu.kalaazu.items.is_event.
     *
     * @return the isEvent of this Items
     */
    boolean getIsEvent();

    /**
     * Returns the isBuyable of this Items. The isBuyable field corresponds to
     * the database column kalaazu.kalaazu.items.is_buyable.
     *
     * @return the isBuyable of this Items
     */
    boolean getIsBuyable();

    /**
     * Sets the id of this Items. The id field corresponds to the database
     * column kalaazu.kalaazu.items.id.
     *
     * @param id to set of this Items
     *
     * @return this Items instance
     */
    Items setId(short id);

    /**
     * Sets the name of this Items. The name field corresponds to the database
     * column kalaazu.kalaazu.items.name.
     *
     * @param name to set of this Items
     *
     * @return this Items instance
     */
    Items setName(String name);

    /**
     * Sets the category of this Items. The category field corresponds to the
     * database column kalaazu.kalaazu.items.category.
     *
     * @param category to set of this Items
     *
     * @return this Items instance
     */
    Items setCategory(ItemCategory category);

    /**
     * Sets the description of this Items. The description field corresponds to
     * the database column kalaazu.kalaazu.items.description.
     *
     * @param description to set of this Items
     *
     * @return this Items instance
     */
    Items setDescription(String description);

    /**
     * Sets the price of this Items. The price field corresponds to the database
     * column kalaazu.kalaazu.items.price.
     *
     * @param price to set of this Items
     *
     * @return this Items instance
     */
    Items setPrice(int price);

    /**
     * Sets the type of this Items. The type field corresponds to the database
     * column kalaazu.kalaazu.items.type.
     *
     * @param type to set of this Items
     *
     * @return this Items instance
     */
    Items setType(ItemType type);

    /**
     * Sets the isElite of this Items. The isElite field corresponds to the
     * database column kalaazu.kalaazu.items.is_elite.
     *
     * @param isElite to set of this Items
     *
     * @return this Items instance
     */
    Items setIsElite(boolean isElite);

    /**
     * Sets the isEvent of this Items. The isEvent field corresponds to the
     * database column kalaazu.kalaazu.items.is_event.
     *
     * @param isEvent to set of this Items
     *
     * @return this Items instance
     */
    Items setIsEvent(boolean isEvent);

    /**
     * Sets the isBuyable of this Items. The isBuyable field corresponds to the
     * database column kalaazu.kalaazu.items.is_buyable.
     *
     * @param isBuyable to set of this Items
     *
     * @return this Items instance
     */
    Items setIsBuyable(boolean isBuyable);

    enum Identifier implements ColumnIdentifier<Items> {

        ID("id"),
        NAME("name"),
        CATEGORY("category"),
        DESCRIPTION("description"),
        PRICE("price"),
        TYPE("type"),
        IS_ELITE("is_elite"),
        IS_EVENT("is_event"),
        IS_BUYABLE("is_buyable");

        private final String                 columnName;

        private final TableIdentifier<Items> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "items";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<Items> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}