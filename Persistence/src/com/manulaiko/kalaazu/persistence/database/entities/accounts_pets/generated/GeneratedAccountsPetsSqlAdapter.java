package com.manulaiko.kalaazu.persistence.database.entities.accounts_pets.generated;

import com.manulaiko.kalaazu.persistence.database.entities.accounts_pets.AccountsPets;
import com.manulaiko.kalaazu.persistence.database.entities.accounts_pets.AccountsPetsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.common.injector.annotation.WithState;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.manulaiko.kalaazu.persistence.database.entities.accounts_pets.AccountsPets}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsPetsSqlAdapter {
    
    private final TableIdentifier<AccountsPets> tableIdentifier;
    
    protected GeneratedAccountsPetsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "accounts_pets");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(@WithState(RESOLVED) SqlStreamSupplierComponent streamSupplierComponent,
            @WithState(RESOLVED) SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected AccountsPets apply(ResultSet resultSet) throws SpeedmentException {
        final AccountsPets entity = createEntity();
        try {
            entity.setId(                       resultSet.getInt(1)    );
            entity.setAccountsId(               resultSet.getInt(2)    );
            entity.setLevelsId(                 resultSet.getInt(3)    );
            entity.setName(                     resultSet.getString(4) );
            entity.setExperience(               resultSet.getInt(5)    );
            entity.setFuel(                     resultSet.getInt(6)    );
            entity.setHealth(                   resultSet.getInt(7)    );
            entity.setSlotsLasersTotal(         resultSet.getInt(8)    );
            entity.setSlotsLasersAvailable(     resultSet.getInt(9)    );
            entity.setSlotsGeneratorsTotal(     resultSet.getInt(10)   );
            entity.setSlotsGeneratorsAvailable( resultSet.getInt(11)   );
            entity.setSlotsProtocolsTotal(      resultSet.getInt(12)   );
            entity.setSlotsProtocolsAvailable(  resultSet.getInt(13)   );
            entity.setSlotsGearsTotal(          resultSet.getInt(14)   );
            entity.setSlotsGearsAvailable(      resultSet.getInt(15)   );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected AccountsPetsImpl createEntity() {
        return new AccountsPetsImpl();
    }
}