package com.manulaiko.kalaazu.persistence.database.entities.skilltree_levels.generated;

import com.manulaiko.kalaazu.persistence.database.entities.levels.Levels;
import com.manulaiko.kalaazu.persistence.database.entities.skilltree_levels.SkilltreeLevels;
import com.manulaiko.kalaazu.persistence.database.entities.skilltree_skills.SkilltreeSkills;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.skilltree_levels.SkilltreeLevels}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSkilltreeLevelsImpl implements SkilltreeLevels {

    private short id;

    private byte  skilltreeSkillsId;

    private byte  levelsId;

    private int   credits;

    private short seprom;

    private byte  points;

    protected GeneratedSkilltreeLevelsImpl() {

    }

    @Override
    public short getId() {
        return id;
    }

    @Override
    public byte getSkilltreeSkillsId() {
        return skilltreeSkillsId;
    }

    @Override
    public byte getLevelsId() {
        return levelsId;
    }

    @Override
    public int getCredits() {
        return credits;
    }

    @Override
    public short getSeprom() {
        return seprom;
    }

    @Override
    public byte getPoints() {
        return points;
    }

    @Override
    public SkilltreeLevels setId(short id) {
        this.id = id;
        return this;
    }

    @Override
    public SkilltreeLevels setSkilltreeSkillsId(byte skilltreeSkillsId) {
        this.skilltreeSkillsId = skilltreeSkillsId;
        return this;
    }

    @Override
    public SkilltreeLevels setLevelsId(byte levelsId) {
        this.levelsId = levelsId;
        return this;
    }

    @Override
    public SkilltreeLevels setCredits(int credits) {
        this.credits = credits;
        return this;
    }

    @Override
    public SkilltreeLevels setSeprom(short seprom) {
        this.seprom = seprom;
        return this;
    }

    @Override
    public SkilltreeLevels setPoints(byte points) {
        this.points = points;
        return this;
    }

    @Override
    public SkilltreeSkills findSkilltreeSkillsId(Manager<SkilltreeSkills> foreignManager) {
        return foreignManager.stream()
                             .filter(SkilltreeSkills.ID.equal(getSkilltreeSkillsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Levels findLevelsId(Manager<Levels> foreignManager) {
        return foreignManager.stream()
                             .filter(Levels.ID.equal(getLevelsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("skilltreeSkillsId = " + Objects.toString(getSkilltreeSkillsId()));
        sj.add("levelsId = " + Objects.toString(getLevelsId()));
        sj.add("credits = " + Objects.toString(getCredits()));
        sj.add("seprom = " + Objects.toString(getSeprom()));
        sj.add("points = " + Objects.toString(getPoints()));
        return "SkilltreeLevelsImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof SkilltreeLevels)) {
            return false;
        }
        final SkilltreeLevels thatSkilltreeLevels = (SkilltreeLevels) that;
        if (this.getId() != thatSkilltreeLevels.getId()) {
            return false;
        }
        if (this.getSkilltreeSkillsId() != thatSkilltreeLevels.getSkilltreeSkillsId()) {
            return false;
        }
        if (this.getLevelsId() != thatSkilltreeLevels.getLevelsId()) {
            return false;
        }
        if (this.getCredits() != thatSkilltreeLevels.getCredits()) {
            return false;
        }
        if (this.getSeprom() != thatSkilltreeLevels.getSeprom()) {
            return false;
        }
        if (this.getPoints() != thatSkilltreeLevels.getPoints()) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Short.hashCode(getId());
        hash = 31 * hash + Byte.hashCode(getSkilltreeSkillsId());
        hash = 31 * hash + Byte.hashCode(getLevelsId());
        hash = 31 * hash + Integer.hashCode(getCredits());
        hash = 31 * hash + Short.hashCode(getSeprom());
        hash = 31 * hash + Byte.hashCode(getPoints());
        return hash;
    }
}