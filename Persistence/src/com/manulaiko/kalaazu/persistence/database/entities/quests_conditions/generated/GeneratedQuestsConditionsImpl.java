package com.manulaiko.kalaazu.persistence.database.entities.quests_conditions.generated;

import com.manulaiko.kalaazu.persistence.database.entities.quests.Quests;
import com.manulaiko.kalaazu.persistence.database.entities.quests_conditions.QuestsConditions;
import com.manulaiko.kalaazu.persistence.database.mappers.QuestConditionType;
import com.speedment.common.annotation.GeneratedCode;
import com.manulaiko.kalaazu.persistence.database.entities.Manager;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.quests_conditions.QuestsConditions}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedQuestsConditionsImpl implements QuestsConditions {

    private int                id;

    private Integer            questsConditionsId;

    private short              questsId;

    private QuestConditionType type;

    private String             value;

    protected GeneratedQuestsConditionsImpl() {

    }

    @Override
    public Integer getId() {
        return id;
    }

    @Override
    public OptionalInt getQuestsConditionsId() {
        return OptionalUtil.ofNullable(questsConditionsId);
    }

    @Override
    public short getQuestsId() {
        return questsId;
    }

    @Override
    public QuestConditionType getType() {
        return type;
    }

    @Override
    public String getValue() {
        return value;
    }

    @Override
    public QuestsConditions setId(int id) {
        this.id = id;
        return this;
    }

    @Override
    public QuestsConditions setQuestsConditionsId(Integer questsConditionsId) {
        this.questsConditionsId = questsConditionsId;
        return this;
    }

    @Override
    public QuestsConditions setQuestsId(short questsId) {
        this.questsId = questsId;
        return this;
    }

    @Override
    public QuestsConditions setType(QuestConditionType type) {
        this.type = type;
        return this;
    }

    @Override
    public QuestsConditions setValue(String value) {
        this.value = value;
        return this;
    }

    @Override
    public Optional<QuestsConditions> findQuestsConditionsId(Manager<QuestsConditions> foreignManager) {
        if (getQuestsConditionsId().isPresent()) {
            return foreignManager.stream()
                                 .filter(QuestsConditions.ID.equal(getQuestsConditionsId().getAsInt()))
                                 .findAny();
        } else {
            return Optional.empty();
        }
    }

    @Override
    public Quests findQuestsId(Manager<Quests> foreignManager) {
        return foreignManager.stream()
                             .filter(Quests.ID.equal(getQuestsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("questsConditionsId = " + Objects.toString(OptionalUtil.unwrap(getQuestsConditionsId())));
        sj.add("questsId = " + Objects.toString(getQuestsId()));
        sj.add("type = " + Objects.toString(getType()));
        sj.add("value = " + Objects.toString(getValue()));
        return "QuestsConditionsImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof QuestsConditions)) {
            return false;
        }
        final QuestsConditions thatQuestsConditions = (QuestsConditions) that;
        if (this.getId() != thatQuestsConditions.getId()) {
            return false;
        }
        if (!Objects.equals(this.getQuestsConditionsId(), thatQuestsConditions.getQuestsConditionsId())) {
            return false;
        }
        if (this.getQuestsId() != thatQuestsConditions.getQuestsId()) {
            return false;
        }
        if (!Objects.equals(this.getType(), thatQuestsConditions.getType())) {
            return false;
        }
        if (!Objects.equals(this.getValue(), thatQuestsConditions.getValue())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getQuestsConditionsId());
        hash = 31 * hash + Short.hashCode(getQuestsId());
        hash = 31 * hash + Objects.hashCode(getType());
        hash = 31 * hash + Objects.hashCode(getValue());
        return hash;
    }
}