package com.manulaiko.kalaazu.persistence.database.entities.invitation_codes.generated;

import com.manulaiko.kalaazu.persistence.database.entities.invitation_codes.InvitationCodes;
import com.speedment.common.annotation.GeneratedCode;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.invitation_codes.InvitationCodes}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedInvitationCodesImpl implements InvitationCodes {
    
    private int id;
    private String code;
    private int limit;
    
    protected GeneratedInvitationCodesImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getCode() {
        return code;
    }
    
    @Override
    public int getLimit() {
        return limit;
    }
    
    @Override
    public InvitationCodes setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public InvitationCodes setCode(String code) {
        this.code = code;
        return this;
    }
    
    @Override
    public InvitationCodes setLimit(int limit) {
        this.limit = limit;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "    + Objects.toString(getId()));
        sj.add("code = "  + Objects.toString(getCode()));
        sj.add("limit = " + Objects.toString(getLimit()));
        return "InvitationCodesImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof InvitationCodes)) { return false; }
        final InvitationCodes thatInvitationCodes = (InvitationCodes)that;
        if (this.getId() != thatInvitationCodes.getId()) {return false; }
        if (!Objects.equals(this.getCode(), thatInvitationCodes.getCode())) {return false; }
        if (this.getLimit() != thatInvitationCodes.getLimit()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getCode());
        hash = 31 * hash + Integer.hashCode(getLimit());
        return hash;
    }
}