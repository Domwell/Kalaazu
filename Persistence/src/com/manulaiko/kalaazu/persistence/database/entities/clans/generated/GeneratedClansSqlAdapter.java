package com.manulaiko.kalaazu.persistence.database.entities.clans.generated;

import com.manulaiko.kalaazu.persistence.database.entities.clans.Clans;
import com.manulaiko.kalaazu.persistence.database.entities.clans.ClansImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.common.injector.annotation.WithState;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link
 * com.manulaiko.kalaazu.persistence.database.entities.clans.Clans} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedClansSqlAdapter {
    
    private final TableIdentifier<Clans> tableIdentifier;
    
    protected GeneratedClansSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "clans");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(@WithState(RESOLVED) SqlStreamSupplierComponent streamSupplierComponent,
            @WithState(RESOLVED) SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected Clans apply(ResultSet resultSet) throws SpeedmentException {
        final Clans entity = createEntity();
        try {
            entity.setId(          resultSet.getInt(1)    );
            entity.setAccountsId(  resultSet.getInt(2)    );
            entity.setFactionsId(  getInt(resultSet, 3)   );
            entity.setTag(         resultSet.getString(4) );
            entity.setName(        resultSet.getString(5) );
            entity.setDescription( resultSet.getString(6) );
            entity.setLogo(        resultSet.getString(7) );
            entity.setStatus(      resultSet.getInt(8)    );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected ClansImpl createEntity() {
        return new ClansImpl();
    }
}