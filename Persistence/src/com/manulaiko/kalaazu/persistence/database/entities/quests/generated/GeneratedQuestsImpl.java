package com.manulaiko.kalaazu.persistence.database.entities.quests.generated;

import com.manulaiko.kalaazu.persistence.database.entities.factions.Factions;
import com.manulaiko.kalaazu.persistence.database.entities.levels.Levels;
import com.manulaiko.kalaazu.persistence.database.entities.quests.Quests;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.quests.Quests}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedQuestsImpl implements Quests {
    
    private int id;
    private int levelsId;
    private Integer questsId;
    private Integer factionsId;
    private String name;
    
    protected GeneratedQuestsImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public int getLevelsId() {
        return levelsId;
    }
    
    @Override
    public OptionalInt getQuestsId() {
        return OptionalUtil.ofNullable(questsId);
    }
    
    @Override
    public OptionalInt getFactionsId() {
        return OptionalUtil.ofNullable(factionsId);
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public Quests setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Quests setLevelsId(int levelsId) {
        this.levelsId = levelsId;
        return this;
    }
    
    @Override
    public Quests setQuestsId(Integer questsId) {
        this.questsId = questsId;
        return this;
    }
    
    @Override
    public Quests setFactionsId(Integer factionsId) {
        this.factionsId = factionsId;
        return this;
    }
    
    @Override
    public Quests setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public Levels findLevelsId(Manager<Levels> foreignManager) {
        return foreignManager.stream().filter(Levels.ID.equal(getLevelsId())).findAny().orElse(null);
    }
    
    @Override
    public Optional<Quests> findQuestsId(Manager<Quests> foreignManager) {
        if (getQuestsId().isPresent()) {
            return foreignManager.stream().filter(Quests.ID.equal(getQuestsId().getAsInt())).findAny();
        } else {
            return Optional.empty();
        }
    }
    
    @Override
    public Optional<Factions> findFactionsId(Manager<Factions> foreignManager) {
        if (getFactionsId().isPresent()) {
            return foreignManager.stream().filter(Factions.ID.equal(getFactionsId().getAsInt())).findAny();
        } else {
            return Optional.empty();
        }
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "         + Objects.toString(getId()));
        sj.add("levelsId = "   + Objects.toString(getLevelsId()));
        sj.add("questsId = "   + Objects.toString(OptionalUtil.unwrap(getQuestsId())));
        sj.add("factionsId = " + Objects.toString(OptionalUtil.unwrap(getFactionsId())));
        sj.add("name = "       + Objects.toString(getName()));
        return "QuestsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Quests)) { return false; }
        final Quests thatQuests = (Quests)that;
        if (this.getId() != thatQuests.getId()) {return false; }
        if (this.getLevelsId() != thatQuests.getLevelsId()) {return false; }
        if (!Objects.equals(this.getQuestsId(), thatQuests.getQuestsId())) {return false; }
        if (!Objects.equals(this.getFactionsId(), thatQuests.getFactionsId())) {return false; }
        if (!Objects.equals(this.getName(), thatQuests.getName())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getLevelsId());
        hash = 31 * hash + Objects.hashCode(getQuestsId());
        hash = 31 * hash + Objects.hashCode(getFactionsId());
        hash = 31 * hash + Objects.hashCode(getName());
        return hash;
    }
}