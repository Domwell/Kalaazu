package com.manulaiko.kalaazu.persistence.database.entities.galaxygates_waves.generated;

import com.manulaiko.kalaazu.persistence.database.entities.galaxygates_waves.GalaxygatesWaves;
import com.manulaiko.kalaazu.persistence.database.entities.maps.Maps;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.galaxygates_waves.GalaxygatesWaves}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedGalaxygatesWavesImpl implements GalaxygatesWaves {
    
    private int id;
    private int mapsId;
    private int seconds;
    private int npcs;
    
    protected GeneratedGalaxygatesWavesImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public int getMapsId() {
        return mapsId;
    }
    
    @Override
    public int getSeconds() {
        return seconds;
    }
    
    @Override
    public int getNpcs() {
        return npcs;
    }
    
    @Override
    public GalaxygatesWaves setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public GalaxygatesWaves setMapsId(int mapsId) {
        this.mapsId = mapsId;
        return this;
    }
    
    @Override
    public GalaxygatesWaves setSeconds(int seconds) {
        this.seconds = seconds;
        return this;
    }
    
    @Override
    public GalaxygatesWaves setNpcs(int npcs) {
        this.npcs = npcs;
        return this;
    }
    
    @Override
    public Maps findMapsId(Manager<Maps> foreignManager) {
        return foreignManager.stream().filter(Maps.ID.equal(getMapsId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "      + Objects.toString(getId()));
        sj.add("mapsId = "  + Objects.toString(getMapsId()));
        sj.add("seconds = " + Objects.toString(getSeconds()));
        sj.add("npcs = "    + Objects.toString(getNpcs()));
        return "GalaxygatesWavesImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof GalaxygatesWaves)) { return false; }
        final GalaxygatesWaves thatGalaxygatesWaves = (GalaxygatesWaves)that;
        if (this.getId() != thatGalaxygatesWaves.getId()) {return false; }
        if (this.getMapsId() != thatGalaxygatesWaves.getMapsId()) {return false; }
        if (this.getSeconds() != thatGalaxygatesWaves.getSeconds()) {return false; }
        if (this.getNpcs() != thatGalaxygatesWaves.getNpcs()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getMapsId());
        hash = 31 * hash + Integer.hashCode(getSeconds());
        hash = 31 * hash + Integer.hashCode(getNpcs());
        return hash;
    }
}