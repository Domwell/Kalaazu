package com.manulaiko.kalaazu.persistence.database.entities.galaxygates_spins.generated;

import com.manulaiko.kalaazu.persistence.database.entities.galaxygates_spins.GalaxygatesSpins;
import com.manulaiko.kalaazu.persistence.database.entities.items.Items;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.math.BigDecimal;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.galaxygates_spins.GalaxygatesSpins}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedGalaxygatesSpinsImpl implements GalaxygatesSpins {
    
    private int id;
    private String type;
    private BigDecimal probability;
    private int itemsId;
    private int amount;
    
    protected GeneratedGalaxygatesSpinsImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getType() {
        return type;
    }
    
    @Override
    public BigDecimal getProbability() {
        return probability;
    }
    
    @Override
    public int getItemsId() {
        return itemsId;
    }
    
    @Override
    public int getAmount() {
        return amount;
    }
    
    @Override
    public GalaxygatesSpins setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public GalaxygatesSpins setType(String type) {
        this.type = type;
        return this;
    }
    
    @Override
    public GalaxygatesSpins setProbability(BigDecimal probability) {
        this.probability = probability;
        return this;
    }
    
    @Override
    public GalaxygatesSpins setItemsId(int itemsId) {
        this.itemsId = itemsId;
        return this;
    }
    
    @Override
    public GalaxygatesSpins setAmount(int amount) {
        this.amount = amount;
        return this;
    }
    
    @Override
    public Items findItemsId(Manager<Items> foreignManager) {
        return foreignManager.stream().filter(Items.ID.equal(getItemsId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "          + Objects.toString(getId()));
        sj.add("type = "        + Objects.toString(getType()));
        sj.add("probability = " + Objects.toString(getProbability()));
        sj.add("itemsId = "     + Objects.toString(getItemsId()));
        sj.add("amount = "      + Objects.toString(getAmount()));
        return "GalaxygatesSpinsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof GalaxygatesSpins)) { return false; }
        final GalaxygatesSpins thatGalaxygatesSpins = (GalaxygatesSpins)that;
        if (this.getId() != thatGalaxygatesSpins.getId()) {return false; }
        if (!Objects.equals(this.getType(), thatGalaxygatesSpins.getType())) {return false; }
        if (!Objects.equals(this.getProbability(), thatGalaxygatesSpins.getProbability())) {return false; }
        if (this.getItemsId() != thatGalaxygatesSpins.getItemsId()) {return false; }
        if (this.getAmount() != thatGalaxygatesSpins.getAmount()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getType());
        hash = 31 * hash + Objects.hashCode(getProbability());
        hash = 31 * hash + Integer.hashCode(getItemsId());
        hash = 31 * hash + Integer.hashCode(getAmount());
        return hash;
    }
}