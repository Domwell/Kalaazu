package com.manulaiko.kalaazu.persistence.database.entities.clans_roles_permissions.generated;

import com.manulaiko.kalaazu.persistence.database.entities.clans_roles.ClansRoles;
import com.manulaiko.kalaazu.persistence.database.entities.clans_roles_permissions.ClansRolesPermissions;
import com.manulaiko.kalaazu.persistence.database.entities.permissions.Permissions;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.function.OptionalBoolean;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.clans_roles_permissions.ClansRolesPermissions}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedClansRolesPermissionsImpl implements ClansRolesPermissions {
    
    private int id;
    private int clansRolesId;
    private int permissionsId;
    private Boolean enabled;
    
    protected GeneratedClansRolesPermissionsImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public int getClansRolesId() {
        return clansRolesId;
    }
    
    @Override
    public int getPermissionsId() {
        return permissionsId;
    }
    
    @Override
    public OptionalBoolean getEnabled() {
        return OptionalUtil.ofNullable(enabled);
    }
    
    @Override
    public ClansRolesPermissions setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public ClansRolesPermissions setClansRolesId(int clansRolesId) {
        this.clansRolesId = clansRolesId;
        return this;
    }
    
    @Override
    public ClansRolesPermissions setPermissionsId(int permissionsId) {
        this.permissionsId = permissionsId;
        return this;
    }
    
    @Override
    public ClansRolesPermissions setEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @Override
    public ClansRoles findClansRolesId(Manager<ClansRoles> foreignManager) {
        return foreignManager.stream().filter(ClansRoles.ID.equal(getClansRolesId())).findAny().orElse(null);
    }
    
    @Override
    public Permissions findPermissionsId(Manager<Permissions> foreignManager) {
        return foreignManager.stream().filter(Permissions.ID.equal(getPermissionsId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "            + Objects.toString(getId()));
        sj.add("clansRolesId = "  + Objects.toString(getClansRolesId()));
        sj.add("permissionsId = " + Objects.toString(getPermissionsId()));
        sj.add("enabled = "       + Objects.toString(OptionalUtil.unwrap(getEnabled())));
        return "ClansRolesPermissionsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof ClansRolesPermissions)) { return false; }
        final ClansRolesPermissions thatClansRolesPermissions = (ClansRolesPermissions)that;
        if (this.getId() != thatClansRolesPermissions.getId()) {return false; }
        if (this.getClansRolesId() != thatClansRolesPermissions.getClansRolesId()) {return false; }
        if (this.getPermissionsId() != thatClansRolesPermissions.getPermissionsId()) {return false; }
        if (!Objects.equals(this.getEnabled(), thatClansRolesPermissions.getEnabled())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getClansRolesId());
        hash = 31 * hash + Integer.hashCode(getPermissionsId());
        hash = 31 * hash + Objects.hashCode(getEnabled());
        return hash;
    }
}