package com.manulaiko.kalaazu.persistence.database.entities.accounts.generated;

import com.manulaiko.kalaazu.persistence.database.entities.accounts.Accounts;
import com.manulaiko.kalaazu.persistence.database.entities.accounts_hangars.AccountsHangars;
import com.manulaiko.kalaazu.persistence.database.entities.clans.Clans;
import com.manulaiko.kalaazu.persistence.database.entities.factions.Factions;
import com.manulaiko.kalaazu.persistence.database.entities.levels.Levels;
import com.manulaiko.kalaazu.persistence.database.entities.ranks.Ranks;
import com.manulaiko.kalaazu.persistence.database.entities.users.Users;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.manulaiko.kalaazu.persistence.database.entities.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.*;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Timestamp;
import java.util.Optional;
import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.accounts.Accounts}-interface
 * representing entities of the {@code accounts}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccounts {

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getId()} method.
     */
    IntField<Accounts, Integer>                                            ID                  = IntField.create(
            Identifier.ID,
            Accounts::getId,
            Accounts::setId,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getUsersId()} method.
     */
    IntForeignKeyField<Accounts, Integer, Users>                           USERS_ID            = IntForeignKeyField.create(
            Identifier.USERS_ID,
            Accounts::getUsersId,
            Accounts::setUsersId,
            Users.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getSessionId()} method.
     */
    StringField<Accounts, String>                                          SESSION_ID          = StringField.create(
            Identifier.SESSION_ID,
            Accounts::getSessionId,
            Accounts::setSessionId,
            TypeMapper.identity(),
            true
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getLevelsId()} method.
     */
    ByteForeignKeyField<Accounts, Byte, Levels>                            LEVELS_ID           = ByteForeignKeyField.create(
            Identifier.LEVELS_ID,
            Accounts::getLevelsId,
            Accounts::setLevelsId,
            Levels.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getFactionsId()} method.
     */
    ComparableForeignKeyField<Accounts, Byte, Byte, Factions>              FACTIONS_ID         = ComparableForeignKeyField.create(
            Identifier.FACTIONS_ID,
            o -> OptionalUtil.unwrap(o.getFactionsId()),
            Accounts::setFactionsId,
            Factions.ID,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getAccountsHangarsId()} method.
     */
    ComparableForeignKeyField<Accounts, Integer, Integer, AccountsHangars> ACCOUNTS_HANGARS_ID = ComparableForeignKeyField.create(
            Identifier.ACCOUNTS_HANGARS_ID,
            o -> OptionalUtil.unwrap(o.getAccountsHangarsId()),
            Accounts::setAccountsHangarsId,
            AccountsHangars.ID,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getClansId()} method.
     */
    ComparableForeignKeyField<Accounts, Integer, Integer, Clans>           CLANS_ID            = ComparableForeignKeyField.create(
            Identifier.CLANS_ID,
            o -> OptionalUtil.unwrap(o.getClansId()),
            Accounts::setClansId,
            Clans.ID,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getRanksId()} method.
     */
    ByteForeignKeyField<Accounts, Byte, Ranks>                             RANKS_ID            = ByteForeignKeyField.create(
            Identifier.RANKS_ID,
            Accounts::getRanksId,
            Accounts::setRanksId,
            Ranks.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getName()} method.
     */
    StringField<Accounts, String>                                          NAME                = StringField.create(
            Identifier.NAME,
            Accounts::getName,
            Accounts::setName,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getBanDate()} method.
     */
    ComparableField<Accounts, Timestamp, Timestamp>                        BAN_DATE            = ComparableField.create(
            Identifier.BAN_DATE,
            o -> OptionalUtil.unwrap(o.getBanDate()),
            Accounts::setBanDate,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getPremiumDate()} method.
     */
    ComparableField<Accounts, Timestamp, Timestamp>                        PREMIUM_DATE        = ComparableField.create(
            Identifier.PREMIUM_DATE,
            o -> OptionalUtil.unwrap(o.getPremiumDate()),
            Accounts::setPremiumDate,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getDate()} method.
     */
    ComparableField<Accounts, Timestamp, Timestamp>                        DATE                = ComparableField.create(
            Identifier.DATE,
            Accounts::getDate,
            Accounts::setDate,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getLastLogin()} method.
     */
    ComparableField<Accounts, Timestamp, Timestamp>                        LAST_LOGIN          = ComparableField.create(
            Identifier.LAST_LOGIN,
            o -> OptionalUtil.unwrap(o.getLastLogin()),
            Accounts::setLastLogin,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getSkillPointsTotal()} method.
     */
    ShortField<Accounts, Short>                                            SKILL_POINTS_TOTAL  = ShortField.create(
            Identifier.SKILL_POINTS_TOTAL,
            Accounts::getSkillPointsTotal,
            Accounts::setSkillPointsTotal,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Accounts} field that can be obtained
     * using the {@link Accounts#getSkillPointsFree()} method.
     */
    ShortField<Accounts, Short>                                            SKILL_POINTS_FREE   = ShortField.create(
            Identifier.SKILL_POINTS_FREE,
            Accounts::getSkillPointsFree,
            Accounts::setSkillPointsFree,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this Accounts. The id field corresponds to the database
     * column kalaazu.kalaazu.accounts.id.
     *
     * @return the id of this Accounts
     */
    Integer getId();

    /**
     * Returns the usersId of this Accounts. The usersId field corresponds to
     * the database column kalaazu.kalaazu.accounts.users_id.
     *
     * @return the usersId of this Accounts
     */
    int getUsersId();

    /**
     * Returns the sessionId of this Accounts. The sessionId field corresponds
     * to the database column kalaazu.kalaazu.accounts.session_id.
     *
     * @return the sessionId of this Accounts
     */
    String getSessionId();

    /**
     * Returns the levelsId of this Accounts. The levelsId field corresponds to
     * the database column kalaazu.kalaazu.accounts.levels_id.
     *
     * @return the levelsId of this Accounts
     */
    byte getLevelsId();

    /**
     * Returns the factionsId of this Accounts. The factionsId field corresponds
     * to the database column kalaazu.kalaazu.accounts.factions_id.
     *
     * @return the factionsId of this Accounts
     */
    Optional<Byte> getFactionsId();

    /**
     * Returns the accountsHangarsId of this Accounts. The accountsHangarsId
     * field corresponds to the database column
     * kalaazu.kalaazu.accounts.accounts_hangars_id.
     *
     * @return the accountsHangarsId of this Accounts
     */
    OptionalInt getAccountsHangarsId();

    /**
     * Returns the clansId of this Accounts. The clansId field corresponds to
     * the database column kalaazu.kalaazu.accounts.clans_id.
     *
     * @return the clansId of this Accounts
     */
    OptionalInt getClansId();

    /**
     * Returns the ranksId of this Accounts. The ranksId field corresponds to
     * the database column kalaazu.kalaazu.accounts.ranks_id.
     *
     * @return the ranksId of this Accounts
     */
    byte getRanksId();

    /**
     * Returns the name of this Accounts. The name field corresponds to the
     * database column kalaazu.kalaazu.accounts.name.
     *
     * @return the name of this Accounts
     */
    String getName();

    /**
     * Returns the banDate of this Accounts. The banDate field corresponds to
     * the database column kalaazu.kalaazu.accounts.ban_date.
     *
     * @return the banDate of this Accounts
     */
    Optional<Timestamp> getBanDate();

    /**
     * Returns the premiumDate of this Accounts. The premiumDate field
     * corresponds to the database column kalaazu.kalaazu.accounts.premium_date.
     *
     * @return the premiumDate of this Accounts
     */
    Optional<Timestamp> getPremiumDate();

    /**
     * Returns the date of this Accounts. The date field corresponds to the
     * database column kalaazu.kalaazu.accounts.date.
     *
     * @return the date of this Accounts
     */
    Timestamp getDate();

    /**
     * Returns the lastLogin of this Accounts. The lastLogin field corresponds
     * to the database column kalaazu.kalaazu.accounts.last_login.
     *
     * @return the lastLogin of this Accounts
     */
    Optional<Timestamp> getLastLogin();

    /**
     * Returns the skillPointsTotal of this Accounts. The skillPointsTotal field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts.skill_points_total.
     *
     * @return the skillPointsTotal of this Accounts
     */
    short getSkillPointsTotal();

    /**
     * Returns the skillPointsFree of this Accounts. The skillPointsFree field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts.skill_points_free.
     *
     * @return the skillPointsFree of this Accounts
     */
    short getSkillPointsFree();

    /**
     * Sets the id of this Accounts. The id field corresponds to the database
     * column kalaazu.kalaazu.accounts.id.
     *
     * @param id to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setId(int id);

    /**
     * Sets the usersId of this Accounts. The usersId field corresponds to the
     * database column kalaazu.kalaazu.accounts.users_id.
     *
     * @param usersId to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setUsersId(int usersId);

    /**
     * Sets the sessionId of this Accounts. The sessionId field corresponds to
     * the database column kalaazu.kalaazu.accounts.session_id.
     *
     * @param sessionId to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setSessionId(String sessionId);

    /**
     * Sets the levelsId of this Accounts. The levelsId field corresponds to the
     * database column kalaazu.kalaazu.accounts.levels_id.
     *
     * @param levelsId to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setLevelsId(byte levelsId);

    /**
     * Sets the factionsId of this Accounts. The factionsId field corresponds to
     * the database column kalaazu.kalaazu.accounts.factions_id.
     *
     * @param factionsId to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setFactionsId(Byte factionsId);

    /**
     * Sets the accountsHangarsId of this Accounts. The accountsHangarsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts.accounts_hangars_id.
     *
     * @param accountsHangarsId to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setAccountsHangarsId(Integer accountsHangarsId);

    /**
     * Sets the clansId of this Accounts. The clansId field corresponds to the
     * database column kalaazu.kalaazu.accounts.clans_id.
     *
     * @param clansId to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setClansId(Integer clansId);

    /**
     * Sets the ranksId of this Accounts. The ranksId field corresponds to the
     * database column kalaazu.kalaazu.accounts.ranks_id.
     *
     * @param ranksId to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setRanksId(byte ranksId);

    /**
     * Sets the name of this Accounts. The name field corresponds to the
     * database column kalaazu.kalaazu.accounts.name.
     *
     * @param name to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setName(String name);

    /**
     * Sets the banDate of this Accounts. The banDate field corresponds to the
     * database column kalaazu.kalaazu.accounts.ban_date.
     *
     * @param banDate to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setBanDate(Timestamp banDate);

    /**
     * Sets the premiumDate of this Accounts. The premiumDate field corresponds
     * to the database column kalaazu.kalaazu.accounts.premium_date.
     *
     * @param premiumDate to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setPremiumDate(Timestamp premiumDate);

    /**
     * Sets the date of this Accounts. The date field corresponds to the
     * database column kalaazu.kalaazu.accounts.date.
     *
     * @param date to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setDate(Timestamp date);

    /**
     * Sets the lastLogin of this Accounts. The lastLogin field corresponds to
     * the database column kalaazu.kalaazu.accounts.last_login.
     *
     * @param lastLogin to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setLastLogin(Timestamp lastLogin);

    /**
     * Sets the skillPointsTotal of this Accounts. The skillPointsTotal field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts.skill_points_total.
     *
     * @param skillPointsTotal to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setSkillPointsTotal(short skillPointsTotal);

    /**
     * Sets the skillPointsFree of this Accounts. The skillPointsFree field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts.skill_points_free.
     *
     * @param skillPointsFree to set of this Accounts
     *
     * @return this Accounts instance
     */
    Accounts setSkillPointsFree(short skillPointsFree);

    /**
     * Queries the specified manager for the referenced Users. If no such Users
     * exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Users findUsersId(Manager<Users> foreignManager);

    /**
     * Queries the specified manager for the referenced Levels. If no such
     * Levels exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Levels findLevelsId(Manager<Levels> foreignManager);

    /**
     * Queries the specified manager for the referenced Factions. If no such
     * Factions exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Optional<Factions> findFactionsId(Manager<Factions> foreignManager);

    /**
     * Queries the specified manager for the referenced AccountsHangars. If no
     * such AccountsHangars exists, an {@code NullPointerException} will be
     * thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Optional<AccountsHangars> findAccountsHangarsId(Manager<AccountsHangars> foreignManager);

    /**
     * Queries the specified manager for the referenced Clans. If no such Clans
     * exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Optional<Clans> findClansId(Manager<Clans> foreignManager);

    /**
     * Queries the specified manager for the referenced Ranks. If no such Ranks
     * exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Ranks findRanksId(Manager<Ranks> foreignManager);

    enum Identifier implements ColumnIdentifier<Accounts> {

        ID("id"),
        USERS_ID("users_id"),
        SESSION_ID("session_id"),
        LEVELS_ID("levels_id"),
        FACTIONS_ID("factions_id"),
        ACCOUNTS_HANGARS_ID("accounts_hangars_id"),
        CLANS_ID("clans_id"),
        RANKS_ID("ranks_id"),
        NAME("name"),
        BAN_DATE("ban_date"),
        PREMIUM_DATE("premium_date"),
        DATE("date"),
        LAST_LOGIN("last_login"),
        SKILL_POINTS_TOTAL("skill_points_total"),
        SKILL_POINTS_FREE("skill_points_free");

        private final String                    columnName;

        private final TableIdentifier<Accounts> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "accounts";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<Accounts> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}