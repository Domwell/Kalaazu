package com.manulaiko.kalaazu.persistence.database.entities.accounts.generated;

import com.manulaiko.kalaazu.persistence.database.entities.accounts.Accounts;
import com.manulaiko.kalaazu.persistence.database.entities.accounts.AccountsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.common.injector.annotation.WithState;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.getByte;
import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.getInt;

/**
 * The generated Sql Adapter for a {@link
 * com.manulaiko.kalaazu.persistence.database.entities.accounts.Accounts}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsSqlAdapter {

    private final TableIdentifier<Accounts> tableIdentifier;

    protected GeneratedAccountsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "accounts");
    }

    @ExecuteBefore(RESOLVED)
    void installMethodName(
            @WithState(RESOLVED) SqlStreamSupplierComponent streamSupplierComponent,
            @WithState(RESOLVED) SqlPersistenceComponent persistenceComponent
    ) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }

    protected Accounts apply(ResultSet resultSet) throws SpeedmentException {
        final Accounts entity = createEntity();
        try {
            entity.setId(resultSet.getInt(1));
            entity.setUsersId(resultSet.getInt(2));
            entity.setSessionId(resultSet.getString(3));
            entity.setLevelsId(resultSet.getByte(4));
            entity.setFactionsId(getByte(resultSet, 5));
            entity.setAccountsHangarsId(getInt(resultSet, 6));
            entity.setClansId(getInt(resultSet, 7));
            entity.setRanksId(resultSet.getByte(8));
            entity.setName(resultSet.getString(9));
            entity.setBanDate(resultSet.getTimestamp(10));
            entity.setPremiumDate(resultSet.getTimestamp(11));
            entity.setDate(resultSet.getTimestamp(12));
            entity.setLastLogin(resultSet.getTimestamp(13));
            entity.setSkillPointsTotal(resultSet.getShort(14));
            entity.setSkillPointsFree(resultSet.getShort(15));
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }

    protected AccountsImpl createEntity() {
        return new AccountsImpl();
    }
}