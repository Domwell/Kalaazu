package com.manulaiko.kalaazu.persistence.database.entities.accounts_configurations.generated;

import com.manulaiko.kalaazu.persistence.database.entities.accounts_configurations.AccountsConfigurations;
import com.manulaiko.kalaazu.persistence.database.entities.accounts_hangars.AccountsHangars;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.accounts_configurations.AccountsConfigurations}-interface
 * representing entities of the {@code accounts_configurations}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsConfigurations {
    
    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link AccountsConfigurations#getId()} method.
     */
    IntField<AccountsConfigurations, Integer> ID = IntField.create(
        Identifier.ID,
        AccountsConfigurations::getId,
        AccountsConfigurations::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link
     * AccountsConfigurations#getAccountsHangarsId()} method.
     */
    IntForeignKeyField<AccountsConfigurations, Integer, AccountsHangars> ACCOUNTS_HANGARS_ID = IntForeignKeyField.create(
        Identifier.ACCOUNTS_HANGARS_ID,
        AccountsConfigurations::getAccountsHangarsId,
        AccountsConfigurations::setAccountsHangarsId,
        AccountsHangars.ID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link
     * AccountsConfigurations#getConfigurationId()} method.
     */
    IntField<AccountsConfigurations, Integer> CONFIGURATION_ID = IntField.create(
        Identifier.CONFIGURATION_ID,
        AccountsConfigurations::getConfigurationId,
        AccountsConfigurations::setConfigurationId,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link AccountsConfigurations#getName()}
     * method.
     */
    StringField<AccountsConfigurations, String> NAME = StringField.create(
        Identifier.NAME,
        AccountsConfigurations::getName,
        AccountsConfigurations::setName,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this AccountsConfigurations. The id field corresponds
     * to the database column kalaazu.kalaazu.accounts_configurations.id.
     * 
     * @return the id of this AccountsConfigurations
     */
    int getId();
    
    /**
     * Returns the accountsHangarsId of this AccountsConfigurations. The
     * accountsHangarsId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.accounts_hangars_id.
     * 
     * @return the accountsHangarsId of this AccountsConfigurations
     */
    int getAccountsHangarsId();
    
    /**
     * Returns the configurationId of this AccountsConfigurations. The
     * configurationId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.configuration_id.
     * 
     * @return the configurationId of this AccountsConfigurations
     */
    int getConfigurationId();
    
    /**
     * Returns the name of this AccountsConfigurations. The name field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.name.
     * 
     * @return the name of this AccountsConfigurations
     */
    String getName();
    
    /**
     * Sets the id of this AccountsConfigurations. The id field corresponds to
     * the database column kalaazu.kalaazu.accounts_configurations.id.
     * 
     * @param id to set of this AccountsConfigurations
     * @return   this AccountsConfigurations instance
     */
    AccountsConfigurations setId(int id);
    
    /**
     * Sets the accountsHangarsId of this AccountsConfigurations. The
     * accountsHangarsId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.accounts_hangars_id.
     * 
     * @param accountsHangarsId to set of this AccountsConfigurations
     * @return                  this AccountsConfigurations instance
     */
    AccountsConfigurations setAccountsHangarsId(int accountsHangarsId);
    
    /**
     * Sets the configurationId of this AccountsConfigurations. The
     * configurationId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.configuration_id.
     * 
     * @param configurationId to set of this AccountsConfigurations
     * @return                this AccountsConfigurations instance
     */
    AccountsConfigurations setConfigurationId(int configurationId);
    
    /**
     * Sets the name of this AccountsConfigurations. The name field corresponds
     * to the database column kalaazu.kalaazu.accounts_configurations.name.
     * 
     * @param name to set of this AccountsConfigurations
     * @return     this AccountsConfigurations instance
     */
    AccountsConfigurations setName(String name);
    
    /**
     * Queries the specified manager for the referenced AccountsHangars. If no
     * such AccountsHangars exists, an {@code NullPointerException} will be
     * thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    AccountsHangars findAccountsHangarsId(Manager<AccountsHangars> foreignManager);
    
    enum Identifier implements ColumnIdentifier<AccountsConfigurations> {
        
        ID                  ("id"),
        ACCOUNTS_HANGARS_ID ("accounts_hangars_id"),
        CONFIGURATION_ID    ("configuration_id"),
        NAME                ("name");
        
        private final String columnName;
        private final TableIdentifier<AccountsConfigurations> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "kalaazu";
        }
        
        @Override
        public String getSchemaName() {
            return "kalaazu";
        }
        
        @Override
        public String getTableName() {
            return "accounts_configurations";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<AccountsConfigurations> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}