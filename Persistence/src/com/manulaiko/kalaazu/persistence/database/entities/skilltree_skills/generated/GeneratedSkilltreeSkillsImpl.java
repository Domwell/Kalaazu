package com.manulaiko.kalaazu.persistence.database.entities.skilltree_skills.generated;

import com.manulaiko.kalaazu.persistence.database.entities.skilltree_skills.SkilltreeSkills;
import com.speedment.common.annotation.GeneratedCode;
import java.math.BigDecimal;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.manulaiko.kalaazu.persistence.database.entities.skilltree_skills.SkilltreeSkills}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSkilltreeSkillsImpl implements SkilltreeSkills {
    
    private int id;
    private String name;
    private String description;
    private int category;
    private boolean isAdvanced;
    private String bonusType;
    private int bonusAmount;
    private BigDecimal bonusFactor;
    
    protected GeneratedSkilltreeSkillsImpl() {
        
    }
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public String getDescription() {
        return description;
    }
    
    @Override
    public int getCategory() {
        return category;
    }
    
    @Override
    public boolean getIsAdvanced() {
        return isAdvanced;
    }
    
    @Override
    public String getBonusType() {
        return bonusType;
    }
    
    @Override
    public int getBonusAmount() {
        return bonusAmount;
    }
    
    @Override
    public BigDecimal getBonusFactor() {
        return bonusFactor;
    }
    
    @Override
    public SkilltreeSkills setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public SkilltreeSkills setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public SkilltreeSkills setDescription(String description) {
        this.description = description;
        return this;
    }
    
    @Override
    public SkilltreeSkills setCategory(int category) {
        this.category = category;
        return this;
    }
    
    @Override
    public SkilltreeSkills setIsAdvanced(boolean isAdvanced) {
        this.isAdvanced = isAdvanced;
        return this;
    }
    
    @Override
    public SkilltreeSkills setBonusType(String bonusType) {
        this.bonusType = bonusType;
        return this;
    }
    
    @Override
    public SkilltreeSkills setBonusAmount(int bonusAmount) {
        this.bonusAmount = bonusAmount;
        return this;
    }
    
    @Override
    public SkilltreeSkills setBonusFactor(BigDecimal bonusFactor) {
        this.bonusFactor = bonusFactor;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "          + Objects.toString(getId()));
        sj.add("name = "        + Objects.toString(getName()));
        sj.add("description = " + Objects.toString(getDescription()));
        sj.add("category = "    + Objects.toString(getCategory()));
        sj.add("isAdvanced = "  + Objects.toString(getIsAdvanced()));
        sj.add("bonusType = "   + Objects.toString(getBonusType()));
        sj.add("bonusAmount = " + Objects.toString(getBonusAmount()));
        sj.add("bonusFactor = " + Objects.toString(getBonusFactor()));
        return "SkilltreeSkillsImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof SkilltreeSkills)) { return false; }
        final SkilltreeSkills thatSkilltreeSkills = (SkilltreeSkills)that;
        if (this.getId() != thatSkilltreeSkills.getId()) {return false; }
        if (!Objects.equals(this.getName(), thatSkilltreeSkills.getName())) {return false; }
        if (!Objects.equals(this.getDescription(), thatSkilltreeSkills.getDescription())) {return false; }
        if (this.getCategory() != thatSkilltreeSkills.getCategory()) {return false; }
        if (this.getIsAdvanced() != thatSkilltreeSkills.getIsAdvanced()) {return false; }
        if (!Objects.equals(this.getBonusType(), thatSkilltreeSkills.getBonusType())) {return false; }
        if (this.getBonusAmount() != thatSkilltreeSkills.getBonusAmount()) {return false; }
        if (!Objects.equals(this.getBonusFactor(), thatSkilltreeSkills.getBonusFactor())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getDescription());
        hash = 31 * hash + Integer.hashCode(getCategory());
        hash = 31 * hash + Boolean.hashCode(getIsAdvanced());
        hash = 31 * hash + Objects.hashCode(getBonusType());
        hash = 31 * hash + Integer.hashCode(getBonusAmount());
        hash = 31 * hash + Objects.hashCode(getBonusFactor());
        return hash;
    }
}