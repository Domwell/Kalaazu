package com.kalaazu.persistence.database.entities.accounts_messages.generated;

import com.kalaazu.persistence.database.entities.AccountsMessages;
import com.kalaazu.persistence.database.entities.accounts_messages.AccountsMessagesImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.accounts_messages.AccountsMessages}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsMessagesSqlAdapter implements SqlAdapter<AccountsMessages> {

    private final TableIdentifier<AccountsMessages> tableIdentifier;

    private SqlTypeMapperHelper<Byte, MessageStatus> fromStatusHelper;

    private SqlTypeMapperHelper<Byte, MessageStatus> toStatusHelper;

    protected GeneratedAccountsMessagesSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "accounts_messages");
    }

    protected AccountsMessages apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getInt(1 + offset))
                .setFromAccountsId(resultSet.getInt(2 + offset))
                .setFromStatus(resultSet.getByte(3 + offset))
                .setToAccountsId(resultSet.getInt(4 + offset))
                .setToStatus(resultSet.getByte(5 + offset))
                .setDate(resultSet.getTimestamp(6 + offset))
                .setTitle(resultSet.getString(7 + offset))
                .setText(resultSet.getString(8 + offset))
                ;
    }

    protected AccountsMessagesImpl createEntity() {
        return new AccountsMessagesImpl();
    }

    @Override
    public TableIdentifier<AccountsMessages> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, AccountsMessages> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, AccountsMessages> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}