package com.kalaazu.persistence.database.entities.events.generated;

import com.kalaazu.persistence.database.entities.Events;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * Events}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedEventsImpl implements Events {

    private int id;

    private String name;

    private String description;

    private Timestamp startDate;

    private Timestamp endDate;

    protected GeneratedEventsImpl() {

    }

    @Override
    public Integer getId() {
        return id;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public String getDescription() {
        return description;
    }

    @Override
    public Optional<Timestamp> getStartDate() {
        return Optional.ofNullable(startDate);
    }

    @Override
    public Optional<Timestamp> getEndDate() {
        return Optional.ofNullable(endDate);
    }

    @Override
    public Events setId(int id) {
        this.id = id;
        return this;
    }

    @Override
    public Events setName(String name) {
        this.name = name;
        return this;
    }

    @Override
    public Events setDescription(String description) {
        this.description = description;
        return this;
    }

    @Override
    public Events setStartDate(Timestamp startDate) {
        this.startDate = startDate;
        return this;
    }

    @Override
    public Events setEndDate(Timestamp endDate) {
        this.endDate = endDate;
        return this;
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("name = " + Objects.toString(getName()));
        sj.add("description = " + Objects.toString(getDescription()));
        sj.add("startDate = " + Objects.toString(OptionalUtil.unwrap(getStartDate())));
        sj.add("endDate = " + Objects.toString(OptionalUtil.unwrap(getEndDate())));
        return "EventsImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof Events)) {
            return false;
        }
        final Events thatEvents = (Events) that;
        if (this.getId() != thatEvents.getId()) {
            return false;
        }
        if (!Objects.equals(this.getName(), thatEvents.getName())) {
            return false;
        }
        if (!Objects.equals(this.getDescription(), thatEvents.getDescription())) {
            return false;
        }
        if (!Objects.equals(this.getStartDate(), thatEvents.getStartDate())) {
            return false;
        }
        if (!Objects.equals(this.getEndDate(), thatEvents.getEndDate())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getDescription());
        hash = 31 * hash + Objects.hashCode(getStartDate());
        hash = 31 * hash + Objects.hashCode(getEndDate());
        return hash;
    }
}