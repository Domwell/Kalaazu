package com.kalaazu.persistence.database.entities.accounts_messages.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.AccountsMessages;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.mappers.MessageStatus;
import com.kalaazu.persistence.database.mappers.MessageStatusMapper;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.*;
import com.speedment.runtime.field.method.ReferenceSetter;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Timestamp;

/**
 * The generated base for the {@link
 * AccountsMessages}-interface
 * representing entities of the {@code accounts_messages}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsMessages {

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#id()} method.
     */
    IntField<AccountsMessages, Integer> ID = IntField.create(
            Identifier.ID,
            AccountsMessages::id,
            AccountsMessages::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#fromAccountsId()} method.
     */
    IntForeignKeyField<AccountsMessages, Integer, Accounts> FROM_ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.FROM_ACCOUNTS_ID,
            AccountsMessages::fromAccountsId,
            AccountsMessages::fromAccountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#fromStatus()} method.
     */
    EnumField<AccountsMessages, Byte, MessageStatus> FROM_STATUS = EnumField.create(
            Identifier.FROM_STATUS,
            AccountsMessages::fromStatus,
            AccountsMessages::fromStatus,
            new MessageStatusMapper(),
            MessageStatus::name,
            MessageStatus::valueOf,
            MessageStatus.class
    );

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#toAccountsId()} method.
     */
    IntForeignKeyField<AccountsMessages, Integer, Accounts> TO_ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.TO_ACCOUNTS_ID,
            AccountsMessages::toAccountsId,
            AccountsMessages::toAccountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#toStatus()} method.
     */
    EnumField<AccountsMessages, Byte, MessageStatus> TO_STATUS = EnumField.create(
            Identifier.TO_STATUS,
            AccountsMessages::toStatus,
            AccountsMessages::toStatus,
            new MessageStatusMapper(),
            MessageStatus::name,
            MessageStatus::valueOf,
            MessageStatus.class
    );

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#date()} method.
     */
    ComparableField<AccountsMessages, Timestamp, Timestamp> DATE = ComparableField.create(
            Identifier.DATE,
            AccountsMessages::date,
            (ReferenceSetter<AccountsMessages, Timestamp>) AccountsMessages::date,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#title()} method.
     */
    StringField<AccountsMessages, String> TITLE = StringField.create(
            Identifier.TITLE,
            AccountsMessages::title,
            AccountsMessages::title,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsMessages} field that can be
     * obtained using the {@link AccountsMessages#text()} method.
     */
    StringField<AccountsMessages, String> TEXT = StringField.create(
            Identifier.TEXT,
            AccountsMessages::text,
            AccountsMessages::text,
            TypeMapper.identity(),
            false
    );

    /**
     * Returns the id of this AccountsMessages. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_messages.id.
     *
     * @return the id of this AccountsMessages
     */
    Integer id();

    /**
     * Returns the fromAccountsId of this AccountsMessages. The fromAccountsId
     * field corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.from_accounts_id.
     *
     * @return the fromAccountsId of this AccountsMessages
     */
    int fromAccountsId();

    /**
     * Returns the fromStatus of this AccountsMessages. The fromStatus field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.from_status.
     *
     * @return the fromStatus of this AccountsMessages
     */
    MessageStatus fromStatus();

    /**
     * Returns the toAccountsId of this AccountsMessages. The toAccountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.to_accounts_id.
     *
     * @return the toAccountsId of this AccountsMessages
     */
    int toAccountsId();

    /**
     * Returns the toStatus of this AccountsMessages. The toStatus field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.to_status.
     *
     * @return the toStatus of this AccountsMessages
     */
    MessageStatus toStatus();

    /**
     * Returns the date of this AccountsMessages. The date field corresponds to
     * the database column kalaazu.kalaazu.accounts_messages.date.
     *
     * @return the date of this AccountsMessages
     */
    Timestamp date();

    /**
     * Returns the title of this AccountsMessages. The title field corresponds
     * to the database column kalaazu.kalaazu.accounts_messages.title.
     *
     * @return the title of this AccountsMessages
     */
    String title();

    /**
     * Returns the text of this AccountsMessages. The text field corresponds to
     * the database column kalaazu.kalaazu.accounts_messages.text.
     *
     * @return the text of this AccountsMessages
     */
    String text();

    /**
     * Sets the id of this AccountsMessages. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_messages.id.
     *
     * @param id to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages id(Integer id);

    /**
     * Sets the fromAccountsId of this AccountsMessages. The fromAccountsId
     * field corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.from_accounts_id.
     *
     * @param fromAccountsId to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages fromAccountsId(int fromAccountsId);

    /**
     * Sets the fromStatus of this AccountsMessages. The fromStatus field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.from_status.
     *
     * @param fromStatus to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages fromStatus(MessageStatus fromStatus);

    /**
     * Sets the toAccountsId of this AccountsMessages. The toAccountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.to_accounts_id.
     *
     * @param toAccountsId to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages toAccountsId(int toAccountsId);

    /**
     * Sets the toStatus of this AccountsMessages. The toStatus field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_messages.to_status.
     *
     * @param toStatus to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages toStatus(MessageStatus toStatus);

    /**
     * Sets the date of this AccountsMessages. The date field corresponds to the
     * database column kalaazu.kalaazu.accounts_messages.date.
     *
     * @param date to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages date(Timestamp date);

    /**
     * Sets the title of this AccountsMessages. The title field corresponds to
     * the database column kalaazu.kalaazu.accounts_messages.title.
     *
     * @param title to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages title(String title);

    /**
     * Sets the text of this AccountsMessages. The text field corresponds to the
     * database column kalaazu.kalaazu.accounts_messages.text.
     *
     * @param text to set of this AccountsMessages
     *
     * @return this AccountsMessages instance
     */
    AccountsMessages text(String text);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findFromAccountsId(Manager<Accounts> foreignManager);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findToAccountsId(Manager<Accounts> foreignManager);

    enum Identifier implements ColumnIdentifier<AccountsMessages> {

        ID("id"),
        FROM_ACCOUNTS_ID("from_accounts_id"),
        FROM_STATUS("from_status"),
        TO_ACCOUNTS_ID("to_accounts_id"),
        TO_STATUS("to_status"),
        DATE("date"),
        TITLE("title"),
        TEXT("text");

        private final String columnName;

        private final TableIdentifier<AccountsMessages> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "accounts_messages";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<AccountsMessages> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}