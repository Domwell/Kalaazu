/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.entities.tables;


import com.kalaazu.persistence.database.entities.Indexes;
import com.kalaazu.persistence.database.entities.Kalaazu;
import com.kalaazu.persistence.database.entities.Keys;
import com.kalaazu.persistence.database.entities.tables.records.AccountsTechfactoryItemsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Techfactory items from account.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsTechfactoryItems extends TableImpl<AccountsTechfactoryItemsRecord> {

    private static final long serialVersionUID = 724866837;

    /**
     * The reference instance of <code>kalaazu.accounts_techfactory_items</code>
     */
    public static final AccountsTechfactoryItems ACCOUNTS_TECHFACTORY_ITEMS = new AccountsTechfactoryItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsTechfactoryItemsRecord> getRecordType() {
        return AccountsTechfactoryItemsRecord.class;
    }

    /**
     * The column <code>kalaazu.accounts_techfactory_items.id</code>. Primary Key.
     */
    public final TableField<AccountsTechfactoryItemsRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary Key.");

    /**
     * The column <code>kalaazu.accounts_techfactory_items.accounts_id</code>. Account ID.
     */
    public final TableField<AccountsTechfactoryItemsRecord, Integer> ACCOUNTS_ID = createField(DSL.name("accounts_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "Account ID.");

    /**
     * The column <code>kalaazu.accounts_techfactory_items.techfactory_items_id</code>. Item ID.
     */
    public final TableField<AccountsTechfactoryItemsRecord, Byte> TECHFACTORY_ITEMS_ID = createField(DSL.name("techfactory_items_id"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "Item ID.");

    /**
     * The column <code>kalaazu.accounts_techfactory_items.amount</code>. Amount of build items.
     */
    public final TableField<AccountsTechfactoryItemsRecord, Short> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.SMALLINT)), this, "Amount of build items.");

    /**
     * The column <code>kalaazu.accounts_techfactory_items.date</code>. Date when the item started building.
     */
    public final TableField<AccountsTechfactoryItemsRecord, Timestamp> DATE = createField(DSL.name("date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date when the item started building.");

    /**
     * Create a <code>kalaazu.accounts_techfactory_items</code> table reference
     */
    public AccountsTechfactoryItems() {
        this(DSL.name("accounts_techfactory_items"), null);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_techfactory_items</code> table reference
     */
    public AccountsTechfactoryItems(String alias) {
        this(DSL.name(alias), ACCOUNTS_TECHFACTORY_ITEMS);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_techfactory_items</code> table reference
     */
    public AccountsTechfactoryItems(Name alias) {
        this(alias, ACCOUNTS_TECHFACTORY_ITEMS);
    }

    private AccountsTechfactoryItems(Name alias, Table<AccountsTechfactoryItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountsTechfactoryItems(Name alias, Table<AccountsTechfactoryItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Techfactory items from account."));
    }

    public <O extends Record> AccountsTechfactoryItems(Table<O> child, ForeignKey<O, AccountsTechfactoryItemsRecord> key) {
        super(child, key, ACCOUNTS_TECHFACTORY_ITEMS);
    }

    @Override
    public Schema getSchema() {
        return Kalaazu.KALAAZU;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACCOUNTS_TECHFACTORY_ITEMS_ACCOUNTS_TECHFACTORY_ITEMS_ACCOUNTS_ID_IDX, Indexes.ACCOUNTS_TECHFACTORY_ITEMS_ACCOUNTS_TECHFACTORY_ITEMS_TECHFACTORY_ITEMS_ID_IDX, Indexes.ACCOUNTS_TECHFACTORY_ITEMS_PRIMARY);
    }

    @Override
    public Identity<AccountsTechfactoryItemsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACCOUNTS_TECHFACTORY_ITEMS;
    }

    @Override
    public UniqueKey<AccountsTechfactoryItemsRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNTS_TECHFACTORY_ITEMS_PRIMARY;
    }

    @Override
    public List<UniqueKey<AccountsTechfactoryItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsTechfactoryItemsRecord>>asList(Keys.KEY_ACCOUNTS_TECHFACTORY_ITEMS_PRIMARY);
    }

    @Override
    public List<ForeignKey<AccountsTechfactoryItemsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AccountsTechfactoryItemsRecord, ?>>asList(Keys.ACCOUNTS_TECHFACTORY_ITEMS_ACCOUNTS, Keys.ACCOUNTS_TECHFACTORY_ITEMS_TECHFACTORY_ITEMS);
    }

    public Accounts accounts() {
        return new Accounts(this, Keys.ACCOUNTS_TECHFACTORY_ITEMS_ACCOUNTS);
    }

    public TechfactoryItems techfactoryItems() {
        return new TechfactoryItems(this, Keys.ACCOUNTS_TECHFACTORY_ITEMS_TECHFACTORY_ITEMS);
    }

    @Override
    public AccountsTechfactoryItems as(String alias) {
        return new AccountsTechfactoryItems(DSL.name(alias), this);
    }

    @Override
    public AccountsTechfactoryItems as(Name alias) {
        return new AccountsTechfactoryItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsTechfactoryItems rename(String name) {
        return new AccountsTechfactoryItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsTechfactoryItems rename(Name name) {
        return new AccountsTechfactoryItems(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Byte, Short, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
