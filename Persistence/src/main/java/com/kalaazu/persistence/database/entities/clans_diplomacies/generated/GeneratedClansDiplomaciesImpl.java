package com.kalaazu.persistence.database.entities.clans_diplomacies.generated;

import com.kalaazu.persistence.database.entities.Clans;
import com.kalaazu.persistence.database.entities.ClansDiplomacies;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.mappers.DiplomacyStatus;
import com.kalaazu.persistence.database.mappers.DiplomacyType;
import com.speedment.common.annotation.GeneratedCode;
import lombok.Data;

import java.sql.Timestamp;
import java.util.Optional;

/**
 * The generated base implementation of the {@link
 * ClansDiplomacies}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
@Data
public abstract class GeneratedClansDiplomaciesImpl implements ClansDiplomacies {

    private Integer id;

    private int fromClansId;

    private int toClansId;

    private Timestamp date;

    private Timestamp expires;

    private DiplomacyStatus status;

    private DiplomacyType type;

    protected GeneratedClansDiplomaciesImpl() {

    }

    @Override
    public Optional<Timestamp> expires() {
        return Optional.ofNullable(expires);
    }

    @Override
    public Clans findFromClansId(Manager<Clans> foreignManager) {
        return foreignManager.stream()
                             .filter(Clans.ID.equal(fromClansId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Clans findToClansId(Manager<Clans> foreignManager) {
        return foreignManager.stream()
                             .filter(Clans.ID.equal(toClansId()))
                             .findAny()
                             .orElse(null);
    }
}