package com.kalaazu.persistence.database.entities.users.generated;

import com.kalaazu.persistence.database.entities.InvitationCodes;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Users;
import com.speedment.common.annotation.GeneratedCode;
import lombok.Data;

import java.sql.Timestamp;
import java.util.Optional;

/**
 * The generated base implementation of the {@link
 * Users}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
@Data
public abstract class GeneratedUsersImpl implements Users {

    private Integer id;

    private Timestamp date;

    private Short invitationCodesId;

    private String name;

    private String password;

    private String email;

    private String emailVerificationCode;

    private Timestamp emailVerificationDate;

    private String ip;

    protected GeneratedUsersImpl() {

    }

    @Override
    public Optional<Short> invitationCodesId() {
        return Optional.ofNullable(invitationCodesId);
    }

    @Override
    public Optional<Timestamp> emailVerificationDate() {
        return Optional.ofNullable(emailVerificationDate);
    }

    @Override
    public Optional<InvitationCodes> findInvitationCodesId(Manager<InvitationCodes> foreignManager) {
        if (invitationCodesId().isPresent()) {
            return foreignManager.stream()
                                 .filter(InvitationCodes.ID.equal(invitationCodesId().get()))
                                 .findAny();
        } else {
            return Optional.empty();
        }
    }
}