package com.kalaazu.persistence.database.entities.clans_ranking.generated;

import com.kalaazu.persistence.database.entities.Clans;
import com.kalaazu.persistence.database.entities.ClansRanking;
import com.speedment.common.annotation.GeneratedCode;
import com.kalaazu.persistence.database.entities.Manager;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.kalaazu.persistence.database.entities.clans_ranking.ClansRanking}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedClansRankingImpl implements ClansRanking {

    private int id;

    private int clansId;

    private int points;

    private int bestPoints;

    protected GeneratedClansRankingImpl() {
    }

    @Override
    public Integer getId() {
        return id;
    }

    @Override
    public int getClansId() {
        return clansId;
    }

    @Override
    public int getPoints() {
        return points;
    }

    @Override
    public int getBestPoints() {
        return bestPoints;
    }

    @Override
    public ClansRanking setId(int id) {
        this.id = id;
        return this;
    }

    @Override
    public ClansRanking setClansId(int clansId) {
        this.clansId = clansId;
        return this;
    }

    @Override
    public ClansRanking setPoints(int points) {
        this.points = points;
        return this;
    }

    @Override
    public ClansRanking setBestPoints(int bestPoints) {
        this.bestPoints = bestPoints;
        return this;
    }

    @Override
    public Clans findClansId(Manager<Clans> foreignManager) {
        return foreignManager.stream()
                             .filter(Clans.ID.equal(getClansId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("clansId = " + Objects.toString(getClansId()));
        sj.add("points = " + Objects.toString(getPoints()));
        sj.add("bestPoints = " + Objects.toString(getBestPoints()));
        return "ClansRankingImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof ClansRanking)) {
            return false;
        }
        final ClansRanking thatClansRanking = (ClansRanking) that;
        if (this.getId() != thatClansRanking.getId()) {
            return false;
        }
        if (this.getClansId() != thatClansRanking.getClansId()) {
            return false;
        }
        if (this.getPoints() != thatClansRanking.getPoints()) {
            return false;
        }
        if (this.getBestPoints() != thatClansRanking.getBestPoints()) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getClansId());
        hash = 31 * hash + Integer.hashCode(getPoints());
        hash = 31 * hash + Integer.hashCode(getBestPoints());
        return hash;
    }
}