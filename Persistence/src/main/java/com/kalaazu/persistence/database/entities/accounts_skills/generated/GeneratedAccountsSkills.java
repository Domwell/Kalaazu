package com.kalaazu.persistence.database.entities.accounts_skills.generated;

import com.kalaazu.persistence.database.entities.*;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ByteForeignKeyField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.ShortForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.kalaazu.persistence.database.entities.accounts_skills.AccountsSkills}-interface
 * representing entities of the {@code accounts_skills}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsSkills {

    /**
     * This Field corresponds to the {@link AccountsSkills} field that can be
     * obtained using the {@link AccountsSkills#getId()} method.
     */
    IntField<AccountsSkills, Integer> ID = IntField.create(
            Identifier.ID,
            AccountsSkills::getId,
            AccountsSkills::setId,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsSkills} field that can be
     * obtained using the {@link AccountsSkills#getAccountsId()} method.
     */
    IntForeignKeyField<AccountsSkills, Integer, Accounts> ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.ACCOUNTS_ID,
            AccountsSkills::getAccountsId,
            AccountsSkills::setAccountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsSkills} field that can be
     * obtained using the {@link AccountsSkills#getSkilltreeSkillsId()} method.
     */
    ByteForeignKeyField<AccountsSkills, Byte, SkilltreeSkills> SKILLTREE_SKILLS_ID = ByteForeignKeyField.create(
            Identifier.SKILLTREE_SKILLS_ID,
            AccountsSkills::getSkilltreeSkillsId,
            AccountsSkills::setSkilltreeSkillsId,
            SkilltreeSkills.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsSkills} field that can be
     * obtained using the {@link AccountsSkills#getSkilltreeLevelsId()} method.
     */
    ShortForeignKeyField<AccountsSkills, Short, SkilltreeLevels> SKILLTREE_LEVELS_ID = ShortForeignKeyField.create(
            Identifier.SKILLTREE_LEVELS_ID,
            AccountsSkills::getSkilltreeLevelsId,
            AccountsSkills::setSkilltreeLevelsId,
            SkilltreeLevels.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this AccountsSkills. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_skills.id.
     *
     * @return the id of this AccountsSkills
     */
    Integer getId();

    /**
     * Returns the accountsId of this AccountsSkills. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_skills.accounts_id.
     *
     * @return the accountsId of this AccountsSkills
     */
    int getAccountsId();

    /**
     * Returns the skilltreeSkillsId of this AccountsSkills. The
     * skilltreeSkillsId field corresponds to the database column
     * kalaazu.kalaazu.accounts_skills.skilltree_skills_id.
     *
     * @return the skilltreeSkillsId of this AccountsSkills
     */
    byte getSkilltreeSkillsId();

    /**
     * Returns the skilltreeLevelsId of this AccountsSkills. The
     * skilltreeLevelsId field corresponds to the database column
     * kalaazu.kalaazu.accounts_skills.skilltree_levels_id.
     *
     * @return the skilltreeLevelsId of this AccountsSkills
     */
    short getSkilltreeLevelsId();

    /**
     * Sets the id of this AccountsSkills. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_skills.id.
     *
     * @param id to set of this AccountsSkills
     *
     * @return this AccountsSkills instance
     */
    AccountsSkills setId(int id);

    /**
     * Sets the accountsId of this AccountsSkills. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_skills.accounts_id.
     *
     * @param accountsId to set of this AccountsSkills
     *
     * @return this AccountsSkills instance
     */
    AccountsSkills setAccountsId(int accountsId);

    /**
     * Sets the skilltreeSkillsId of this AccountsSkills. The skilltreeSkillsId
     * field corresponds to the database column
     * kalaazu.kalaazu.accounts_skills.skilltree_skills_id.
     *
     * @param skilltreeSkillsId to set of this AccountsSkills
     *
     * @return this AccountsSkills instance
     */
    AccountsSkills setSkilltreeSkillsId(byte skilltreeSkillsId);

    /**
     * Sets the skilltreeLevelsId of this AccountsSkills. The skilltreeLevelsId
     * field corresponds to the database column
     * kalaazu.kalaazu.accounts_skills.skilltree_levels_id.
     *
     * @param skilltreeLevelsId to set of this AccountsSkills
     *
     * @return this AccountsSkills instance
     */
    AccountsSkills setSkilltreeLevelsId(short skilltreeLevelsId);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findAccountsId(Manager<Accounts> foreignManager);

    /**
     * Queries the specified manager for the referenced SkilltreeSkills. If no
     * such SkilltreeSkills exists, an {@code NullPointerException} will be
     * thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    SkilltreeSkills findSkilltreeSkillsId(Manager<SkilltreeSkills> foreignManager);

    /**
     * Queries the specified manager for the referenced SkilltreeLevels. If no
     * such SkilltreeLevels exists, an {@code NullPointerException} will be
     * thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    SkilltreeLevels findSkilltreeLevelsId(Manager<SkilltreeLevels> foreignManager);

    enum Identifier implements ColumnIdentifier<AccountsSkills> {

        ID("id"),
        ACCOUNTS_ID("accounts_id"),
        SKILLTREE_SKILLS_ID("skilltree_skills_id"),
        SKILLTREE_LEVELS_ID("skilltree_levels_id");

        private final String columnName;

        private final TableIdentifier<AccountsSkills> tableIdentifier;

        Identifier(String columnId) {
            this.columnId = columnId;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsId(),
                    getSchemaId(),
                    getTableId()
            );
        }

        @Override
        public String getDbmsId() {
            return "kalaazu";
        }

        @Override
        public String getSchemaId() {
            return "kalaazu";
        }

        @Override
        public String getTableId() {
            return "accounts_skills";
        }

        @Override
        public String getColumnId() {
            return this.columnId;
        }

        @Override
        public TableIdentifier<AccountsSkills> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}