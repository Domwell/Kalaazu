package com.kalaazu.persistence.database.entities.accounts_quests.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.AccountsQuests;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Quests;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.*;
import com.speedment.runtime.field.method.ReferenceSetter;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.integer.PrimitiveIntegerZeroOneToBooleanMapper;

import java.sql.Timestamp;

/**
 * The generated base for the {@link
 * AccountsQuests}-interface
 * representing entities of the {@code accounts_quests}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsQuests {

    /**
     * This Field corresponds to the {@link AccountsQuests} field that can be
     * obtained using the {@link AccountsQuests#id()} method.
     */
    IntField<AccountsQuests, Integer> ID = IntField.create(
            Identifier.ID,
            AccountsQuests::id,
            AccountsQuests::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsQuests} field that can be
     * obtained using the {@link AccountsQuests#questsId()} method.
     */
    ShortForeignKeyField<AccountsQuests, Short, Quests> QUESTS_ID = ShortForeignKeyField.create(
            Identifier.QUESTS_ID,
            AccountsQuests::questsId,
            AccountsQuests::questsId,
            Quests.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsQuests} field that can be
     * obtained using the {@link AccountsQuests#accountsId()} method.
     */
    IntForeignKeyField<AccountsQuests, Integer, Accounts> ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.ACCOUNTS_ID,
            AccountsQuests::accountsId,
            AccountsQuests::accountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsQuests} field that can be
     * obtained using the {@link AccountsQuests#isCompleted()} method.
     */
    BooleanField<AccountsQuests, Integer> IS_COMPLETED = BooleanField.create(
            Identifier.IS_COMPLETED,
            AccountsQuests::isCompleted,
            AccountsQuests::isCompleted,
            new PrimitiveIntegerZeroOneToBooleanMapper(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsQuests} field that can be
     * obtained using the {@link AccountsQuests#date()} method.
     */
    ComparableField<AccountsQuests, Timestamp, Timestamp> DATE = ComparableField.create(
            Identifier.DATE,
            AccountsQuests::date,
            (ReferenceSetter<AccountsQuests, Timestamp>) AccountsQuests::date,
            TypeMapper.identity(),
            false
    );

    /**
     * Returns the id of this AccountsQuests. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_quests.id.
     *
     * @return the id of this AccountsQuests
     */
    Integer id();

    /**
     * Returns the questsId of this AccountsQuests. The questsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_quests.quests_id.
     *
     * @return the questsId of this AccountsQuests
     */
    short questsId();

    /**
     * Returns the accountsId of this AccountsQuests. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_quests.accounts_id.
     *
     * @return the accountsId of this AccountsQuests
     */
    int accountsId();

    /**
     * Returns the isCompleted of this AccountsQuests. The isCompleted field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_quests.is_completed.
     *
     * @return the isCompleted of this AccountsQuests
     */
    boolean isCompleted();

    /**
     * Returns the date of this AccountsQuests. The date field corresponds to
     * the database column kalaazu.kalaazu.accounts_quests.date.
     *
     * @return the date of this AccountsQuests
     */
    Timestamp date();

    /**
     * Sets the id of this AccountsQuests. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_quests.id.
     *
     * @param id to set of this AccountsQuests
     *
     * @return this AccountsQuests instance
     */
    AccountsQuests id(Integer id);

    /**
     * Sets the questsId of this AccountsQuests. The questsId field corresponds
     * to the database column kalaazu.kalaazu.accounts_quests.quests_id.
     *
     * @param questsId to set of this AccountsQuests
     *
     * @return this AccountsQuests instance
     */
    AccountsQuests questsId(short questsId);

    /**
     * Sets the accountsId of this AccountsQuests. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_quests.accounts_id.
     *
     * @param accountsId to set of this AccountsQuests
     *
     * @return this AccountsQuests instance
     */
    AccountsQuests accountsId(int accountsId);

    /**
     * Sets the isCompleted of this AccountsQuests. The isCompleted field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_quests.is_completed.
     *
     * @param isCompleted to set of this AccountsQuests
     *
     * @return this AccountsQuests instance
     */
    AccountsQuests isCompleted(boolean isCompleted);

    /**
     * Sets the date of this AccountsQuests. The date field corresponds to the
     * database column kalaazu.kalaazu.accounts_quests.date.
     *
     * @param date to set of this AccountsQuests
     *
     * @return this AccountsQuests instance
     */
    AccountsQuests date(Timestamp date);

    /**
     * Queries the specified manager for the referenced Quests. If no such
     * Quests exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Quests findQuestsId(Manager<Quests> foreignManager);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findAccountsId(Manager<Accounts> foreignManager);

    enum Identifier implements ColumnIdentifier<AccountsQuests> {

        ID("id"),
        QUESTS_ID("quests_id"),
        ACCOUNTS_ID("accounts_id"),
        IS_COMPLETED("is_completed"),
        DATE("date");

        private final String columnName;

        private final TableIdentifier<AccountsQuests> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "accounts_quests";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<AccountsQuests> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}