package com.kalaazu.persistence.database.entities.skilltree_unlocks.generated;

import com.kalaazu.persistence.database.entities.SkilltreeUnlocks;
import com.kalaazu.persistence.database.entities.skilltree_unlocks.SkilltreeUnlocksImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.skilltree_unlocks.SkilltreeUnlocks}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSkilltreeUnlocksSqlAdapter implements SqlAdapter<SkilltreeUnlocks> {

    private final TableIdentifier<SkilltreeUnlocks> tableIdentifier;

    protected GeneratedSkilltreeUnlocksSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "skilltree_unlocks");
    }

    protected SkilltreeUnlocks apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getShort(1 + offset))
                .setUpgradeSkilltreeLevelsId(resultSet.getShort(2 + offset))
                .setRequiredSkilltreeLevelsId(resultSet.getShort(3 + offset))
                ;
    }

    protected SkilltreeUnlocksImpl createEntity() {
        return new SkilltreeUnlocksImpl();
    }

    @Override
    public TableIdentifier<SkilltreeUnlocks> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, SkilltreeUnlocks> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, SkilltreeUnlocks> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}