package com.kalaazu.persistence.database.entities.quests.generated;

import com.kalaazu.persistence.database.entities.Quests;
import com.kalaazu.persistence.database.entities.quests.QuestsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.getByte;
import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.getShort;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.quests.Quests} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedQuestsSqlAdapter implements SqlAdapter<Quests> {

    private final TableIdentifier<Quests> tableIdentifier;

    protected GeneratedQuestsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "quests");
    }

    protected Quests apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getShort(1 + offset))
                .setLevelsId(resultSet.getByte(2 + offset))
                .setQuestsId(getShort(resultSet, 3 + offset))
                .setFactionsId(getByte(resultSet, 4 + offset))
                .setName(resultSet.getString(5 + offset))
                ;
    }

    protected QuestsImpl createEntity() {
        return new QuestsImpl();
    }

    @Override
    public TableIdentifier<Quests> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, Quests> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, Quests> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}