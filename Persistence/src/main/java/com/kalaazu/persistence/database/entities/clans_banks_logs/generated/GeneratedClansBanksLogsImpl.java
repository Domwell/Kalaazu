package com.kalaazu.persistence.database.entities.clans_banks_logs.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.ClansBanks;
import com.kalaazu.persistence.database.entities.ClansBanksLogs;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.mappers.BankLogType;
import com.kalaazu.persistence.database.mappers.Currency;
import com.speedment.common.annotation.GeneratedCode;
import lombok.Data;

import java.sql.Timestamp;

/**
 * The generated base implementation of the {@link
 * ClansBanksLogs}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
@Data
public abstract class GeneratedClansBanksLogsImpl implements ClansBanksLogs {

    private Integer id;

    private int clansBanksId;

    private int fromAccountsId;

    private int toAccountsId;

    private Timestamp date;

    private BankLogType type;

    private int amount;

    private Currency currency;

    protected GeneratedClansBanksLogsImpl() {

    }

    @Override
    public ClansBanks findClansBanksId(Manager<ClansBanks> foreignManager) {
        return foreignManager.stream()
                             .filter(ClansBanks.ID.equal(clansBanksId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Accounts findFromAccountsId(Manager<Accounts> foreignManager) {
        return foreignManager.stream()
                             .filter(Accounts.ID.equal(fromAccountsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Accounts findToAccountsId(Manager<Accounts> foreignManager) {
        return foreignManager.stream()
                             .filter(Accounts.ID.equal(toAccountsId()))
                             .findAny()
                             .orElse(null);
    }
}