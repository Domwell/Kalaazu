package com.kalaazu.persistence.database.entities.accounts_hangars.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.AccountsHangars;
import com.kalaazu.persistence.database.entities.AccountsShips;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.kalaazu.persistence.database.entities.accounts_hangars.AccountsHangars}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsHangarsImpl implements AccountsHangars {

    private int id;

    private int accountsId;

    private Integer accountsShipsId;

    private Integer accountsConfigurationsId;

    private String name;

    private Byte priority;

    private Integer date;

    protected GeneratedAccountsHangarsImpl() {
    }

    @Override
    public Integer getId() {
        return id;
    }

    @Override
    public int getAccountsId() {
        return accountsId;
    }

    @Override
    public OptionalInt getAccountsShipsId() {
        return OptionalUtil.ofNullable(accountsShipsId);
    }

    @Override
    public OptionalInt getAccountsConfigurationsId() {
        return OptionalUtil.ofNullable(accountsConfigurationsId);
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public Optional<Byte> getPriority() {
        return Optional.ofNullable(priority);
    }

    @Override
    public Integer getDate() {
        return date;
    }

    @Override
    public AccountsHangars setId(int id) {
        this.id = id;
        return this;
    }

    @Override
    public AccountsHangars setAccountsId(int accountsId) {
        this.accountsId = accountsId;
        return this;
    }

    @Override
    public AccountsHangars setAccountsShipsId(int accountsShipsId) {
        this.accountsShipsId = accountsShipsId;
        return this;
    }

    @Override
    public AccountsHangars setAccountsConfigurationsId(int accountsConfigurationsId) {
        this.accountsConfigurationsId = accountsConfigurationsId;
        return this;
    }

    @Override
    public AccountsHangars setName(String name) {
        this.name = name;
        return this;
    }

    @Override
    public AccountsHangars setPriority(byte priority) {
        this.priority = priority;
        return this;
    }

    @Override
    public AccountsHangars setDate(Integer date) {
        this.date = date;
        return this;
    }

    @Override
    public Accounts findAccountsId(Manager<Accounts> foreignManager) {
        return foreignManager.stream()
                             .filter(Accounts.ID.equal(getAccountsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Optional<AccountsShips> findAccountsShipsId(Manager<AccountsShips> foreignManager) {
        if (getAccountsShipsId().isPresent()) {
            return foreignManager.stream()
                                 .filter(AccountsShips.ID.equal(getAccountsShipsId().get()))
                                 .findAny();
        } else {
            return Optional.empty();
        }
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("accountsId = " + Objects.toString(getAccountsId()));
        sj.add("accountsShipsId = " + Objects.toString(OptionalUtil.unwrap(getAccountsShipsId())));
        sj.add("accountsConfigurationsId = " + Objects.toString(OptionalUtil.unwrap(getAccountsConfigurationsId())));
        sj.add("name = " + Objects.toString(getName()));
        sj.add("priority = " + Objects.toString(OptionalUtil.unwrap(getPriority())));
        sj.add("date = " + Objects.toString(getDate()));
        return "AccountsHangarsImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof AccountsHangars)) {
            return false;
        }
        final AccountsHangars thatAccountsHangars = (AccountsHangars) that;
        if (this.getId() != thatAccountsHangars.getId()) {
            return false;
        }
        if (this.getAccountsId() != thatAccountsHangars.getAccountsId()) {
            return false;
        }
        if (!Objects.equals(this.getAccountsShipsId(), thatAccountsHangars.getAccountsShipsId())) {
            return false;
        }
        if (!Objects.equals(this.getAccountsConfigurationsId(), thatAccountsHangars.getAccountsConfigurationsId())) {
            return false;
        }
        if (!Objects.equals(this.getName(), thatAccountsHangars.getName())) {
            return false;
        }
        if (!Objects.equals(this.getPriority(), thatAccountsHangars.getPriority())) {
            return false;
        }
        if (!Objects.equals(this.getDate(), thatAccountsHangars.getDate())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getAccountsId());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getAccountsShipsId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getAccountsConfigurationsId()));
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getPriority()));
        hash = 31 * hash + Objects.hashCode(getDate());
        return hash;
    }
}