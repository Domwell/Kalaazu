/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.entities.tables;


import com.kalaazu.persistence.database.entities.Indexes;
import com.kalaazu.persistence.database.entities.Kalaazu;
import com.kalaazu.persistence.database.entities.Keys;
import com.kalaazu.persistence.database.entities.tables.records.AccountsConfigurationsAccountsItemsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Items of the configuration.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsConfigurationsAccountsItems extends TableImpl<AccountsConfigurationsAccountsItemsRecord> {

    private static final long serialVersionUID = 68470854;

    /**
     * The reference instance of <code>kalaazu.accounts_configurations_accounts_items</code>
     */
    public static final AccountsConfigurationsAccountsItems ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS = new AccountsConfigurationsAccountsItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsConfigurationsAccountsItemsRecord> getRecordType() {
        return AccountsConfigurationsAccountsItemsRecord.class;
    }

    /**
     * The column <code>kalaazu.accounts_configurations_accounts_items.id</code>. Primary Key.
     */
    public final TableField<AccountsConfigurationsAccountsItemsRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary Key.");

    /**
     * The column <code>kalaazu.accounts_configurations_accounts_items.accounts_configurations_id</code>.
     */
    public final TableField<AccountsConfigurationsAccountsItemsRecord, Integer> ACCOUNTS_CONFIGURATIONS_ID = createField(DSL.name("accounts_configurations_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kalaazu.accounts_configurations_accounts_items.accounts_items_id</code>.
     */
    public final TableField<AccountsConfigurationsAccountsItemsRecord, Integer> ACCOUNTS_ITEMS_ID = createField(DSL.name("accounts_items_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kalaazu.accounts_configurations_accounts_items.accounts_drones_id</code>.
     */
    public final TableField<AccountsConfigurationsAccountsItemsRecord, Integer> ACCOUNTS_DRONES_ID = createField(DSL.name("accounts_drones_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>kalaazu.accounts_configurations_accounts_items.accounts_pets_id</code>.
     */
    public final TableField<AccountsConfigurationsAccountsItemsRecord, Integer> ACCOUNTS_PETS_ID = createField(DSL.name("accounts_pets_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>kalaazu.accounts_configurations_accounts_items</code> table reference
     */
    public AccountsConfigurationsAccountsItems() {
        this(DSL.name("accounts_configurations_accounts_items"), null);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_configurations_accounts_items</code> table reference
     */
    public AccountsConfigurationsAccountsItems(String alias) {
        this(DSL.name(alias), ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_configurations_accounts_items</code> table reference
     */
    public AccountsConfigurationsAccountsItems(Name alias) {
        this(alias, ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS);
    }

    private AccountsConfigurationsAccountsItems(Name alias, Table<AccountsConfigurationsAccountsItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountsConfigurationsAccountsItems(Name alias, Table<AccountsConfigurationsAccountsItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Items of the configuration."));
    }

    public <O extends Record> AccountsConfigurationsAccountsItems(Table<O> child, ForeignKey<O, AccountsConfigurationsAccountsItemsRecord> key) {
        super(child, key, ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS);
    }

    @Override
    public Schema getSchema() {
        return Kalaazu.KALAAZU;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_CONFIGURATIONS, Indexes.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_DRONES, Indexes.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_ITEMS, Indexes.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_PETS, Indexes.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_PRIMARY);
    }

    @Override
    public Identity<AccountsConfigurationsAccountsItemsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS;
    }

    @Override
    public UniqueKey<AccountsConfigurationsAccountsItemsRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_PRIMARY;
    }

    @Override
    public List<UniqueKey<AccountsConfigurationsAccountsItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsConfigurationsAccountsItemsRecord>>asList(Keys.KEY_ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_PRIMARY);
    }

    @Override
    public List<ForeignKey<AccountsConfigurationsAccountsItemsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AccountsConfigurationsAccountsItemsRecord, ?>>asList(Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_CONFIGURATIONS, Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_ITEMS, Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_DRONES, Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_PETS);
    }

    public AccountsConfigurations accountsConfigurations() {
        return new AccountsConfigurations(this, Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_CONFIGURATIONS);
    }

    public AccountsItems accountsItems() {
        return new AccountsItems(this, Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_ITEMS);
    }

    public AccountsDrones accountsDrones() {
        return new AccountsDrones(this, Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_DRONES);
    }

    public AccountsPets accountsPets() {
        return new AccountsPets(this, Keys.ACCOUNTS_CONFIGURATIONS_ACCOUNTS_ITEMS_ACCOUNTS_PETS);
    }

    @Override
    public AccountsConfigurationsAccountsItems as(String alias) {
        return new AccountsConfigurationsAccountsItems(DSL.name(alias), this);
    }

    @Override
    public AccountsConfigurationsAccountsItems as(Name alias) {
        return new AccountsConfigurationsAccountsItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsConfigurationsAccountsItems rename(String name) {
        return new AccountsConfigurationsAccountsItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsConfigurationsAccountsItems rename(Name name) {
        return new AccountsConfigurationsAccountsItems(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
