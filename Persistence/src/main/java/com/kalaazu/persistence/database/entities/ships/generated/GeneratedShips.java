package com.kalaazu.persistence.database.entities.ships.generated;

import com.kalaazu.persistence.database.entities.Items;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Ships;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ByteField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.field.ShortForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * Ships}-interface
 * representing entities of the {@code ships}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedShips {

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#id()} method.
     */
    ByteField<Ships, Byte> ID = ByteField.create(
            Identifier.ID,
            Ships::id,
            Ships::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#itemsId()} method.
     */
    ShortForeignKeyField<Ships, Short, Items> ITEMS_ID = ShortForeignKeyField.create(
            Identifier.ITEMS_ID,
            Ships::itemsId,
            Ships::itemsId,
            Items.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#health()} method.
     */
    IntField<Ships, Integer> HEALTH = IntField.create(
            Identifier.HEALTH,
            Ships::health,
            Ships::health,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#speed()} method.
     */
    ShortField<Ships, Short> SPEED = ShortField.create(
            Identifier.SPEED,
            Ships::speed,
            Ships::speed,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#cargo()} method.
     */
    ShortField<Ships, Short> CARGO = ShortField.create(
            Identifier.CARGO,
            Ships::cargo,
            Ships::cargo,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#batteries()} method.
     */
    ShortField<Ships, Short> BATTERIES = ShortField.create(
            Identifier.BATTERIES,
            Ships::batteries,
            Ships::batteries,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#rockets()} method.
     */
    ShortField<Ships, Short> ROCKETS = ShortField.create(
            Identifier.ROCKETS,
            Ships::rockets,
            Ships::rockets,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#lasers()} method.
     */
    ByteField<Ships, Byte> LASERS = ByteField.create(
            Identifier.LASERS,
            Ships::lasers,
            Ships::lasers,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#hellstorms()} method.
     */
    ByteField<Ships, Byte> HELLSTORMS = ByteField.create(
            Identifier.HELLSTORMS,
            Ships::hellstorms,
            Ships::hellstorms,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#generators()} method.
     */
    ByteField<Ships, Byte> GENERATORS = ByteField.create(
            Identifier.GENERATORS,
            Ships::generators,
            Ships::generators,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#extras()} method.
     */
    ByteField<Ships, Byte> EXTRAS = ByteField.create(
            Identifier.EXTRAS,
            Ships::extras,
            Ships::extras,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Ships} field that can be obtained
     * using the {@link Ships#gfx()} method.
     */
    ByteField<Ships, Byte> GFX = ByteField.create(
            Identifier.GFX,
            Ships::gfx,
            Ships::gfx,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this Ships. The id field corresponds to the database
     * column kalaazu.kalaazu.ships.id.
     *
     * @return the id of this Ships
     */
    Byte id();

    /**
     * Returns the itemsId of this Ships. The itemsId field corresponds to the
     * database column kalaazu.kalaazu.ships.items_id.
     *
     * @return the itemsId of this Ships
     */
    short itemsId();

    /**
     * Returns the health of this Ships. The health field corresponds to the
     * database column kalaazu.kalaazu.ships.health.
     *
     * @return the health of this Ships
     */
    int health();

    /**
     * Returns the speed of this Ships. The speed field corresponds to the
     * database column kalaazu.kalaazu.ships.speed.
     *
     * @return the speed of this Ships
     */
    short speed();

    /**
     * Returns the cargo of this Ships. The cargo field corresponds to the
     * database column kalaazu.kalaazu.ships.cargo.
     *
     * @return the cargo of this Ships
     */
    short cargo();

    /**
     * Returns the batteries of this Ships. The batteries field corresponds to
     * the database column kalaazu.kalaazu.ships.batteries.
     *
     * @return the batteries of this Ships
     */
    short batteries();

    /**
     * Returns the rockets of this Ships. The rockets field corresponds to the
     * database column kalaazu.kalaazu.ships.rockets.
     *
     * @return the rockets of this Ships
     */
    short rockets();

    /**
     * Returns the lasers of this Ships. The lasers field corresponds to the
     * database column kalaazu.kalaazu.ships.lasers.
     *
     * @return the lasers of this Ships
     */
    byte lasers();

    /**
     * Returns the hellstorms of this Ships. The hellstorms field corresponds to
     * the database column kalaazu.kalaazu.ships.hellstorms.
     *
     * @return the hellstorms of this Ships
     */
    byte hellstorms();

    /**
     * Returns the generators of this Ships. The generators field corresponds to
     * the database column kalaazu.kalaazu.ships.generators.
     *
     * @return the generators of this Ships
     */
    byte generators();

    /**
     * Returns the extras of this Ships. The extras field corresponds to the
     * database column kalaazu.kalaazu.ships.extras.
     *
     * @return the extras of this Ships
     */
    byte extras();

    /**
     * Returns the gfx of this Ships. The gfx field corresponds to the database
     * column kalaazu.kalaazu.ships.gfx.
     *
     * @return the gfx of this Ships
     */
    byte gfx();

    /**
     * Sets the id of this Ships. The id field corresponds to the database
     * column kalaazu.kalaazu.ships.id.
     *
     * @param id to set of this Ships
     *
     * @return this Ships instance
     */
    Ships id(Byte id);

    /**
     * Sets the itemsId of this Ships. The itemsId field corresponds to the
     * database column kalaazu.kalaazu.ships.items_id.
     *
     * @param itemsId to set of this Ships
     *
     * @return this Ships instance
     */
    Ships itemsId(short itemsId);

    /**
     * Sets the health of this Ships. The health field corresponds to the
     * database column kalaazu.kalaazu.ships.health.
     *
     * @param health to set of this Ships
     *
     * @return this Ships instance
     */
    Ships health(int health);

    /**
     * Sets the speed of this Ships. The speed field corresponds to the database
     * column kalaazu.kalaazu.ships.speed.
     *
     * @param speed to set of this Ships
     *
     * @return this Ships instance
     */
    Ships speed(short speed);

    /**
     * Sets the cargo of this Ships. The cargo field corresponds to the database
     * column kalaazu.kalaazu.ships.cargo.
     *
     * @param cargo to set of this Ships
     *
     * @return this Ships instance
     */
    Ships cargo(short cargo);

    /**
     * Sets the batteries of this Ships. The batteries field corresponds to the
     * database column kalaazu.kalaazu.ships.batteries.
     *
     * @param batteries to set of this Ships
     *
     * @return this Ships instance
     */
    Ships batteries(short batteries);

    /**
     * Sets the rockets of this Ships. The rockets field corresponds to the
     * database column kalaazu.kalaazu.ships.rockets.
     *
     * @param rockets to set of this Ships
     *
     * @return this Ships instance
     */
    Ships rockets(short rockets);

    /**
     * Sets the lasers of this Ships. The lasers field corresponds to the
     * database column kalaazu.kalaazu.ships.lasers.
     *
     * @param lasers to set of this Ships
     *
     * @return this Ships instance
     */
    Ships lasers(byte lasers);

    /**
     * Sets the hellstorms of this Ships. The hellstorms field corresponds to
     * the database column kalaazu.kalaazu.ships.hellstorms.
     *
     * @param hellstorms to set of this Ships
     *
     * @return this Ships instance
     */
    Ships hellstorms(byte hellstorms);

    /**
     * Sets the generators of this Ships. The generators field corresponds to
     * the database column kalaazu.kalaazu.ships.generators.
     *
     * @param generators to set of this Ships
     *
     * @return this Ships instance
     */
    Ships generators(byte generators);

    /**
     * Sets the extras of this Ships. The extras field corresponds to the
     * database column kalaazu.kalaazu.ships.extras.
     *
     * @param extras to set of this Ships
     *
     * @return this Ships instance
     */
    Ships extras(byte extras);

    /**
     * Sets the gfx of this Ships. The gfx field corresponds to the database
     * column kalaazu.kalaazu.ships.gfx.
     *
     * @param gfx to set of this Ships
     *
     * @return this Ships instance
     */
    Ships gfx(byte gfx);

    /**
     * Queries the specified manager for the referenced Items. If no such Items
     * exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Items findItemsId(Manager<Items> foreignManager);

    enum Identifier implements ColumnIdentifier<Ships> {

        ID("id"),
        ITEMS_ID("items_id"),
        HEALTH("health"),
        SPEED("speed"),
        CARGO("cargo"),
        BATTERIES("batteries"),
        ROCKETS("rockets"),
        LASERS("lasers"),
        HELLSTORMS("hellstorms"),
        GENERATORS("generators"),
        EXTRAS("extras"),
        GFX("gfx");

        private final String columnName;

        private final TableIdentifier<Ships> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "ships";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<Ships> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}