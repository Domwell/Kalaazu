package com.kalaazu.persistence.database.entities.skylab_modules.generated;

import com.kalaazu.persistence.database.entities.SkylabModules;
import com.kalaazu.persistence.database.entities.skylab_modules.SkylabModulesImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.skylab_modules.SkylabModules}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSkylabModulesSqlAdapter implements SqlAdapter<SkylabModules> {

    private final TableIdentifier<SkylabModules> tableIdentifier;

    protected GeneratedSkylabModulesSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "skylab_modules");
    }

    protected SkylabModules apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getByte(1 + offset))
                .setName(resultSet.getString(2 + offset))
                .setProductionFactor(resultSet.getByte(3 + offset))
                .setProductionBase(resultSet.getShort(4 + offset))
                .setStorageFactor(resultSet.getShort(5 + offset))
                .setStorageBase(resultSet.getShort(6 + offset))
                .setUpgradeFactor(resultSet.getByte(7 + offset))
                .setUpgradeBase(resultSet.getShort(8 + offset))
                .setEnergyFactor(resultSet.getByte(9 + offset))
                .setEnergyBase(resultSet.getByte(10 + offset))
                ;
    }

    protected SkylabModulesImpl createEntity() {
        return new SkylabModulesImpl();
    }

    @Override
    public TableIdentifier<SkylabModules> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, SkylabModules> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, SkylabModules> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}