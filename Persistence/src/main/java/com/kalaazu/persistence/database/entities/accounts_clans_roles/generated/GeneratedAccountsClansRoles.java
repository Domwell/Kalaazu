package com.kalaazu.persistence.database.entities.accounts_clans_roles.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.AccountsClansRoles;
import com.kalaazu.persistence.database.entities.ClansRoles;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * AccountsClansRoles}-interface
 * representing entities of the {@code accounts_clans_roles}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsClansRoles {

    /**
     * This Field corresponds to the {@link AccountsClansRoles} field that can
     * be obtained using the {@link AccountsClansRoles#id()} method.
     */
    IntField<AccountsClansRoles, Integer> ID = IntField.create(
            Identifier.ID,
            AccountsClansRoles::id,
            AccountsClansRoles::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsClansRoles} field that can
     * be obtained using the {@link AccountsClansRoles#accountsId()} method.
     */
    IntForeignKeyField<AccountsClansRoles, Integer, Accounts> ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.ACCOUNTS_ID,
            AccountsClansRoles::accountsId,
            AccountsClansRoles::accountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsClansRoles} field that can
     * be obtained using the {@link AccountsClansRoles#clansRolesId()}
     * method.
     */
    IntForeignKeyField<AccountsClansRoles, Integer, ClansRoles> CLANS_ROLES_ID = IntForeignKeyField.create(
            Identifier.CLANS_ROLES_ID,
            AccountsClansRoles::clansRolesId,
            AccountsClansRoles::clansRolesId,
            ClansRoles.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this AccountsClansRoles. The id field corresponds to
     * the database column kalaazu.kalaazu.accounts_clans_roles.id.
     *
     * @return the id of this AccountsClansRoles
     */
    Integer id();

    /**
     * Returns the accountsId of this AccountsClansRoles. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_clans_roles.accounts_id.
     *
     * @return the accountsId of this AccountsClansRoles
     */
    int accountsId();

    /**
     * Returns the clansRolesId of this AccountsClansRoles. The clansRolesId
     * field corresponds to the database column
     * kalaazu.kalaazu.accounts_clans_roles.clans_roles_id.
     *
     * @return the clansRolesId of this AccountsClansRoles
     */
    int clansRolesId();

    /**
     * s the id of this AccountsClansRoles. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_clans_roles.id.
     *
     * @param id to set of this AccountsClansRoles
     *
     * @return this AccountsClansRoles instance
     */
    AccountsClansRoles id(Integer id);

    /**
     * s the accountsId of this AccountsClansRoles. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_clans_roles.accounts_id.
     *
     * @param accountsId to set of this AccountsClansRoles
     *
     * @return this AccountsClansRoles instance
     */
    AccountsClansRoles accountsId(int accountsId);

    /**
     * s the clansRolesId of this AccountsClansRoles. The clansRolesId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_clans_roles.clans_roles_id.
     *
     * @param clansRolesId to set of this AccountsClansRoles
     *
     * @return this AccountsClansRoles instance
     */
    AccountsClansRoles clansRolesId(int clansRolesId);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findAccountsId(Manager<Accounts> foreignManager);

    /**
     * Queries the specified manager for the referenced ClansRoles. If no such
     * ClansRoles exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    ClansRoles findClansRolesId(Manager<ClansRoles> foreignManager);

    enum Identifier implements ColumnIdentifier<AccountsClansRoles> {

        ID("id"),
        ACCOUNTS_ID("accounts_id"),
        CLANS_ROLES_ID("clans_roles_id");

        private final String columnName;

        private final TableIdentifier<AccountsClansRoles> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "accounts_clans_roles";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<AccountsClansRoles> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}