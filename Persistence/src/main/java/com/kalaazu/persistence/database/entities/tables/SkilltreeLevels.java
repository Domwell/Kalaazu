/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.entities.tables;


import com.kalaazu.persistence.database.entities.Indexes;
import com.kalaazu.persistence.database.entities.Kalaazu;
import com.kalaazu.persistence.database.entities.Keys;
import com.kalaazu.persistence.database.entities.tables.records.SkilltreeLevelsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Levels a skill can reach.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SkilltreeLevels extends TableImpl<SkilltreeLevelsRecord> {

    private static final long serialVersionUID = 1492087645;

    /**
     * The reference instance of <code>kalaazu.skilltree_levels</code>
     */
    public static final SkilltreeLevels SKILLTREE_LEVELS = new SkilltreeLevels();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SkilltreeLevelsRecord> getRecordType() {
        return SkilltreeLevelsRecord.class;
    }

    /**
     * The column <code>kalaazu.skilltree_levels.id</code>. Primary Key.
     */
    public final TableField<SkilltreeLevelsRecord, Short> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).identity(true), this, "Primary Key.");

    /**
     * The column <code>kalaazu.skilltree_levels.skilltree_skills_id</code>. The skill.
     */
    public final TableField<SkilltreeLevelsRecord, Byte> SKILLTREE_SKILLS_ID = createField(DSL.name("skilltree_skills_id"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "The skill.");

    /**
     * The column <code>kalaazu.skilltree_levels.levels_id</code>. Level to upgrade the skill.
     */
    public final TableField<SkilltreeLevelsRecord, Byte> LEVELS_ID = createField(DSL.name("levels_id"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "Level to upgrade the skill.");

    /**
     * The column <code>kalaazu.skilltree_levels.credits</code>. Credits needed to upgrade this skill.
     */
    public final TableField<SkilltreeLevelsRecord, Integer> CREDITS = createField(DSL.name("credits"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("10000", org.jooq.impl.SQLDataType.INTEGER)), this, "Credits needed to upgrade this skill.");

    /**
     * The column <code>kalaazu.skilltree_levels.seprom</code>. Seprom needed to upgrade this skill.
     */
    public final TableField<SkilltreeLevelsRecord, Short> SEPROM = createField(DSL.name("seprom"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "Seprom needed to upgrade this skill.");

    /**
     * The column <code>kalaazu.skilltree_levels.points</code>. Research points needed to upgrade this skill.
     */
    public final TableField<SkilltreeLevelsRecord, Byte> POINTS = createField(DSL.name("points"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.TINYINT)), this, "Research points needed to upgrade this skill.");

    /**
     * Create a <code>kalaazu.skilltree_levels</code> table reference
     */
    public SkilltreeLevels() {
        this(DSL.name("skilltree_levels"), null);
    }

    /**
     * Create an aliased <code>kalaazu.skilltree_levels</code> table reference
     */
    public SkilltreeLevels(String alias) {
        this(DSL.name(alias), SKILLTREE_LEVELS);
    }

    /**
     * Create an aliased <code>kalaazu.skilltree_levels</code> table reference
     */
    public SkilltreeLevels(Name alias) {
        this(alias, SKILLTREE_LEVELS);
    }

    private SkilltreeLevels(Name alias, Table<SkilltreeLevelsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SkilltreeLevels(Name alias, Table<SkilltreeLevelsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Levels a skill can reach."));
    }

    public <O extends Record> SkilltreeLevels(Table<O> child, ForeignKey<O, SkilltreeLevelsRecord> key) {
        super(child, key, SKILLTREE_LEVELS);
    }

    @Override
    public Schema getSchema() {
        return Kalaazu.KALAAZU;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SKILLTREE_LEVELS_PRIMARY, Indexes.SKILLTREE_LEVELS_SKILLTREE_LEVELS_LEVELS, Indexes.SKILLTREE_LEVELS_SKILLTREE_LEVELS_SKILLS);
    }

    @Override
    public Identity<SkilltreeLevelsRecord, Short> getIdentity() {
        return Keys.IDENTITY_SKILLTREE_LEVELS;
    }

    @Override
    public UniqueKey<SkilltreeLevelsRecord> getPrimaryKey() {
        return Keys.KEY_SKILLTREE_LEVELS_PRIMARY;
    }

    @Override
    public List<UniqueKey<SkilltreeLevelsRecord>> getKeys() {
        return Arrays.<UniqueKey<SkilltreeLevelsRecord>>asList(Keys.KEY_SKILLTREE_LEVELS_PRIMARY);
    }

    @Override
    public List<ForeignKey<SkilltreeLevelsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SkilltreeLevelsRecord, ?>>asList(Keys.SKILLTREE_LEVELS_SKILLS, Keys.SKILLTREE_LEVELS_LEVELS);
    }

    public SkilltreeSkills skilltreeSkills() {
        return new SkilltreeSkills(this, Keys.SKILLTREE_LEVELS_SKILLS);
    }

    public Levels levels() {
        return new Levels(this, Keys.SKILLTREE_LEVELS_LEVELS);
    }

    @Override
    public SkilltreeLevels as(String alias) {
        return new SkilltreeLevels(DSL.name(alias), this);
    }

    @Override
    public SkilltreeLevels as(Name alias) {
        return new SkilltreeLevels(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SkilltreeLevels rename(String name) {
        return new SkilltreeLevels(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SkilltreeLevels rename(Name name) {
        return new SkilltreeLevels(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Short, Byte, Byte, Integer, Short, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
