package com.kalaazu.persistence.database.entities.key_value.generated;

import com.kalaazu.persistence.database.entities.KeyValue;
import com.kalaazu.persistence.database.entities.key_value.KeyValueImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * KeyValue}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedKeyValueSqlAdapter implements SqlAdapter<KeyValue> {

    private final TableIdentifier<KeyValue> tableIdentifier;

    protected GeneratedKeyValueSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "key_value");
    }

    protected KeyValue apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setKey(resultSet.getString(1 + offset))
                .setValue(resultSet.getString(2 + offset))
                ;
    }

    protected KeyValueImpl createEntity() {
        return new KeyValueImpl();
    }

    @Override
    public TableIdentifier<KeyValue> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, KeyValue> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, KeyValue> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}