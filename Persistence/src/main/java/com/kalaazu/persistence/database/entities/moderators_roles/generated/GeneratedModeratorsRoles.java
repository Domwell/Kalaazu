package com.kalaazu.persistence.database.entities.moderators_roles.generated;

import com.kalaazu.persistence.database.entities.ModeratorsRoles;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ByteField;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.Optional;

/**
 * The generated base for the {@link
 * ModeratorsRoles}-interface
 * representing entities of the {@code moderators_roles}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedModeratorsRoles {

    /**
     * This Field corresponds to the {@link ModeratorsRoles} field that can be
     * obtained using the {@link ModeratorsRoles#id()} method.
     */
    ByteField<ModeratorsRoles, Byte> ID = ByteField.create(
            Identifier.ID,
            ModeratorsRoles::id,
            ModeratorsRoles::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link ModeratorsRoles} field that can be
     * obtained using the {@link ModeratorsRoles#name()} method.
     */
    StringField<ModeratorsRoles, String> NAME = StringField.create(
            Identifier.NAME,
            ModeratorsRoles::name,
            ModeratorsRoles::name,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link ModeratorsRoles} field that can be
     * obtained using the {@link ModeratorsRoles#moderatorsRolesId()} method.
     */
    ComparableField<ModeratorsRoles, Byte, Byte> MODERATORS_ROLES_ID = ComparableField.create(
            Identifier.MODERATORS_ROLES_ID,
            o -> OptionalUtil.unwrap(o.moderatorsRolesId()),
            ModeratorsRoles::moderatorsRolesId,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link ModeratorsRoles} field that can be
     * obtained using the {@link ModeratorsRoles#priority()} method.
     */
    ByteField<ModeratorsRoles, Byte> PRIORITY = ByteField.create(
            Identifier.PRIORITY,
            ModeratorsRoles::priority,
            ModeratorsRoles::priority,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this ModeratorsRoles. The id field corresponds to the
     * database column kalaazu.kalaazu.moderators_roles.id.
     *
     * @return the id of this ModeratorsRoles
     */
    Byte id();

    /**
     * Returns the name of this ModeratorsRoles. The name field corresponds to
     * the database column kalaazu.kalaazu.moderators_roles.name.
     *
     * @return the name of this ModeratorsRoles
     */
    String name();

    /**
     * Returns the moderatorsRolesId of this ModeratorsRoles. The
     * moderatorsRolesId field corresponds to the database column
     * kalaazu.kalaazu.moderators_roles.moderators_roles_id.
     *
     * @return the moderatorsRolesId of this ModeratorsRoles
     */
    Optional<Byte> moderatorsRolesId();

    /**
     * Returns the priority of this ModeratorsRoles. The priority field
     * corresponds to the database column
     * kalaazu.kalaazu.moderators_roles.priority.
     *
     * @return the priority of this ModeratorsRoles
     */
    byte priority();

    /**
     * Sets the id of this ModeratorsRoles. The id field corresponds to the
     * database column kalaazu.kalaazu.moderators_roles.id.
     *
     * @param id to set of this ModeratorsRoles
     *
     * @return this ModeratorsRoles instance
     */
    ModeratorsRoles id(Byte id);

    /**
     * Sets the name of this ModeratorsRoles. The name field corresponds to the
     * database column kalaazu.kalaazu.moderators_roles.name.
     *
     * @param name to set of this ModeratorsRoles
     *
     * @return this ModeratorsRoles instance
     */
    ModeratorsRoles name(String name);

    /**
     * Sets the moderatorsRolesId of this ModeratorsRoles. The moderatorsRolesId
     * field corresponds to the database column
     * kalaazu.kalaazu.moderators_roles.moderators_roles_id.
     *
     * @param moderatorsRolesId to set of this ModeratorsRoles
     *
     * @return this ModeratorsRoles instance
     */
    ModeratorsRoles moderatorsRolesId(Byte moderatorsRolesId);

    /**
     * Sets the priority of this ModeratorsRoles. The priority field corresponds
     * to the database column kalaazu.kalaazu.moderators_roles.priority.
     *
     * @param priority to set of this ModeratorsRoles
     *
     * @return this ModeratorsRoles instance
     */
    ModeratorsRoles priority(byte priority);

    enum Identifier implements ColumnIdentifier<ModeratorsRoles> {

        ID("id"),
        NAME("name"),
        MODERATORS_ROLES_ID("moderators_roles_id"),
        PRIORITY("priority");

        private final String columnName;

        private final TableIdentifier<ModeratorsRoles> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "moderators_roles";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<ModeratorsRoles> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}