package com.kalaazu.persistence.database.entities.accounts_skylabs.generated;

import com.kalaazu.persistence.database.entities.*;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import lombok.Data;

import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * AccountsSkylabs}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
@Data
public abstract class GeneratedAccountsSkylabsImpl implements AccountsSkylabs {

    private Integer id;

    private int accountsId;

    private byte skylabModulesId;

    private byte levelsId;

    private int space;

    private Timestamp upgrade;

    protected GeneratedAccountsSkylabsImpl() {

    }

    @Override
    public Optional<Timestamp> upgrade() {
        return Optional.ofNullable(upgrade);
    }

    @Override
    public Accounts findAccountsId(Manager<Accounts> foreignManager) {
        return foreignManager.stream()
                             .filter(Accounts.ID.equal(accountsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public SkylabModules findSkylabModulesId(Manager<SkylabModules> foreignManager) {
        return foreignManager.stream()
                             .filter(SkylabModules.ID.equal(skylabModulesId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Levels findLevelsId(Manager<Levels> foreignManager) {
        return foreignManager.stream()
                             .filter(Levels.ID.equal(levelsId()))
                             .findAny()
                             .orElse(null);
    }
}