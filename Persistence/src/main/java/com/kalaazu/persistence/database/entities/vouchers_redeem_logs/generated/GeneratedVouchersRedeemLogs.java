package com.kalaazu.persistence.database.entities.vouchers_redeem_logs.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Vouchers;
import com.kalaazu.persistence.database.entities.VouchersRedeemLogs;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.ShortForeignKeyField;
import com.speedment.runtime.field.method.ReferenceSetter;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Timestamp;

/**
 * The generated base for the {@link
 * VouchersRedeemLogs}-interface
 * representing entities of the {@code vouchers_redeem_logs}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedVouchersRedeemLogs {

    /**
     * This Field corresponds to the {@link VouchersRedeemLogs} field that can
     * be obtained using the {@link VouchersRedeemLogs#id()} method.
     */
    IntField<VouchersRedeemLogs, Integer> ID = IntField.create(
            Identifier.ID,
            VouchersRedeemLogs::id,
            VouchersRedeemLogs::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link VouchersRedeemLogs} field that can
     * be obtained using the {@link VouchersRedeemLogs#vouchersId()} method.
     */
    ShortForeignKeyField<VouchersRedeemLogs, Short, Vouchers> VOUCHERS_ID = ShortForeignKeyField.create(
            Identifier.VOUCHERS_ID,
            VouchersRedeemLogs::vouchersId,
            VouchersRedeemLogs::vouchersId,
            Vouchers.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link VouchersRedeemLogs} field that can
     * be obtained using the {@link VouchersRedeemLogs#accountsId()} method.
     */
    IntForeignKeyField<VouchersRedeemLogs, Integer, Accounts> ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.ACCOUNTS_ID,
            VouchersRedeemLogs::accountsId,
            VouchersRedeemLogs::accountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link VouchersRedeemLogs} field that can
     * be obtained using the {@link VouchersRedeemLogs#date()} method.
     */
    ComparableField<VouchersRedeemLogs, Timestamp, Timestamp> DATE = ComparableField.create(
            Identifier.DATE,
            VouchersRedeemLogs::date,
            (ReferenceSetter<VouchersRedeemLogs, Timestamp>) VouchersRedeemLogs::date,
            TypeMapper.identity(),
            false
    );

    /**
     * Returns the id of this VouchersRedeemLogs. The id field corresponds to
     * the database column kalaazu.kalaazu.vouchers_redeem_logs.id.
     *
     * @return the id of this VouchersRedeemLogs
     */
    Integer id();

    /**
     * Returns the vouchersId of this VouchersRedeemLogs. The vouchersId field
     * corresponds to the database column
     * kalaazu.kalaazu.vouchers_redeem_logs.vouchers_id.
     *
     * @return the vouchersId of this VouchersRedeemLogs
     */
    short vouchersId();

    /**
     * Returns the accountsId of this VouchersRedeemLogs. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.vouchers_redeem_logs.accounts_id.
     *
     * @return the accountsId of this VouchersRedeemLogs
     */
    int accountsId();

    /**
     * Returns the date of this VouchersRedeemLogs. The date field corresponds
     * to the database column kalaazu.kalaazu.vouchers_redeem_logs.date.
     *
     * @return the date of this VouchersRedeemLogs
     */
    Timestamp date();

    /**
     * Sets the id of this VouchersRedeemLogs. The id field corresponds to the
     * database column kalaazu.kalaazu.vouchers_redeem_logs.id.
     *
     * @param id to set of this VouchersRedeemLogs
     *
     * @return this VouchersRedeemLogs instance
     */
    VouchersRedeemLogs id(Integer id);

    /**
     * Sets the vouchersId of this VouchersRedeemLogs. The vouchersId field
     * corresponds to the database column
     * kalaazu.kalaazu.vouchers_redeem_logs.vouchers_id.
     *
     * @param vouchersId to set of this VouchersRedeemLogs
     *
     * @return this VouchersRedeemLogs instance
     */
    VouchersRedeemLogs vouchersId(short vouchersId);

    /**
     * Sets the accountsId of this VouchersRedeemLogs. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.vouchers_redeem_logs.accounts_id.
     *
     * @param accountsId to set of this VouchersRedeemLogs
     *
     * @return this VouchersRedeemLogs instance
     */
    VouchersRedeemLogs accountsId(int accountsId);

    /**
     * Sets the date of this VouchersRedeemLogs. The date field corresponds to
     * the database column kalaazu.kalaazu.vouchers_redeem_logs.date.
     *
     * @param date to set of this VouchersRedeemLogs
     *
     * @return this VouchersRedeemLogs instance
     */
    VouchersRedeemLogs date(Timestamp date);

    /**
     * Queries the specified manager for the referenced Vouchers. If no such
     * Vouchers exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Vouchers findVouchersId(Manager<Vouchers> foreignManager);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findAccountsId(Manager<Accounts> foreignManager);

    enum Identifier implements ColumnIdentifier<VouchersRedeemLogs> {

        ID("id"),
        VOUCHERS_ID("vouchers_id"),
        ACCOUNTS_ID("accounts_id"),
        DATE("date");

        private final String columnName;

        private final TableIdentifier<VouchersRedeemLogs> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "vouchers_redeem_logs";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<VouchersRedeemLogs> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}