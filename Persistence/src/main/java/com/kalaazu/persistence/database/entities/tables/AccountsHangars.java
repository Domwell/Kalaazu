/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.entities.tables;


import com.kalaazu.persistence.database.entities.Indexes;
import com.kalaazu.persistence.database.entities.Kalaazu;
import com.kalaazu.persistence.database.entities.Keys;
import com.kalaazu.persistence.database.entities.tables.records.AccountsHangarsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Hangars bough by an account.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsHangars extends TableImpl<AccountsHangarsRecord> {

    private static final long serialVersionUID = 1896441900;

    /**
     * The reference instance of <code>kalaazu.accounts_hangars</code>
     */
    public static final AccountsHangars ACCOUNTS_HANGARS = new AccountsHangars();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsHangarsRecord> getRecordType() {
        return AccountsHangarsRecord.class;
    }

    /**
     * The column <code>kalaazu.accounts_hangars.id</code>. Primary Key.
     */
    public final TableField<AccountsHangarsRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary Key.");

    /**
     * The column <code>kalaazu.accounts_hangars.accounts_id</code>.
     */
    public final TableField<AccountsHangarsRecord, Integer> ACCOUNTS_ID = createField(DSL.name("accounts_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kalaazu.accounts_hangars.accounts_ships_id</code>. Ship available in the hangar.
     */
    public final TableField<AccountsHangarsRecord, Integer> ACCOUNTS_SHIPS_ID = createField(DSL.name("accounts_ships_id"), org.jooq.impl.SQLDataType.INTEGER, this, "Ship available in the hangar.");

    /**
     * The column <code>kalaazu.accounts_hangars.accounts_configurations_id</code>. Equipped configuration.
     */
    public final TableField<AccountsHangarsRecord, Integer> ACCOUNTS_CONFIGURATIONS_ID = createField(DSL.name("accounts_configurations_id"), org.jooq.impl.SQLDataType.INTEGER, this, "Equipped configuration.");

    /**
     * The column <code>kalaazu.accounts_hangars.name</code>.
     */
    public final TableField<AccountsHangarsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("HANGAR", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>kalaazu.accounts_hangars.priority</code>. Order priority, null = not ordered.
     */
    public final TableField<AccountsHangarsRecord, Byte> PRIORITY = createField(DSL.name("priority"), org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("-1", org.jooq.impl.SQLDataType.TINYINT)), this, "Order priority, null = not ordered.");

    /**
     * The column <code>kalaazu.accounts_hangars.date</code>.
     */
    public final TableField<AccountsHangarsRecord, Timestamp> DATE = createField(DSL.name("date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>kalaazu.accounts_hangars</code> table reference
     */
    public AccountsHangars() {
        this(DSL.name("accounts_hangars"), null);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_hangars</code> table reference
     */
    public AccountsHangars(String alias) {
        this(DSL.name(alias), ACCOUNTS_HANGARS);
    }

    /**
     * Create an aliased <code>kalaazu.accounts_hangars</code> table reference
     */
    public AccountsHangars(Name alias) {
        this(alias, ACCOUNTS_HANGARS);
    }

    private AccountsHangars(Name alias, Table<AccountsHangarsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountsHangars(Name alias, Table<AccountsHangarsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Hangars bough by an account."));
    }

    public <O extends Record> AccountsHangars(Table<O> child, ForeignKey<O, AccountsHangarsRecord> key) {
        super(child, key, ACCOUNTS_HANGARS);
    }

    @Override
    public Schema getSchema() {
        return Kalaazu.KALAAZU;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACCOUNTS_HANGARS_ACCOUNTS_HANGARS_ACCOUNTS_ACCOUNTS_ID_IDX, Indexes.ACCOUNTS_HANGARS_ACCOUNTS_HANGARS_ACCOUNTS_SHIPS_ID_IDX, Indexes.ACCOUNTS_HANGARS_PRIMARY);
    }

    @Override
    public Identity<AccountsHangarsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACCOUNTS_HANGARS;
    }

    @Override
    public UniqueKey<AccountsHangarsRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNTS_HANGARS_PRIMARY;
    }

    @Override
    public List<UniqueKey<AccountsHangarsRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsHangarsRecord>>asList(Keys.KEY_ACCOUNTS_HANGARS_PRIMARY);
    }

    @Override
    public List<ForeignKey<AccountsHangarsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AccountsHangarsRecord, ?>>asList(Keys.ACCOUNTS_HANGARS_ACCOUNTS, Keys.ACCOUNTS_HANGARS_ACCOUNTS_SHIPS);
    }

    public Accounts accounts() {
        return new Accounts(this, Keys.ACCOUNTS_HANGARS_ACCOUNTS);
    }

    public AccountsShips accountsShips() {
        return new AccountsShips(this, Keys.ACCOUNTS_HANGARS_ACCOUNTS_SHIPS);
    }

    @Override
    public AccountsHangars as(String alias) {
        return new AccountsHangars(DSL.name(alias), this);
    }

    @Override
    public AccountsHangars as(Name alias) {
        return new AccountsHangars(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsHangars rename(String name) {
        return new AccountsHangars(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountsHangars rename(Name name) {
        return new AccountsHangars(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, Integer, String, Byte, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
