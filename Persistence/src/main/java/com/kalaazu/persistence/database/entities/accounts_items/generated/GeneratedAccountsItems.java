package com.kalaazu.persistence.database.entities.accounts_items.generated;

import com.kalaazu.persistence.database.entities.*;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.*;
import com.speedment.runtime.field.method.ReferenceSetter;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Timestamp;

/**
 * The generated base for the {@link
 * AccountsItems}-interface
 * representing entities of the {@code accounts_items}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsItems {

    /**
     * This Field corresponds to the {@link AccountsItems} field that can be
     * obtained using the {@link AccountsItems#id()} method.
     */
    IntField<AccountsItems, Integer> ID = IntField.create(
            Identifier.ID,
            AccountsItems::id,
            AccountsItems::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsItems} field that can be
     * obtained using the {@link AccountsItems#itemsId()} method.
     */
    ShortForeignKeyField<AccountsItems, Short, Items> ITEMS_ID = ShortForeignKeyField.create(
            Identifier.ITEMS_ID,
            AccountsItems::itemsId,
            AccountsItems::itemsId,
            Items.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsItems} field that can be
     * obtained using the {@link AccountsItems#accountsId()} method.
     */
    IntForeignKeyField<AccountsItems, Integer, Accounts> ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.ACCOUNTS_ID,
            AccountsItems::accountsId,
            AccountsItems::accountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsItems} field that can be
     * obtained using the {@link AccountsItems#levelsId()} method.
     */
    ByteForeignKeyField<AccountsItems, Byte, Levels> LEVELS_ID = ByteForeignKeyField.create(
            Identifier.LEVELS_ID,
            AccountsItems::levelsId,
            AccountsItems::levelsId,
            Levels.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsItems} field that can be
     * obtained using the {@link AccountsItems#date()} method.
     */
    ComparableField<AccountsItems, Timestamp, Timestamp> DATE = ComparableField.create(
            Identifier.DATE,
            AccountsItems::date,
            (ReferenceSetter<AccountsItems, Timestamp>) AccountsItems::date,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsItems} field that can be
     * obtained using the {@link AccountsItems#amount()} method.
     */
    LongField<AccountsItems, Long> AMOUNT = LongField.create(
            Identifier.AMOUNT,
            AccountsItems::amount,
            AccountsItems::amount,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this AccountsItems. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_items.id.
     *
     * @return the id of this AccountsItems
     */
    Integer id();

    /**
     * Returns the itemsId of this AccountsItems. The itemsId field corresponds
     * to the database column kalaazu.kalaazu.accounts_items.items_id.
     *
     * @return the itemsId of this AccountsItems
     */
    short itemsId();

    /**
     * Returns the accountsId of this AccountsItems. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_items.accounts_id.
     *
     * @return the accountsId of this AccountsItems
     */
    int accountsId();

    /**
     * Returns the levelsId of this AccountsItems. The levelsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_items.levels_id.
     *
     * @return the levelsId of this AccountsItems
     */
    byte levelsId();

    /**
     * Returns the date of this AccountsItems. The date field corresponds to the
     * database column kalaazu.kalaazu.accounts_items.date.
     *
     * @return the date of this AccountsItems
     */
    Timestamp date();

    /**
     * Returns the amount of this AccountsItems. The amount field corresponds to
     * the database column kalaazu.kalaazu.accounts_items.amount.
     *
     * @return the amount of this AccountsItems
     */
    long amount();

    /**
     * Sets the id of this AccountsItems. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_items.id.
     *
     * @param id to set of this AccountsItems
     *
     * @return this AccountsItems instance
     */
    AccountsItems id(Integer id);

    /**
     * Sets the itemsId of this AccountsItems. The itemsId field corresponds to
     * the database column kalaazu.kalaazu.accounts_items.items_id.
     *
     * @param itemsId to set of this AccountsItems
     *
     * @return this AccountsItems instance
     */
    AccountsItems itemsId(short itemsId);

    /**
     * Sets the accountsId of this AccountsItems. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_items.accounts_id.
     *
     * @param accountsId to set of this AccountsItems
     *
     * @return this AccountsItems instance
     */
    AccountsItems accountsId(int accountsId);

    /**
     * Sets the levelsId of this AccountsItems. The levelsId field corresponds
     * to the database column kalaazu.kalaazu.accounts_items.levels_id.
     *
     * @param levelsId to set of this AccountsItems
     *
     * @return this AccountsItems instance
     */
    AccountsItems levelsId(byte levelsId);

    /**
     * Sets the date of this AccountsItems. The date field corresponds to the
     * database column kalaazu.kalaazu.accounts_items.date.
     *
     * @param date to set of this AccountsItems
     *
     * @return this AccountsItems instance
     */
    AccountsItems date(Timestamp date);

    /**
     * Sets the amount of this AccountsItems. The amount field corresponds to
     * the database column kalaazu.kalaazu.accounts_items.amount.
     *
     * @param amount to set of this AccountsItems
     *
     * @return this AccountsItems instance
     */
    AccountsItems amount(long amount);

    /**
     * Queries the specified manager for the referenced Items. If no such Items
     * exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Items findItemsId(Manager<Items> foreignManager);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findAccountsId(Manager<Accounts> foreignManager);

    /**
     * Queries the specified manager for the referenced Levels. If no such
     * Levels exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Levels findLevelsId(Manager<Levels> foreignManager);

    enum Identifier implements ColumnIdentifier<AccountsItems> {

        ID("id"),
        ITEMS_ID("items_id"),
        ACCOUNTS_ID("accounts_id"),
        LEVELS_ID("levels_id"),
        DATE("date"),
        AMOUNT("amount");

        private final String columnName;

        private final TableIdentifier<AccountsItems> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "accounts_items";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<AccountsItems> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}