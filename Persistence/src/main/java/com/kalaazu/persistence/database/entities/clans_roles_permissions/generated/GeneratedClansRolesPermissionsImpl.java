package com.kalaazu.persistence.database.entities.clans_roles_permissions.generated;

import com.kalaazu.persistence.database.entities.ClansRoles;
import com.kalaazu.persistence.database.entities.ClansRolesPermissions;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Permissions;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.function.OptionalBoolean;
import com.speedment.runtime.core.util.OptionalUtil;
import lombok.Data;

/**
 * The generated base implementation of the {@link
 * ClansRolesPermissions}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
@Data
public abstract class GeneratedClansRolesPermissionsImpl implements ClansRolesPermissions {

    private Integer id;

    private int clansRolesId;

    private byte permissionsId;

    private boolean isEnabled;

    protected GeneratedClansRolesPermissionsImpl() {

    }

    @Override
    public OptionalBoolean isEnabled() {
        return OptionalUtil.ofNullable(isEnabled);
    }

    @Override
    public ClansRoles findClansRolesId(Manager<ClansRoles> foreignManager) {
        return foreignManager.stream()
                             .filter(ClansRoles.ID.equal(clansRolesId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Permissions findPermissionsId(Manager<Permissions> foreignManager) {
        return foreignManager.stream()
                             .filter(Permissions.ID.equal(permissionsId()))
                             .findAny()
                             .orElse(null);
    }
}