package com.kalaazu.persistence.database.entities.clans_battlestations_logs.generated;

import com.kalaazu.persistence.database.entities.ClansBattlestationsLogs;
import com.kalaazu.persistence.database.entities.clans_battlestations_logs.ClansBattlestationsLogsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.clans_battlestations_logs.ClansBattlestationsLogs}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedClansBattlestationsLogsSqlAdapter implements SqlAdapter<ClansBattlestationsLogs> {

    private final TableIdentifier<ClansBattlestationsLogs> tableIdentifier;

    protected GeneratedClansBattlestationsLogsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "clans_battlestations_logs");
    }

    protected ClansBattlestationsLogs apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getInt(1 + offset))
                .setClansId(resultSet.getInt(2 + offset))
                .setClansBattlestationsId(resultSet.getByte(3 + offset))
                .setMessage(resultSet.getString(4 + offset))
                .setDate(resultSet.getTimestamp(5 + offset))
                ;
    }

    protected ClansBattlestationsLogsImpl createEntity() {
        return new ClansBattlestationsLogsImpl();
    }

    @Override
    public TableIdentifier<ClansBattlestationsLogs> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, ClansBattlestationsLogs> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, ClansBattlestationsLogs> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}