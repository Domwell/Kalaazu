package com.kalaazu.persistence.database.entities.accounts_banks_logs.generated;

import com.kalaazu.persistence.database.entities.AccountsBanksLogs;
import com.kalaazu.persistence.database.entities.*;
import com.kalaazu.persistence.database.entities.accounts_banks_logs.AccountsBanksLogsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.getInt;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.accounts_banks_logs.AccountsBanksLogs}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsBanksLogsSqlAdapter implements SqlAdapter<AccountsBanksLogs> {

    private final TableIdentifier<AccountsBanksLogs> tableIdentifier;

    private SqlTypeMapperHelper<Byte, BankLogType> typeHelper;

    private SqlTypeMapperHelper<Byte, Currency> currencyHelper;

    protected GeneratedAccountsBanksLogsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "accounts_banks_logs");
    }

    protected AccountsBanksLogs apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getInt(1 + offset))
                .setFromAccountsId(resultSet.getInt(2 + offset))
                .setToAccountsId(resultSet.getInt(3 + offset))
                .setDate(resultSet.getTimestamp(4 + offset))
                .setType(resultSet.getByte(5 + offset))
                .setAmount(resultSet.getInt(6 + offset))
                .setCurrency(resultSet.getByte(7 + offset))
                .setAccountsBanksId(getInt(resultSet, 8 + offset))
                ;
    }

    protected AccountsBanksLogsImpl createEntity() {
        return new AccountsBanksLogsImpl();
    }

    @Override
    public TableIdentifier<AccountsBanksLogs> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, AccountsBanksLogs> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, AccountsBanksLogs> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}