/*
 * This file is generated by jOOQ.
 */
package com.kalaazu.persistence.database.entities.tables.records;


import com.kalaazu.persistence.database.entities.tables.Collectables;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Map collectables.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectablesRecord extends UpdatableRecordImpl<CollectablesRecord> implements Record4<Byte, Byte, Byte, String> {

    private static final long serialVersionUID = 1845714615;

    /**
     * Setter for <code>kalaazu.collectables.id</code>. Primary Key.
     */
    public void setId(Byte value) {
        set(0, value);
    }

    /**
     * Getter for <code>kalaazu.collectables.id</code>. Primary Key.
     */
    public Byte getId() {
        return (Byte) get(0);
    }

    /**
     * Setter for <code>kalaazu.collectables.gfx</code>.
     */
    public void setGfx(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>kalaazu.collectables.gfx</code>.
     */
    public Byte getGfx() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>kalaazu.collectables.type</code>. 0 = box, 1 = ore, 2 = beacon, 3 = firework
     */
    public void setType(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>kalaazu.collectables.type</code>. 0 = box, 1 = ore, 2 = beacon, 3 = firework
     */
    public Byte getType() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>kalaazu.collectables.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>kalaazu.collectables.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Byte> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Byte, Byte, Byte, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Byte, Byte, Byte, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Byte> field1() {
        return Collectables.COLLECTABLES.ID;
    }

    @Override
    public Field<Byte> field2() {
        return Collectables.COLLECTABLES.GFX;
    }

    @Override
    public Field<Byte> field3() {
        return Collectables.COLLECTABLES.TYPE;
    }

    @Override
    public Field<String> field4() {
        return Collectables.COLLECTABLES.NAME;
    }

    @Override
    public Byte component1() {
        return getId();
    }

    @Override
    public Byte component2() {
        return getGfx();
    }

    @Override
    public Byte component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Byte value1() {
        return getId();
    }

    @Override
    public Byte value2() {
        return getGfx();
    }

    @Override
    public Byte value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public CollectablesRecord value1(Byte value) {
        setId(value);
        return this;
    }

    @Override
    public CollectablesRecord value2(Byte value) {
        setGfx(value);
        return this;
    }

    @Override
    public CollectablesRecord value3(Byte value) {
        setType(value);
        return this;
    }

    @Override
    public CollectablesRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public CollectablesRecord values(Byte value1, Byte value2, Byte value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollectablesRecord
     */
    public CollectablesRecord() {
        super(Collectables.COLLECTABLES);
    }

    /**
     * Create a detached, initialised CollectablesRecord
     */
    public CollectablesRecord(Byte id, Byte gfx, Byte type, String name) {
        super(Collectables.COLLECTABLES);

        set(0, id);
        set(1, gfx);
        set(2, type);
        set(3, name);
    }
}
