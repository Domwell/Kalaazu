package com.kalaazu.persistence.database.entities.ships.generated;

import com.kalaazu.persistence.database.entities.Ships;
import com.kalaazu.persistence.database.entities.ships.ShipsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.ships.Ships} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedShipsSqlAdapter implements SqlAdapter<Ships> {

    private final TableIdentifier<Ships> tableIdentifier;

    protected GeneratedShipsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "ships");
    }

    protected Ships apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getByte(1 + offset))
                .setItemsId(resultSet.getShort(2 + offset))
                .setHealth(resultSet.getInt(3 + offset))
                .setSpeed(resultSet.getShort(4 + offset))
                .setCargo(resultSet.getShort(5 + offset))
                .setBatteries(resultSet.getShort(6 + offset))
                .setRockets(resultSet.getShort(7 + offset))
                .setLasers(resultSet.getByte(8 + offset))
                .setHellstorms(resultSet.getByte(9 + offset))
                .setGenerators(resultSet.getByte(10 + offset))
                .setExtras(resultSet.getByte(11 + offset))
                .setGfx(resultSet.getByte(12 + offset))
                ;
    }

    protected ShipsImpl createEntity() {
        return new ShipsImpl();
    }

    @Override
    public TableIdentifier<Ships> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, Ships> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, Ships> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}