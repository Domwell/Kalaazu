package com.kalaazu.persistence.database.entities.quests.generated;

import com.kalaazu.persistence.database.entities.Factions;
import com.kalaazu.persistence.database.entities.Levels;
import com.kalaazu.persistence.database.entities.Quests;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ByteForeignKeyField;
import com.speedment.runtime.field.ComparableForeignKeyField;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.Optional;

/**
 * The generated base for the {@link
 * com.kalaazu.persistence.database.entities.quests.Quests}-interface
 * representing entities of the {@code quests}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedQuests {

    /**
     * This Field corresponds to the {@link Quests} field that can be obtained
     * using the {@link Quests#getId()} method.
     */
    ShortField<Quests, Short>                               ID          = ShortField.create(
            Identifier.ID,
            Quests::getId,
            Quests::setId,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link Quests} field that can be obtained
     * using the {@link Quests#getLevelsId()} method.
     */
    ByteForeignKeyField<Quests, Byte, Levels>               LEVELS_ID   = ByteForeignKeyField.create(
            Identifier.LEVELS_ID,
            Quests::getLevelsId,
            Quests::setLevelsId,
            Levels.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Quests} field that can be obtained
     * using the {@link Quests#getQuestsId()} method.
     */
    ComparableForeignKeyField<Quests, Short, Short, Quests> QUESTS_ID   = ComparableForeignKeyField.create(
            Identifier.QUESTS_ID,
            o -> OptionalUtil.unwrap(o.getQuestsId()),
            Quests::setQuestsId,
            Quests.ID,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Quests} field that can be obtained
     * using the {@link Quests#getFactionsId()} method.
     */
    ComparableForeignKeyField<Quests, Byte, Byte, Factions> FACTIONS_ID = ComparableForeignKeyField.create(
            Identifier.FACTIONS_ID,
            o -> OptionalUtil.unwrap(o.getFactionsId()),
            Quests::setFactionsId,
            Factions.ID,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Quests} field that can be obtained
     * using the {@link Quests#getName()} method.
     */
    StringField<Quests, String>                             NAME        = StringField.create(
            Identifier.NAME,
            Quests::getName,
            Quests::setName,
            TypeMapper.identity(),
            false
    );

    /**
     * Returns the id of this Quests. The id field corresponds to the database
     * column kalaazu.kalaazu.quests.id.
     *
     * @return the id of this Quests
     */
    Short getId();

    /**
     * Returns the levelsId of this Quests. The levelsId field corresponds to
     * the database column kalaazu.kalaazu.quests.levels_id.
     *
     * @return the levelsId of this Quests
     */
    byte getLevelsId();

    /**
     * Returns the questsId of this Quests. The questsId field corresponds to
     * the database column kalaazu.kalaazu.quests.quests_id.
     *
     * @return the questsId of this Quests
     */
    Optional<Short> getQuestsId();

    /**
     * Returns the factionsId of this Quests. The factionsId field corresponds
     * to the database column kalaazu.kalaazu.quests.factions_id.
     *
     * @return the factionsId of this Quests
     */
    Optional<Byte> getFactionsId();

    /**
     * Returns the name of this Quests. The name field corresponds to the
     * database column kalaazu.kalaazu.quests.name.
     *
     * @return the name of this Quests
     */
    String getName();

    /**
     * Sets the id of this Quests. The id field corresponds to the database
     * column kalaazu.kalaazu.quests.id.
     *
     * @param id to set of this Quests
     *
     * @return this Quests instance
     */
    Quests setId(short id);

    /**
     * Sets the levelsId of this Quests. The levelsId field corresponds to the
     * database column kalaazu.kalaazu.quests.levels_id.
     *
     * @param levelsId to set of this Quests
     *
     * @return this Quests instance
     */
    Quests setLevelsId(byte levelsId);

    /**
     * Sets the questsId of this Quests. The questsId field corresponds to the
     * database column kalaazu.kalaazu.quests.quests_id.
     *
     * @param questsId to set of this Quests
     *
     * @return this Quests instance
     */
    Quests setQuestsId(Short questsId);

    /**
     * Sets the factionsId of this Quests. The factionsId field corresponds to
     * the database column kalaazu.kalaazu.quests.factions_id.
     *
     * @param factionsId to set of this Quests
     *
     * @return this Quests instance
     */
    Quests setFactionsId(Byte factionsId);

    /**
     * Sets the name of this Quests. The name field corresponds to the database
     * column kalaazu.kalaazu.quests.name.
     *
     * @param name to set of this Quests
     *
     * @return this Quests instance
     */
    Quests setName(String name);

    /**
     * Queries the specified manager for the referenced Levels. If no such
     * Levels exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Levels findLevelsId(Manager<Levels> foreignManager);

    /**
     * Queries the specified manager for the referenced Quests. If no such
     * Quests exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Optional<Quests> findQuestsId(Manager<Quests> foreignManager);

    /**
     * Queries the specified manager for the referenced Factions. If no such
     * Factions exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Optional<Factions> findFactionsId(Manager<Factions> foreignManager);

    enum Identifier implements ColumnIdentifier<Quests> {

        ID("id"),
        LEVELS_ID("levels_id"),
        QUESTS_ID("quests_id"),
        FACTIONS_ID("factions_id"),
        NAME("name");

        private final String                  columnId;

        private final TableIdentifier<Quests> tableIdentifier;

        Identifier(String columnId) {
            this.columnId = columnId;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsId(),
                    getSchemaId(),
                    getTableId()
            );
        }

        @Override
        public String getDbmsId() {
            return "kalaazu";
        }

        @Override
        public String getSchemaId() {
            return "kalaazu";
        }

        @Override
        public String getTableId() {
            return "quests";
        }

        @Override
        public String getColumnId() {
            return this.columnId;
        }

        @Override
        public TableIdentifier<Quests> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}