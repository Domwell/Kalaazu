package com.kalaazu.persistence.database.entities.npcs.generated;

import com.kalaazu.persistence.database.entities.Npcs;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ByteField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * Npcs}-interface
 * representing entities of the {@code npcs}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedNpcs {

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getId()} method.
     */
    ByteField<Npcs, Byte> ID = ByteField.create(
            Identifier.ID,
            Npcs::getId,
            Npcs::setId,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getName()} method.
     */
    StringField<Npcs, String> NAME = StringField.create(
            Identifier.NAME,
            Npcs::getName,
            Npcs::setName,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getHealth()} method.
     */
    IntField<Npcs, Integer> HEALTH = IntField.create(
            Identifier.HEALTH,
            Npcs::getHealth,
            Npcs::setHealth,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getShield()} method.
     */
    IntField<Npcs, Integer> SHIELD = IntField.create(
            Identifier.SHIELD,
            Npcs::getShield,
            Npcs::setShield,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getShieldAbsorption()} method.
     */
    ByteField<Npcs, Byte> SHIELD_ABSORPTION = ByteField.create(
            Identifier.SHIELD_ABSORPTION,
            Npcs::getShieldAbsorption,
            Npcs::setShieldAbsorption,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getDamage()} method.
     */
    IntField<Npcs, Integer> DAMAGE = IntField.create(
            Identifier.DAMAGE,
            Npcs::getDamage,
            Npcs::setDamage,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getSpeed()} method.
     */
    ShortField<Npcs, Short> SPEED = ShortField.create(
            Identifier.SPEED,
            Npcs::getSpeed,
            Npcs::setSpeed,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getGfx()} method.
     */
    ByteField<Npcs, Byte> GFX = ByteField.create(
            Identifier.GFX,
            Npcs::getGfx,
            Npcs::setGfx,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link Npcs} field that can be obtained
     * using the {@link Npcs#getAi()} method.
     */
    ByteField<Npcs, Byte> AI = ByteField.create(
            Identifier.AI,
            Npcs::getAi,
            Npcs::setAi,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this Npcs. The id field corresponds to the database
     * column kalaazu.kalaazu.npcs.id.
     *
     * @return the id of this Npcs
     */
    Byte getId();

    /**
     * Returns the name of this Npcs. The name field corresponds to the database
     * column kalaazu.kalaazu.npcs.name.
     *
     * @return the name of this Npcs
     */
    String getName();

    /**
     * Returns the health of this Npcs. The health field corresponds to the
     * database column kalaazu.kalaazu.npcs.health.
     *
     * @return the health of this Npcs
     */
    int getHealth();

    /**
     * Returns the shield of this Npcs. The shield field corresponds to the
     * database column kalaazu.kalaazu.npcs.shield.
     *
     * @return the shield of this Npcs
     */
    int getShield();

    /**
     * Returns the shieldAbsorption of this Npcs. The shieldAbsorption field
     * corresponds to the database column
     * kalaazu.kalaazu.npcs.shield_absorption.
     *
     * @return the shieldAbsorption of this Npcs
     */
    byte getShieldAbsorption();

    /**
     * Returns the damage of this Npcs. The damage field corresponds to the
     * database column kalaazu.kalaazu.npcs.damage.
     *
     * @return the damage of this Npcs
     */
    int getDamage();

    /**
     * Returns the speed of this Npcs. The speed field corresponds to the
     * database column kalaazu.kalaazu.npcs.speed.
     *
     * @return the speed of this Npcs
     */
    short getSpeed();

    /**
     * Returns the gfx of this Npcs. The gfx field corresponds to the database
     * column kalaazu.kalaazu.npcs.gfx.
     *
     * @return the gfx of this Npcs
     */
    byte getGfx();

    /**
     * Returns the ai of this Npcs. The ai field corresponds to the database
     * column kalaazu.kalaazu.npcs.ai.
     *
     * @return the ai of this Npcs
     */
    byte getAi();

    /**
     * Sets the id of this Npcs. The id field corresponds to the database column
     * kalaazu.kalaazu.npcs.id.
     *
     * @param id to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setId(byte id);

    /**
     * Sets the name of this Npcs. The name field corresponds to the database
     * column kalaazu.kalaazu.npcs.name.
     *
     * @param name to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setName(String name);

    /**
     * Sets the health of this Npcs. The health field corresponds to the
     * database column kalaazu.kalaazu.npcs.health.
     *
     * @param health to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setHealth(int health);

    /**
     * Sets the shield of this Npcs. The shield field corresponds to the
     * database column kalaazu.kalaazu.npcs.shield.
     *
     * @param shield to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setShield(int shield);

    /**
     * Sets the shieldAbsorption of this Npcs. The shieldAbsorption field
     * corresponds to the database column
     * kalaazu.kalaazu.npcs.shield_absorption.
     *
     * @param shieldAbsorption to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setShieldAbsorption(byte shieldAbsorption);

    /**
     * Sets the damage of this Npcs. The damage field corresponds to the
     * database column kalaazu.kalaazu.npcs.damage.
     *
     * @param damage to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setDamage(int damage);

    /**
     * Sets the speed of this Npcs. The speed field corresponds to the database
     * column kalaazu.kalaazu.npcs.speed.
     *
     * @param speed to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setSpeed(short speed);

    /**
     * Sets the gfx of this Npcs. The gfx field corresponds to the database
     * column kalaazu.kalaazu.npcs.gfx.
     *
     * @param gfx to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setGfx(byte gfx);

    /**
     * Sets the ai of this Npcs. The ai field corresponds to the database column
     * kalaazu.kalaazu.npcs.ai.
     *
     * @param ai to set of this Npcs
     *
     * @return this Npcs instance
     */
    Npcs setAi(byte ai);

    enum Identifier implements ColumnIdentifier<Npcs> {

        ID("id"),
        NAME("name"),
        HEALTH("health"),
        SHIELD("shield"),
        SHIELD_ABSORPTION("shield_absorption"),
        DAMAGE("damage"),
        SPEED("speed"),
        GFX("gfx"),
        AI("ai");

        private final String columnName;

        private final TableIdentifier<Npcs> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "npcs";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<Npcs> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}