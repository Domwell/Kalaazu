package com.kalaazu.persistence.database.entities.quests_conditions.generated;

import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Quests;
import com.kalaazu.persistence.database.entities.QuestsConditions;
import com.kalaazu.persistence.database.mappers.QuestConditionType;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import lombok.Data;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * QuestsConditions}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
@Data
public abstract class GeneratedQuestsConditionsImpl implements QuestsConditions {

    private Integer id;

    private Integer questsConditionsId;

    private short questsId;

    private QuestConditionType type;

    private String value;

    protected GeneratedQuestsConditionsImpl() {

    }

    @Override
    public OptionalInt questsConditionsId() {
        return OptionalUtil.ofNullable(questsConditionsId);
    }

    @Override
    public Optional<QuestsConditions> findQuestsConditionsId(Manager<QuestsConditions> foreignManager) {
        if (questsConditionsId().isPresent()) {
            return foreignManager.stream()
                                 .filter(QuestsConditions.ID.equal(questsConditionsId().getAsInt()))
                                 .findAny();
        } else {
            return Optional.empty();
        }
    }

    @Override
    public Quests findQuestsId(Manager<Quests> foreignManager) {
        return foreignManager.stream()
                             .filter(Quests.ID.equal(questsId()))
                             .findAny()
                             .orElse(null);
    }
}