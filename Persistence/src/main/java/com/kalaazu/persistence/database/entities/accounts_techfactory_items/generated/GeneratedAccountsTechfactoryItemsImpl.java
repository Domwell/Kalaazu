package com.kalaazu.persistence.database.entities.accounts_techfactory_items.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.AccountsTechfactoryItems;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.TechfactoryItems;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import lombok.Data;

import java.sql.Timestamp;
import java.util.Optional;

/**
 * The generated base implementation of the {@link
 * AccountsTechfactoryItems}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
@Data
public abstract class GeneratedAccountsTechfactoryItemsImpl implements AccountsTechfactoryItems {

    private Integer id;

    private int accountsId;

    private byte techfactoryItemsId;

    private short amount;

    private Timestamp date;

    protected GeneratedAccountsTechfactoryItemsImpl() {

    }

    @Override
    public Optional<Timestamp> date() {
        return Optional.ofNullable(date);
    }

    @Override
    public Accounts findAccountsId(Manager<Accounts> foreignManager) {
        return foreignManager.stream()
                             .filter(Accounts.ID.equal(accountsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public TechfactoryItems findTechfactoryItemsId(Manager<TechfactoryItems> foreignManager) {
        return foreignManager.stream()
                             .filter(TechfactoryItems.ID.equal(techfactoryItemsId()))
                             .findAny()
                             .orElse(null);
    }
}