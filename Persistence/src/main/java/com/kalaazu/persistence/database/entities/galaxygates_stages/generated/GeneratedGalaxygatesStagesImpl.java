package com.kalaazu.persistence.database.entities.galaxygates_stages.generated;

import com.kalaazu.persistence.database.entities.GalaxygatesStages;
import com.kalaazu.persistence.database.entities.GalaxygatesWaves;
import com.speedment.common.annotation.GeneratedCode;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.kalaazu.persistence.database.entities.galaxygates_stages.GalaxygatesStages}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedGalaxygatesStagesImpl implements GalaxygatesStages {

    private int    id;

    private byte   galaxygatesWavesId;

    private String comment;

    protected GeneratedGalaxygatesStagesImpl() {
    }

    @Override
    public Integer getId() {
        return id;
    }

    @Override
    public byte getGalaxygatesWavesId() {
        return galaxygatesWavesId;
    }

    @Override
    public Optional<String> getComment() {
        return Optional.ofNullable(comment);
    }

    @Override
    public GalaxygatesStages setId(int id) {
        this.id = id;
        return this;
    }

    @Override
    public GalaxygatesStages setGalaxygatesWavesId(byte galaxygatesWavesId) {
        this.galaxygatesWavesId = galaxygatesWavesId;
        return this;
    }

    @Override
    public GalaxygatesStages setComment(String comment) {
        this.comment = comment;
        return this;
    }

    @Override
    public GalaxygatesWaves findGalaxygatesWavesId(Manager<GalaxygatesWaves> foreignManager) {
        return foreignManager.stream()
                             .filter(GalaxygatesWaves.ID.equal(getGalaxygatesWavesId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("galaxygatesWavesId = " + Objects.toString(getGalaxygatesWavesId()));
        sj.add("comment = " + Objects.toString(OptionalUtil.unwrap(getComment())));
        return "GalaxygatesStagesImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof GalaxygatesStages)) {
            return false;
        }
        final GalaxygatesStages thatGalaxygatesStages = (GalaxygatesStages) that;
        if (this.getId() != thatGalaxygatesStages.getId()) {
            return false;
        }
        if (this.getGalaxygatesWavesId() != thatGalaxygatesStages.getGalaxygatesWavesId()) {
            return false;
        }
        if (!Objects.equals(this.getComment(), thatGalaxygatesStages.getComment())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Byte.hashCode(getGalaxygatesWavesId());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getComment()));
        return hash;
    }
}