package com.kalaazu.persistence.database.entities.skylab_modules.generated;

import com.kalaazu.persistence.database.entities.SkylabModules;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ByteField;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * SkylabModules}-interface
 * representing entities of the {@code skylab_modules}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedSkylabModules {

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getId()} method.
     */
    ByteField<SkylabModules, Byte> ID = ByteField.create(
            Identifier.ID,
            SkylabModules::getId,
            SkylabModules::setId,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getName()} method.
     */
    StringField<SkylabModules, String> NAME = StringField.create(
            Identifier.NAME,
            SkylabModules::getName,
            SkylabModules::setName,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getProductionFactor()} method.
     */
    ByteField<SkylabModules, Byte> PRODUCTION_FACTOR = ByteField.create(
            Identifier.PRODUCTION_FACTOR,
            SkylabModules::getProductionFactor,
            SkylabModules::setProductionFactor,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getProductionBase()} method.
     */
    ShortField<SkylabModules, Short> PRODUCTION_BASE = ShortField.create(
            Identifier.PRODUCTION_BASE,
            SkylabModules::getProductionBase,
            SkylabModules::setProductionBase,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getStorageFactor()} method.
     */
    ShortField<SkylabModules, Short> STORAGE_FACTOR = ShortField.create(
            Identifier.STORAGE_FACTOR,
            SkylabModules::getStorageFactor,
            SkylabModules::setStorageFactor,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getStorageBase()} method.
     */
    ShortField<SkylabModules, Short> STORAGE_BASE = ShortField.create(
            Identifier.STORAGE_BASE,
            SkylabModules::getStorageBase,
            SkylabModules::setStorageBase,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getUpgradeFactor()} method.
     */
    ByteField<SkylabModules, Byte> UPGRADE_FACTOR = ByteField.create(
            Identifier.UPGRADE_FACTOR,
            SkylabModules::getUpgradeFactor,
            SkylabModules::setUpgradeFactor,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getUpgradeBase()} method.
     */
    ShortField<SkylabModules, Short> UPGRADE_BASE = ShortField.create(
            Identifier.UPGRADE_BASE,
            SkylabModules::getUpgradeBase,
            SkylabModules::setUpgradeBase,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getEnergyFactor()} method.
     */
    ByteField<SkylabModules, Byte> ENERGY_FACTOR = ByteField.create(
            Identifier.ENERGY_FACTOR,
            SkylabModules::getEnergyFactor,
            SkylabModules::setEnergyFactor,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link SkylabModules} field that can be
     * obtained using the {@link SkylabModules#getEnergyBase()} method.
     */
    ByteField<SkylabModules, Byte> ENERGY_BASE = ByteField.create(
            Identifier.ENERGY_BASE,
            SkylabModules::getEnergyBase,
            SkylabModules::setEnergyBase,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this SkylabModules. The id field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.id.
     *
     * @return the id of this SkylabModules
     */
    Byte getId();

    /**
     * Returns the name of this SkylabModules. The name field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.name.
     *
     * @return the name of this SkylabModules
     */
    String getName();

    /**
     * Returns the productionFactor of this SkylabModules. The productionFactor
     * field corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_factor.
     *
     * @return the productionFactor of this SkylabModules
     */
    byte getProductionFactor();

    /**
     * Returns the productionBase of this SkylabModules. The productionBase
     * field corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_base.
     *
     * @return the productionBase of this SkylabModules
     */
    short getProductionBase();

    /**
     * Returns the storageFactor of this SkylabModules. The storageFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_factor.
     *
     * @return the storageFactor of this SkylabModules
     */
    short getStorageFactor();

    /**
     * Returns the storageBase of this SkylabModules. The storageBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_base.
     *
     * @return the storageBase of this SkylabModules
     */
    short getStorageBase();

    /**
     * Returns the upgradeFactor of this SkylabModules. The upgradeFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_factor.
     *
     * @return the upgradeFactor of this SkylabModules
     */
    byte getUpgradeFactor();

    /**
     * Returns the upgradeBase of this SkylabModules. The upgradeBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_base.
     *
     * @return the upgradeBase of this SkylabModules
     */
    short getUpgradeBase();

    /**
     * Returns the energyFactor of this SkylabModules. The energyFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_factor.
     *
     * @return the energyFactor of this SkylabModules
     */
    byte getEnergyFactor();

    /**
     * Returns the energyBase of this SkylabModules. The energyBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_base.
     *
     * @return the energyBase of this SkylabModules
     */
    byte getEnergyBase();

    /**
     * Sets the id of this SkylabModules. The id field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.id.
     *
     * @param id to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setId(byte id);

    /**
     * Sets the name of this SkylabModules. The name field corresponds to the
     * database column kalaazu.kalaazu.skylab_modules.name.
     *
     * @param name to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setName(String name);

    /**
     * Sets the productionFactor of this SkylabModules. The productionFactor
     * field corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_factor.
     *
     * @param productionFactor to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setProductionFactor(byte productionFactor);

    /**
     * Sets the productionBase of this SkylabModules. The productionBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.production_base.
     *
     * @param productionBase to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setProductionBase(short productionBase);

    /**
     * Sets the storageFactor of this SkylabModules. The storageFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_factor.
     *
     * @param storageFactor to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setStorageFactor(short storageFactor);

    /**
     * Sets the storageBase of this SkylabModules. The storageBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.storage_base.
     *
     * @param storageBase to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setStorageBase(short storageBase);

    /**
     * Sets the upgradeFactor of this SkylabModules. The upgradeFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_factor.
     *
     * @param upgradeFactor to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setUpgradeFactor(byte upgradeFactor);

    /**
     * Sets the upgradeBase of this SkylabModules. The upgradeBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.upgrade_base.
     *
     * @param upgradeBase to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setUpgradeBase(short upgradeBase);

    /**
     * Sets the energyFactor of this SkylabModules. The energyFactor field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_factor.
     *
     * @param energyFactor to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setEnergyFactor(byte energyFactor);

    /**
     * Sets the energyBase of this SkylabModules. The energyBase field
     * corresponds to the database column
     * kalaazu.kalaazu.skylab_modules.energy_base.
     *
     * @param energyBase to set of this SkylabModules
     *
     * @return this SkylabModules instance
     */
    SkylabModules setEnergyBase(byte energyBase);

    enum Identifier implements ColumnIdentifier<SkylabModules> {

        ID("id"),
        NAME("name"),
        PRODUCTION_FACTOR("production_factor"),
        PRODUCTION_BASE("production_base"),
        STORAGE_FACTOR("storage_factor"),
        STORAGE_BASE("storage_base"),
        UPGRADE_FACTOR("upgrade_factor"),
        UPGRADE_BASE("upgrade_base"),
        ENERGY_FACTOR("energy_factor"),
        ENERGY_BASE("energy_base");

        private final String columnName;

        private final TableIdentifier<SkylabModules> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "skylab_modules";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<SkylabModules> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}