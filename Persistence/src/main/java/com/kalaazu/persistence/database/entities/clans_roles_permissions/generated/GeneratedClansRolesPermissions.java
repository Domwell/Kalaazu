package com.kalaazu.persistence.database.entities.clans_roles_permissions.generated;

import com.kalaazu.persistence.database.entities.ClansRoles;
import com.kalaazu.persistence.database.entities.ClansRolesPermissions;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Permissions;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.function.OptionalBoolean;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.*;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.integer.PrimitiveIntegerZeroOneToBooleanMapper;

import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * ClansRolesPermissions}-interface
 * representing entities of the {@code clans_roles_permissions}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedClansRolesPermissions {

    /**
     * This Field corresponds to the {@link ClansRolesPermissions} field that
     * can be obtained using the {@link ClansRolesPermissions#getId()} method.
     */
    IntField<ClansRolesPermissions, Integer> ID = IntField.create(
            Identifier.ID,
            ClansRolesPermissions::getId,
            ClansRolesPermissions::setId,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link ClansRolesPermissions} field that
     * can be obtained using the {@link ClansRolesPermissions#getClansRolesId()}
     * method.
     */
    IntForeignKeyField<ClansRolesPermissions, Integer, ClansRoles> CLANS_ROLES_ID = IntForeignKeyField.create(
            Identifier.CLANS_ROLES_ID,
            ClansRolesPermissions::getClansRolesId,
            ClansRolesPermissions::setClansRolesId,
            ClansRoles.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link ClansRolesPermissions} field that
     * can be obtained using the {@link
     * ClansRolesPermissions#getPermissionsId()} method.
     */
    ByteForeignKeyField<ClansRolesPermissions, Byte, Permissions> PERMISSIONS_ID = ByteForeignKeyField.create(
            Identifier.PERMISSIONS_ID,
            ClansRolesPermissions::getPermissionsId,
            ClansRolesPermissions::setPermissionsId,
            Permissions.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link ClansRolesPermissions} field that
     * can be obtained using the {@link ClansRolesPermissions#getIsEnabled()}
     * method.
     */
    BooleanField<ClansRolesPermissions, Integer> IS_ENABLED = BooleanField.create(
            Identifier.IS_ENABLED,
            o -> OptionalUtil.unwrap(o.getIsEnabled()),
            ClansRolesPermissions::setIsEnabled,
            new PrimitiveIntegerZeroOneToBooleanMapper(),
            false
    );

    /**
     * Returns the id of this ClansRolesPermissions. The id field corresponds to
     * the database column kalaazu.kalaazu.clans_roles_permissions.id.
     *
     * @return the id of this ClansRolesPermissions
     */
    Integer getId();

    /**
     * Returns the clansRolesId of this ClansRolesPermissions. The clansRolesId
     * field corresponds to the database column
     * kalaazu.kalaazu.clans_roles_permissions.clans_roles_id.
     *
     * @return the clansRolesId of this ClansRolesPermissions
     */
    int getClansRolesId();

    /**
     * Returns the permissionsId of this ClansRolesPermissions. The
     * permissionsId field corresponds to the database column
     * kalaazu.kalaazu.clans_roles_permissions.permissions_id.
     *
     * @return the permissionsId of this ClansRolesPermissions
     */
    byte getPermissionsId();

    /**
     * Returns the isEnabled of this ClansRolesPermissions. The isEnabled field
     * corresponds to the database column
     * kalaazu.kalaazu.clans_roles_permissions.is_enabled.
     *
     * @return the isEnabled of this ClansRolesPermissions
     */
    OptionalBoolean getIsEnabled();

    /**
     * Sets the id of this ClansRolesPermissions. The id field corresponds to
     * the database column kalaazu.kalaazu.clans_roles_permissions.id.
     *
     * @param id to set of this ClansRolesPermissions
     *
     * @return this ClansRolesPermissions instance
     */
    ClansRolesPermissions setId(int id);

    /**
     * Sets the clansRolesId of this ClansRolesPermissions. The clansRolesId
     * field corresponds to the database column
     * kalaazu.kalaazu.clans_roles_permissions.clans_roles_id.
     *
     * @param clansRolesId to set of this ClansRolesPermissions
     *
     * @return this ClansRolesPermissions instance
     */
    ClansRolesPermissions setClansRolesId(int clansRolesId);

    /**
     * Sets the permissionsId of this ClansRolesPermissions. The permissionsId
     * field corresponds to the database column
     * kalaazu.kalaazu.clans_roles_permissions.permissions_id.
     *
     * @param permissionsId to set of this ClansRolesPermissions
     *
     * @return this ClansRolesPermissions instance
     */
    ClansRolesPermissions setPermissionsId(byte permissionsId);

    /**
     * Sets the isEnabled of this ClansRolesPermissions. The isEnabled field
     * corresponds to the database column
     * kalaazu.kalaazu.clans_roles_permissions.is_enabled.
     *
     * @param isEnabled to set of this ClansRolesPermissions
     *
     * @return this ClansRolesPermissions instance
     */
    ClansRolesPermissions setIsEnabled(boolean isEnabled);

    /**
     * Queries the specified manager for the referenced ClansRoles. If no such
     * ClansRoles exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    ClansRoles findClansRolesId(Manager<ClansRoles> foreignManager);

    /**
     * Queries the specified manager for the referenced Permissions. If no such
     * Permissions exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Permissions findPermissionsId(Manager<Permissions> foreignManager);

    enum Identifier implements ColumnIdentifier<ClansRolesPermissions> {

        ID("id"),
        CLANS_ROLES_ID("clans_roles_id"),
        PERMISSIONS_ID("permissions_id"),
        IS_ENABLED("is_enabled");

        private final String columnName;

        private final TableIdentifier<ClansRolesPermissions> tableIdentifier;

        Identifier(String columnId) {
            this.columnId = columnId;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsId(),
                    getSchemaId(),
                    getTableId()
            );
        }

        @Override
        public String getDbmsId() {
            return "kalaazu";
        }

        @Override
        public String getSchemaId() {
            return "kalaazu";
        }

        @Override
        public String getTableId() {
            return "clans_roles_permissions";
        }

        @Override
        public String getColumnId() {
            return this.columnId;
        }

        @Override
        public TableIdentifier<ClansRolesPermissions> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}