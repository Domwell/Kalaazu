package com.kalaazu.persistence.database.entities.accounts_destroys.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.AccountsDestroys;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ByteField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.ShortField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * AccountsDestroys}-interface
 * representing entities of the {@code accounts_destroys}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsDestroys {

    /**
     * This Field corresponds to the {@link AccountsDestroys} field that can be
     * obtained using the {@link AccountsDestroys#id()} method.
     */
    IntField<AccountsDestroys, Integer> ID = IntField.create(
            Identifier.ID,
            AccountsDestroys::id,
            AccountsDestroys::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsDestroys} field that can be
     * obtained using the {@link AccountsDestroys#accountsId()} method.
     */
    IntForeignKeyField<AccountsDestroys, Integer, Accounts> ACCOUNTS_ID = IntForeignKeyField.create(
            Identifier.ACCOUNTS_ID,
            AccountsDestroys::accountsId,
            AccountsDestroys::accountsId,
            Accounts.ID,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsDestroys} field that can be
     * obtained using the {@link AccountsDestroys#shipsId()} method.
     */
    ByteField<AccountsDestroys, Byte> SHIPS_ID = ByteField.create(
            Identifier.SHIPS_ID,
            AccountsDestroys::shipsId,
            AccountsDestroys::shipsId,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsDestroys} field that can be
     * obtained using the {@link AccountsDestroys#points()} method.
     */
    ShortField<AccountsDestroys, Short> POINTS = ShortField.create(
            Identifier.POINTS,
            AccountsDestroys::points,
            AccountsDestroys::points,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsDestroys} field that can be
     * obtained using the {@link AccountsDestroys#amount()} method.
     */
    ShortField<AccountsDestroys, Short> AMOUNT = ShortField.create(
            Identifier.AMOUNT,
            AccountsDestroys::amount,
            AccountsDestroys::amount,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this AccountsDestroys. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_destroys.id.
     *
     * @return the id of this AccountsDestroys
     */
    Integer id();

    /**
     * Returns the accountsId of this AccountsDestroys. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_destroys.accounts_id.
     *
     * @return the accountsId of this AccountsDestroys
     */
    int accountsId();

    /**
     * Returns the shipsId of this AccountsDestroys. The shipsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_destroys.ships_id.
     *
     * @return the shipsId of this AccountsDestroys
     */
    byte shipsId();

    /**
     * Returns the points of this AccountsDestroys. The points field corresponds
     * to the database column kalaazu.kalaazu.accounts_destroys.points.
     *
     * @return the points of this AccountsDestroys
     */
    short points();

    /**
     * Returns the amount of this AccountsDestroys. The amount field corresponds
     * to the database column kalaazu.kalaazu.accounts_destroys.amount.
     *
     * @return the amount of this AccountsDestroys
     */
    short amount();

    /**
     * s the id of this AccountsDestroys. The id field corresponds to the
     * database column kalaazu.kalaazu.accounts_destroys.id.
     *
     * @param id to set of this AccountsDestroys
     *
     * @return this AccountsDestroys instance
     */
    AccountsDestroys id(Integer id);

    /**
     * s the accountsId of this AccountsDestroys. The accountsId field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_destroys.accounts_id.
     *
     * @param accountsId to set of this AccountsDestroys
     *
     * @return this AccountsDestroys instance
     */
    AccountsDestroys accountsId(int accountsId);

    /**
     * s the shipsId of this AccountsDestroys. The shipsId field corresponds
     * to the database column kalaazu.kalaazu.accounts_destroys.ships_id.
     *
     * @param shipsId to set of this AccountsDestroys
     *
     * @return this AccountsDestroys instance
     */
    AccountsDestroys shipsId(byte shipsId);

    /**
     * s the points of this AccountsDestroys. The points field corresponds to
     * the database column kalaazu.kalaazu.accounts_destroys.points.
     *
     * @param points to set of this AccountsDestroys
     *
     * @return this AccountsDestroys instance
     */
    AccountsDestroys points(short points);

    /**
     * s the amount of this AccountsDestroys. The amount field corresponds to
     * the database column kalaazu.kalaazu.accounts_destroys.amount.
     *
     * @param amount to set of this AccountsDestroys
     *
     * @return this AccountsDestroys instance
     */
    AccountsDestroys amount(short amount);

    /**
     * Queries the specified manager for the referenced Accounts. If no such
     * Accounts exists, an {@code NullPointerException} will be thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    Accounts findAccountsId(Manager<Accounts> foreignManager);

    enum Identifier implements ColumnIdentifier<AccountsDestroys> {

        ID("id"),
        ACCOUNTS_ID("accounts_id"),
        SHIPS_ID("ships_id"),
        POINTS("points"),
        AMOUNT("amount");

        private final String columnName;

        private final TableIdentifier<AccountsDestroys> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "accounts_destroys";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<AccountsDestroys> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}