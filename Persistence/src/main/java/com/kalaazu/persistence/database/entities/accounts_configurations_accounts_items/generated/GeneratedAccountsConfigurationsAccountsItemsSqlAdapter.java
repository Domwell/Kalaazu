package com.kalaazu.persistence.database.entities.accounts_configurations_accounts_items.generated;

import com.kalaazu.persistence.database.entities.AccountsConfigurationsAccountsItems;
import com.kalaazu.persistence.database.entities.accounts_configurations_accounts_items.AccountsConfigurationsAccountsItemsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.getInt;

/**
 * The generated Sql Adapter for a {@link
 * com.kalaazu.persistence.database.entities.accounts_configurations_accounts_items.AccountsConfigurationsAccountsItems}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsConfigurationsAccountsItemsSqlAdapter implements SqlAdapter<AccountsConfigurationsAccountsItems> {

    private final TableIdentifier<AccountsConfigurationsAccountsItems> tableIdentifier;

    protected GeneratedAccountsConfigurationsAccountsItemsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("kalaazu", "kalaazu", "accounts_configurations_accounts_items");
    }

    protected AccountsConfigurationsAccountsItems apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getInt(1 + offset))
                .setAccountsConfigurationsId(resultSet.getInt(2 + offset))
                .setAccountsItemsId(resultSet.getInt(3 + offset))
                .setAccountsDronesId(getInt(resultSet, 4 + offset))
                .setAccountsPetsId(getInt(resultSet, 5 + offset))
                ;
    }

    protected AccountsConfigurationsAccountsItemsImpl createEntity() {
        return new AccountsConfigurationsAccountsItemsImpl();
    }

    @Override
    public TableIdentifier<AccountsConfigurationsAccountsItems> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, AccountsConfigurationsAccountsItems> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, AccountsConfigurationsAccountsItems> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}