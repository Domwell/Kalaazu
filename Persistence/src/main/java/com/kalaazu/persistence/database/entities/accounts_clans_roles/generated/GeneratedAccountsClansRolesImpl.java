package com.kalaazu.persistence.database.entities.accounts_clans_roles.generated;

import com.kalaazu.persistence.database.entities.Accounts;
import com.kalaazu.persistence.database.entities.AccountsClansRoles;
import com.kalaazu.persistence.database.entities.ClansRoles;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.kalaazu.persistence.database.entities.accounts_clans_roles.AccountsClansRoles}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccountsClansRolesImpl implements AccountsClansRoles {

    private int id;

    private int accountsId;

    private int clansRolesId;

    protected GeneratedAccountsClansRolesImpl() {
    }

    @Override
    public Integer getId() {
        return id;
    }

    @Override
    public int getAccountsId() {
        return accountsId;
    }

    @Override
    public int getClansRolesId() {
        return clansRolesId;
    }

    @Override
    public AccountsClansRoles setId(int id) {
        this.id = id;
        return this;
    }

    @Override
    public AccountsClansRoles setAccountsId(int accountsId) {
        this.accountsId = accountsId;
        return this;
    }

    @Override
    public AccountsClansRoles setClansRolesId(int clansRolesId) {
        this.clansRolesId = clansRolesId;
        return this;
    }

    @Override
    public Accounts findAccountsId(Manager<Accounts> foreignManager) {
        return foreignManager.stream()
                             .filter(Accounts.ID.equal(getAccountsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public ClansRoles findClansRolesId(Manager<ClansRoles> foreignManager) {
        return foreignManager.stream()
                             .filter(ClansRoles.ID.equal(getClansRolesId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("accountsId = " + Objects.toString(getAccountsId()));
        sj.add("clansRolesId = " + Objects.toString(getClansRolesId()));
        return "AccountsClansRolesImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof AccountsClansRoles)) {
            return false;
        }
        final AccountsClansRoles thatAccountsClansRoles = (AccountsClansRoles) that;
        if (this.getId() != thatAccountsClansRoles.getId()) {
            return false;
        }
        if (this.getAccountsId() != thatAccountsClansRoles.getAccountsId()) {
            return false;
        }
        if (this.getClansRolesId() != thatAccountsClansRoles.getClansRolesId()) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Integer.hashCode(getAccountsId());
        hash = 31 * hash + Integer.hashCode(getClansRolesId());
        return hash;
    }
}