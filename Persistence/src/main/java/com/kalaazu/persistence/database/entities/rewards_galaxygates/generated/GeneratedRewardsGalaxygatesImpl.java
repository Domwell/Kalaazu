package com.kalaazu.persistence.database.entities.rewards_galaxygates.generated;

import com.kalaazu.persistence.database.entities.Galaxygates;
import com.kalaazu.persistence.database.entities.Manager;
import com.kalaazu.persistence.database.entities.Rewards;
import com.kalaazu.persistence.database.entities.RewardsGalaxygates;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * RewardsGalaxygates}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRewardsGalaxygatesImpl implements RewardsGalaxygates {

    private byte id;

    private byte galaxygatesId;

    private short rewardsId;

    protected GeneratedRewardsGalaxygatesImpl() {

    }

    @Override
    public Byte getId() {
        return id;
    }

    @Override
    public byte getGalaxygatesId() {
        return galaxygatesId;
    }

    @Override
    public short getRewardsId() {
        return rewardsId;
    }

    @Override
    public RewardsGalaxygates setId(byte id) {
        this.id = id;
        return this;
    }

    @Override
    public RewardsGalaxygates setGalaxygatesId(byte galaxygatesId) {
        this.galaxygatesId = galaxygatesId;
        return this;
    }

    @Override
    public RewardsGalaxygates setRewardsId(short rewardsId) {
        this.rewardsId = rewardsId;
        return this;
    }

    @Override
    public Galaxygates findGalaxygatesId(Manager<Galaxygates> foreignManager) {
        return foreignManager.stream()
                             .filter(Galaxygates.ID.equal(getGalaxygatesId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public Rewards findRewardsId(Manager<Rewards> foreignManager) {
        return foreignManager.stream()
                             .filter(Rewards.ID.equal(getRewardsId()))
                             .findAny()
                             .orElse(null);
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("galaxygatesId = " + Objects.toString(getGalaxygatesId()));
        sj.add("rewardsId = " + Objects.toString(getRewardsId()));
        return "RewardsGalaxygatesImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof RewardsGalaxygates)) {
            return false;
        }
        final RewardsGalaxygates thatRewardsGalaxygates = (RewardsGalaxygates) that;
        if (this.getId() != thatRewardsGalaxygates.getId()) {
            return false;
        }
        if (this.getGalaxygatesId() != thatRewardsGalaxygates.getGalaxygatesId()) {
            return false;
        }
        if (this.getRewardsId() != thatRewardsGalaxygates.getRewardsId()) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Byte.hashCode(getId());
        hash = 31 * hash + Byte.hashCode(getGalaxygatesId());
        hash = 31 * hash + Short.hashCode(getRewardsId());
        return hash;
    }
}