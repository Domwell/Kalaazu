package com.kalaazu.persistence.database.entities.accounts_configurations.generated;

import com.kalaazu.persistence.database.entities.AccountsConfigurations;
import com.kalaazu.persistence.database.entities.AccountsHangars;
import com.kalaazu.persistence.database.entities.Manager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.*;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * AccountsConfigurations}-interface
 * representing entities of the {@code accounts_configurations}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedAccountsConfigurations {

    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link AccountsConfigurations#id()} method.
     */
    IntField<AccountsConfigurations, Integer> ID = IntField.create(
            Identifier.ID,
            AccountsConfigurations::id,
            AccountsConfigurations::id,
            TypeMapper.primitive(),
            true
    );

    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link
     * AccountsConfigurations#accountsHangarsId()} method.
     */
    IntForeignKeyField<AccountsConfigurations, Integer, AccountsHangars> ACCOUNTS_HANGARS_ID = IntForeignKeyField.create(
            Identifier.ACCOUNTS_HANGARS_ID,
            AccountsConfigurations::accountsHangarsId,
            AccountsConfigurations::accountsHangarsId,
            AccountsHangars.ID,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link
     * AccountsConfigurations#configurationId()} method.
     */
    ByteField<AccountsConfigurations, Byte> CONFIGURATION_ID = ByteField.create(
            Identifier.CONFIGURATION_ID,
            AccountsConfigurations::configurationId,
            AccountsConfigurations::configurationId,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link AccountsConfigurations#name()}
     * method.
     */
    StringField<AccountsConfigurations, String> NAME = StringField.create(
            Identifier.NAME,
            AccountsConfigurations::name,
            AccountsConfigurations::name,
            TypeMapper.identity(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link AccountsConfigurations#shield()}
     * method.
     */
    IntField<AccountsConfigurations, Integer> SHIELD = IntField.create(
            Identifier.SHIELD,
            AccountsConfigurations::shield,
            AccountsConfigurations::shield,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link AccountsConfigurations#speed()}
     * method.
     */
    ShortField<AccountsConfigurations, Short> SPEED = ShortField.create(
            Identifier.SPEED,
            AccountsConfigurations::speed,
            AccountsConfigurations::speed,
            TypeMapper.primitive(),
            false
    );

    /**
     * This Field corresponds to the {@link AccountsConfigurations} field that
     * can be obtained using the {@link AccountsConfigurations#damage()}
     * method.
     */
    IntField<AccountsConfigurations, Integer> DAMAGE = IntField.create(
            Identifier.DAMAGE,
            AccountsConfigurations::damage,
            AccountsConfigurations::damage,
            TypeMapper.primitive(),
            false
    );

    /**
     * Returns the id of this AccountsConfigurations. The id field corresponds
     * to the database column kalaazu.kalaazu.accounts_configurations.id.
     *
     * @return the id of this AccountsConfigurations
     */
    Integer id();

    /**
     * Returns the accountsHangarsId of this AccountsConfigurations. The
     * accountsHangarsId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.accounts_hangars_id.
     *
     * @return the accountsHangarsId of this AccountsConfigurations
     */
    int accountsHangarsId();

    /**
     * Returns the configurationId of this AccountsConfigurations. The
     * configurationId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.configuration_id.
     *
     * @return the configurationId of this AccountsConfigurations
     */
    byte configurationId();

    /**
     * Returns the name of this AccountsConfigurations. The name field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.name.
     *
     * @return the name of this AccountsConfigurations
     */
    String name();

    /**
     * Returns the shield of this AccountsConfigurations. The shield field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.shield.
     *
     * @return the shield of this AccountsConfigurations
     */
    int shield();

    /**
     * Returns the speed of this AccountsConfigurations. The speed field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.speed.
     *
     * @return the speed of this AccountsConfigurations
     */
    short speed();

    /**
     * Returns the damage of this AccountsConfigurations. The damage field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.damage.
     *
     * @return the damage of this AccountsConfigurations
     */
    int damage();

    /**
     * s the id of this AccountsConfigurations. The id field corresponds to
     * the database column kalaazu.kalaazu.accounts_configurations.id.
     *
     * @param id to set of this AccountsConfigurations
     *
     * @return this AccountsConfigurations instance
     */
    AccountsConfigurations id(Integer id);

    /**
     * s the accountsHangarsId of this AccountsConfigurations. The
     * accountsHangarsId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.accounts_hangars_id.
     *
     * @param accountsHangarsId to set of this AccountsConfigurations
     *
     * @return this AccountsConfigurations instance
     */
    AccountsConfigurations accountsHangarsId(int accountsHangarsId);

    /**
     * s the configurationId of this AccountsConfigurations. The
     * configurationId field corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.configuration_id.
     *
     * @param configurationId to set of this AccountsConfigurations
     *
     * @return this AccountsConfigurations instance
     */
    AccountsConfigurations configurationId(byte configurationId);

    /**
     * s the name of this AccountsConfigurations. The name field corresponds
     * to the database column kalaazu.kalaazu.accounts_configurations.name.
     *
     * @param name to set of this AccountsConfigurations
     *
     * @return this AccountsConfigurations instance
     */
    AccountsConfigurations name(String name);

    /**
     * s the shield of this AccountsConfigurations. The shield field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.shield.
     *
     * @param shield to set of this AccountsConfigurations
     *
     * @return this AccountsConfigurations instance
     */
    AccountsConfigurations shield(int shield);

    /**
     * s the speed of this AccountsConfigurations. The speed field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.speed.
     *
     * @param speed to set of this AccountsConfigurations
     *
     * @return this AccountsConfigurations instance
     */
    AccountsConfigurations speed(short speed);

    /**
     * s the damage of this AccountsConfigurations. The damage field
     * corresponds to the database column
     * kalaazu.kalaazu.accounts_configurations.damage.
     *
     * @param damage to set of this AccountsConfigurations
     *
     * @return this AccountsConfigurations instance
     */
    AccountsConfigurations damage(int damage);

    /**
     * Queries the specified manager for the referenced AccountsHangars. If no
     * such AccountsHangars exists, an {@code NullPointerException} will be
     * thrown.
     *
     * @param foreignManager the manager to query for the entity
     *
     * @return the foreign entity referenced
     */
    AccountsHangars findAccountsHangarsId(Manager<AccountsHangars> foreignManager);

    enum Identifier implements ColumnIdentifier<AccountsConfigurations> {

        ID("id"),
        ACCOUNTS_HANGARS_ID("accounts_hangars_id"),
        CONFIGURATION_ID("configuration_id"),
        NAME("name"),
        SHIELD("shield"),
        SPEED("speed"),
        DAMAGE("damage");

        private final String columnName;

        private final TableIdentifier<AccountsConfigurations> tableIdentifier;

        Identifier(String columnName) {
            this.columnName = columnName;
            this.tableIdentifier = TableIdentifier.of(
                    getDbmsName(),
                    getSchemaName(),
                    getTableName()
            );
        }

        @Override
        public String getDbmsName() {
            return "kalaazu";
        }

        @Override
        public String getSchemaName() {
            return "kalaazu";
        }

        @Override
        public String getTableName() {
            return "accounts_configurations";
        }

        @Override
        public String getColumnName() {
            return this.columnName;
        }

        @Override
        public TableIdentifier<AccountsConfigurations> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}